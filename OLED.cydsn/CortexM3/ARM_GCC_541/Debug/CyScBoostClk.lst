ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyScBoostClk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CyScBoostClk_Start,"ax",%progbits
  20              		.align	2
  21              		.global	CyScBoostClk_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	CyScBoostClk_Start, %function
  25              	CyScBoostClk_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CyScBoostClk.c"
   1:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CyScBoostClk.c **** * File Name: CyScBoostClk.c
   3:Generated_Source\PSoC5/CyScBoostClk.c **** * Version 2.20
   4:Generated_Source\PSoC5/CyScBoostClk.c **** *
   5:Generated_Source\PSoC5/CyScBoostClk.c **** *  Description:
   6:Generated_Source\PSoC5/CyScBoostClk.c **** *   This file provides the source code to the API for the clock component.
   7:Generated_Source\PSoC5/CyScBoostClk.c **** *
   8:Generated_Source\PSoC5/CyScBoostClk.c **** *  Note:
   9:Generated_Source\PSoC5/CyScBoostClk.c **** *
  10:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  11:Generated_Source\PSoC5/CyScBoostClk.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/CyScBoostClk.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/CyScBoostClk.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/CyScBoostClk.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/CyScBoostClk.c **** 
  17:Generated_Source\PSoC5/CyScBoostClk.c **** #include <cydevice_trm.h>
  18:Generated_Source\PSoC5/CyScBoostClk.c **** #include "CyScBoostClk.h"
  19:Generated_Source\PSoC5/CyScBoostClk.c **** 
  20:Generated_Source\PSoC5/CyScBoostClk.c **** /* Clock Distribution registers. */
  21:Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:Generated_Source\PSoC5/CyScBoostClk.c **** #define BCFG2_MASK               (0x80u)
  24:Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:Generated_Source\PSoC5/CyScBoostClk.c **** 
  27:Generated_Source\PSoC5/CyScBoostClk.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:Generated_Source\PSoC5/CyScBoostClk.c **** 
  29:Generated_Source\PSoC5/CyScBoostClk.c **** 
  30:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 2


  31:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_Start
  32:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  33:Generated_Source\PSoC5/CyScBoostClk.c **** *
  34:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
  35:Generated_Source\PSoC5/CyScBoostClk.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:Generated_Source\PSoC5/CyScBoostClk.c **** *  "Start on Reset" option is enabled in the DWR.
  37:Generated_Source\PSoC5/CyScBoostClk.c **** *
  38:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
  39:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  40:Generated_Source\PSoC5/CyScBoostClk.c **** *
  41:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
  42:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  43:Generated_Source\PSoC5/CyScBoostClk.c **** *
  44:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
  45:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_Start(void) 
  46:Generated_Source\PSoC5/CyScBoostClk.c **** {
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  47:Generated_Source\PSoC5/CyScBoostClk.c ****     /* Set the bit to enable the clock. */
  48:Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_CLKEN |= CyScBoostClk_CLKEN_MASK;
  33              		.loc 1 48 0
  34 0000 054A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F00103 		orr	r3, r3, #1
  37 0008 1370     		strb	r3, [r2]
  49:Generated_Source\PSoC5/CyScBoostClk.c **** 	CyScBoostClk_CLKSTBY |= CyScBoostClk_CLKSTBY_MASK;
  38              		.loc 1 49 0
  39 000a 1032     		adds	r2, r2, #16
  40 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  41 000e 43F00103 		orr	r3, r3, #1
  42 0012 1370     		strb	r3, [r2]
  43 0014 7047     		bx	lr
  44              	.L3:
  45 0016 00BF     		.align	2
  46              	.L2:
  47 0018 A1430040 		.word	1073759137
  48              		.cfi_endproc
  49              	.LFE0:
  50              		.size	CyScBoostClk_Start, .-CyScBoostClk_Start
  51              		.section	.text.CyScBoostClk_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	CyScBoostClk_Stop
  54              		.thumb
  55              		.thumb_func
  56              		.type	CyScBoostClk_Stop, %function
  57              	CyScBoostClk_Stop:
  58              	.LFB1:
  50:Generated_Source\PSoC5/CyScBoostClk.c **** }
  51:Generated_Source\PSoC5/CyScBoostClk.c **** 
  52:Generated_Source\PSoC5/CyScBoostClk.c **** 
  53:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
  54:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_Stop
  55:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  56:Generated_Source\PSoC5/CyScBoostClk.c **** *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 3


  57:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
  58:Generated_Source\PSoC5/CyScBoostClk.c **** *  Stops the clock and returns immediately. This API does not require the
  59:Generated_Source\PSoC5/CyScBoostClk.c **** *  source clock to be running but may return before the hardware is actually
  60:Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled. If the settings of the clock are changed after calling this
  61:Generated_Source\PSoC5/CyScBoostClk.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:Generated_Source\PSoC5/CyScBoostClk.c **** *  glitch, use the StopBlock function.
  63:Generated_Source\PSoC5/CyScBoostClk.c **** *
  64:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
  65:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  66:Generated_Source\PSoC5/CyScBoostClk.c **** *
  67:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
  68:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  69:Generated_Source\PSoC5/CyScBoostClk.c **** *
  70:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
  71:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_Stop(void) 
  72:Generated_Source\PSoC5/CyScBoostClk.c **** {
  59              		.loc 1 72 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  73:Generated_Source\PSoC5/CyScBoostClk.c ****     /* Clear the bit to disable the clock. */
  74:Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_CLKEN &= (uint8)(~CyScBoostClk_CLKEN_MASK);
  64              		.loc 1 74 0
  65 0000 054A     		ldr	r2, .L5
  66 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67 0004 03F0FE03 		and	r3, r3, #254
  68 0008 1370     		strb	r3, [r2]
  75:Generated_Source\PSoC5/CyScBoostClk.c **** 	CyScBoostClk_CLKSTBY &= (uint8)(~CyScBoostClk_CLKSTBY_MASK);
  69              		.loc 1 75 0
  70 000a 1032     		adds	r2, r2, #16
  71 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  72 000e 03F0FE03 		and	r3, r3, #254
  73 0012 1370     		strb	r3, [r2]
  74 0014 7047     		bx	lr
  75              	.L6:
  76 0016 00BF     		.align	2
  77              	.L5:
  78 0018 A1430040 		.word	1073759137
  79              		.cfi_endproc
  80              	.LFE1:
  81              		.size	CyScBoostClk_Stop, .-CyScBoostClk_Stop
  82              		.section	.text.CyScBoostClk_StopBlock,"ax",%progbits
  83              		.align	2
  84              		.global	CyScBoostClk_StopBlock
  85              		.thumb
  86              		.thumb_func
  87              		.type	CyScBoostClk_StopBlock, %function
  88              	CyScBoostClk_StopBlock:
  89              	.LFB2:
  76:Generated_Source\PSoC5/CyScBoostClk.c **** }
  77:Generated_Source\PSoC5/CyScBoostClk.c **** 
  78:Generated_Source\PSoC5/CyScBoostClk.c **** 
  79:Generated_Source\PSoC5/CyScBoostClk.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:Generated_Source\PSoC5/CyScBoostClk.c **** 
  81:Generated_Source\PSoC5/CyScBoostClk.c **** 
  82:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 4


  83:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_StopBlock
  84:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  85:Generated_Source\PSoC5/CyScBoostClk.c **** *
  86:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
  87:Generated_Source\PSoC5/CyScBoostClk.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:Generated_Source\PSoC5/CyScBoostClk.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:Generated_Source\PSoC5/CyScBoostClk.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:Generated_Source\PSoC5/CyScBoostClk.c **** *  Note that the source clock must be running or this API will never return as
  91:Generated_Source\PSoC5/CyScBoostClk.c **** *  a stopped clock cannot be disabled.
  92:Generated_Source\PSoC5/CyScBoostClk.c **** *
  93:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
  94:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  95:Generated_Source\PSoC5/CyScBoostClk.c **** *
  96:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
  97:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  98:Generated_Source\PSoC5/CyScBoostClk.c **** *
  99:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 100:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_StopBlock(void) 
 101:Generated_Source\PSoC5/CyScBoostClk.c **** {
  90              		.loc 1 101 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 102:Generated_Source\PSoC5/CyScBoostClk.c ****     if ((CyScBoostClk_CLKEN & CyScBoostClk_CLKEN_MASK) != 0u)
  95              		.loc 1 102 0
  96 0000 164B     		ldr	r3, .L10
  97 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  98 0004 13F0010F 		tst	r3, #1
  99 0008 27D0     		beq	.L7
 100              	.LBB2:
 103:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 104:Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 105:Generated_Source\PSoC5/CyScBoostClk.c ****         uint16 oldDivider;
 106:Generated_Source\PSoC5/CyScBoostClk.c **** 
 107:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_LD = 0u;
 101              		.loc 1 107 0
 102 000a 1549     		ldr	r1, .L10+4
 103 000c 0023     		movs	r3, #0
 104 000e 0B70     		strb	r3, [r1]
 108:Generated_Source\PSoC5/CyScBoostClk.c **** 
 109:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear all the mask bits except ours. */
 110:Generated_Source\PSoC5/CyScBoostClk.c **** #if defined(CyScBoostClk__CFG3)
 111:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_AMASK = CyScBoostClk_CLKEN_MASK;
 105              		.loc 1 111 0
 106 0010 0120     		movs	r0, #1
 107 0012 144A     		ldr	r2, .L10+8
 108 0014 1070     		strb	r0, [r2]
 112:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_DMASK = 0x00u;
 109              		.loc 1 112 0
 110 0016 043A     		subs	r2, r2, #4
 111 0018 1370     		strb	r3, [r2]
 113:Generated_Source\PSoC5/CyScBoostClk.c **** #else
 114:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_DMASK = CyScBoostClk_CLKEN_MASK;
 115:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_AMASK = 0x00u;
 116:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* CyScBoostClk__CFG3 */
 117:Generated_Source\PSoC5/CyScBoostClk.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 5


 118:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear mask of bus clock. */
 119:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 112              		.loc 1 119 0
 113 001a 083A     		subs	r2, r2, #8
 114 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 115 001e 03F07F03 		and	r3, r3, #127
 116 0022 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/CyScBoostClk.c **** 
 121:Generated_Source\PSoC5/CyScBoostClk.c ****         oldDivider = CY_GET_REG16(CyScBoostClk_DIV_PTR);
 117              		.loc 1 121 0
 118 0024 104B     		ldr	r3, .L10+12
 119 0026 1A88     		ldrh	r2, [r3]
 120 0028 92B2     		uxth	r2, r2
 121              	.LVL0:
 122:Generated_Source\PSoC5/CyScBoostClk.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 122              		.loc 1 122 0
 123 002a FE3B     		subs	r3, r3, #254
 124 002c 1A80     		strh	r2, [r3]	@ movhi
 123:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 125              		.loc 1 123 0
 126 002e 0723     		movs	r3, #7
 127 0030 0B70     		strb	r3, [r1]
 128              	.L9:
 124:Generated_Source\PSoC5/CyScBoostClk.c **** 
 125:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Wait for clock to be disabled */
 126:Generated_Source\PSoC5/CyScBoostClk.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 129              		.loc 1 126 0 discriminator 1
 130 0032 0B4B     		ldr	r3, .L10+4
 131 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132 0036 13F0010F 		tst	r3, #1
 133 003a FAD1     		bne	.L9
 127:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:Generated_Source\PSoC5/CyScBoostClk.c **** 
 129:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear the bit to disable the clock. */
 130:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKEN &= (uint8)(~CyScBoostClk_CLKEN_MASK);
 134              		.loc 1 130 0
 135 003c 0749     		ldr	r1, .L10
 136 003e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 137 0040 03F0FE03 		and	r3, r3, #254
 138 0044 0B70     		strb	r3, [r1]
 131:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKSTBY &= (uint8)(~CyScBoostClk_CLKSTBY_MASK);
 139              		.loc 1 131 0
 140 0046 1031     		adds	r1, r1, #16
 141 0048 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 142 004a 03F0FE03 		and	r3, r3, #254
 143 004e 0B70     		strb	r3, [r1]
 132:Generated_Source\PSoC5/CyScBoostClk.c **** 
 133:Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 134:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear the disable bit */
 135:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_LD = 0x00u;
 144              		.loc 1 135 0
 145 0050 0021     		movs	r1, #0
 146 0052 034B     		ldr	r3, .L10+4
 147 0054 1970     		strb	r1, [r3]
 136:Generated_Source\PSoC5/CyScBoostClk.c ****         CY_SET_REG16(CyScBoostClk_DIV_PTR, oldDivider);
 148              		.loc 1 136 0
 149 0056 FF33     		adds	r3, r3, #255
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 6


 150 0058 1A80     		strh	r2, [r3]	@ movhi
 151              	.LVL1:
 152              	.L7:
 153 005a 7047     		bx	lr
 154              	.L11:
 155              		.align	2
 156              	.L10:
 157 005c A1430040 		.word	1073759137
 158 0060 01400040 		.word	1073758209
 159 0064 14400040 		.word	1073758228
 160 0068 00410040 		.word	1073758464
 161              	.LBE2:
 162              		.cfi_endproc
 163              	.LFE2:
 164              		.size	CyScBoostClk_StopBlock, .-CyScBoostClk_StopBlock
 165              		.section	.text.CyScBoostClk_StandbyPower,"ax",%progbits
 166              		.align	2
 167              		.global	CyScBoostClk_StandbyPower
 168              		.thumb
 169              		.thumb_func
 170              		.type	CyScBoostClk_StandbyPower, %function
 171              	CyScBoostClk_StandbyPower:
 172              	.LFB3:
 137:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 139:Generated_Source\PSoC5/CyScBoostClk.c **** }
 140:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:Generated_Source\PSoC5/CyScBoostClk.c **** 
 142:Generated_Source\PSoC5/CyScBoostClk.c **** 
 143:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 144:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_StandbyPower
 145:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 146:Generated_Source\PSoC5/CyScBoostClk.c **** *
 147:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 148:Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets whether the clock is active in standby mode.
 149:Generated_Source\PSoC5/CyScBoostClk.c **** *
 150:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 151:Generated_Source\PSoC5/CyScBoostClk.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:Generated_Source\PSoC5/CyScBoostClk.c **** *
 153:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 154:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 155:Generated_Source\PSoC5/CyScBoostClk.c **** *
 156:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 157:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_StandbyPower(uint8 state) 
 158:Generated_Source\PSoC5/CyScBoostClk.c **** {
 173              		.loc 1 158 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 159:Generated_Source\PSoC5/CyScBoostClk.c ****     if(state == 0u)
 179              		.loc 1 159 0
 180 0000 28B9     		cbnz	r0, .L13
 160:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 161:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKSTBY &= (uint8)(~CyScBoostClk_CLKSTBY_MASK);
 181              		.loc 1 161 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 7


 182 0002 064A     		ldr	r2, .L15
 183 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 184 0006 03F0FE03 		and	r3, r3, #254
 185 000a 1370     		strb	r3, [r2]
 186 000c 7047     		bx	lr
 187              	.L13:
 162:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 163:Generated_Source\PSoC5/CyScBoostClk.c ****     else
 164:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 165:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKSTBY |= CyScBoostClk_CLKSTBY_MASK;
 188              		.loc 1 165 0
 189 000e 034A     		ldr	r2, .L15
 190 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 191 0012 43F00103 		orr	r3, r3, #1
 192 0016 1370     		strb	r3, [r2]
 193 0018 7047     		bx	lr
 194              	.L16:
 195 001a 00BF     		.align	2
 196              	.L15:
 197 001c B1430040 		.word	1073759153
 198              		.cfi_endproc
 199              	.LFE3:
 200              		.size	CyScBoostClk_StandbyPower, .-CyScBoostClk_StandbyPower
 201              		.section	.text.CyScBoostClk_GetDividerRegister,"ax",%progbits
 202              		.align	2
 203              		.global	CyScBoostClk_GetDividerRegister
 204              		.thumb
 205              		.thumb_func
 206              		.type	CyScBoostClk_GetDividerRegister, %function
 207              	CyScBoostClk_GetDividerRegister:
 208              	.LFB5:
 166:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 167:Generated_Source\PSoC5/CyScBoostClk.c **** }
 168:Generated_Source\PSoC5/CyScBoostClk.c **** 
 169:Generated_Source\PSoC5/CyScBoostClk.c **** 
 170:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 171:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetDividerRegister
 172:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 173:Generated_Source\PSoC5/CyScBoostClk.c **** *
 174:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 175:Generated_Source\PSoC5/CyScBoostClk.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:Generated_Source\PSoC5/CyScBoostClk.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:Generated_Source\PSoC5/CyScBoostClk.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:Generated_Source\PSoC5/CyScBoostClk.c **** *
 180:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 181:Generated_Source\PSoC5/CyScBoostClk.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:Generated_Source\PSoC5/CyScBoostClk.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:Generated_Source\PSoC5/CyScBoostClk.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:Generated_Source\PSoC5/CyScBoostClk.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:Generated_Source\PSoC5/CyScBoostClk.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:Generated_Source\PSoC5/CyScBoostClk.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:Generated_Source\PSoC5/CyScBoostClk.c **** *   cycle.
 188:Generated_Source\PSoC5/CyScBoostClk.c **** *
 189:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 190:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 191:Generated_Source\PSoC5/CyScBoostClk.c **** *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 8


 192:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 193:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:Generated_Source\PSoC5/CyScBoostClk.c ****                                 
 195:Generated_Source\PSoC5/CyScBoostClk.c **** {
 196:Generated_Source\PSoC5/CyScBoostClk.c ****     uint8 enabled;
 197:Generated_Source\PSoC5/CyScBoostClk.c **** 
 198:Generated_Source\PSoC5/CyScBoostClk.c ****     uint8 currSrc = CyScBoostClk_GetSourceRegister();
 199:Generated_Source\PSoC5/CyScBoostClk.c ****     uint16 oldDivider = CyScBoostClk_GetDividerRegister();
 200:Generated_Source\PSoC5/CyScBoostClk.c **** 
 201:Generated_Source\PSoC5/CyScBoostClk.c ****     if (clkDivider != oldDivider)
 202:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 203:Generated_Source\PSoC5/CyScBoostClk.c ****         enabled = CyScBoostClk_CLKEN & CyScBoostClk_CLKEN_MASK;
 204:Generated_Source\PSoC5/CyScBoostClk.c **** 
 205:Generated_Source\PSoC5/CyScBoostClk.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:Generated_Source\PSoC5/CyScBoostClk.c ****         {
 207:Generated_Source\PSoC5/CyScBoostClk.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:Generated_Source\PSoC5/CyScBoostClk.c ****             if (oldDivider == 0u)
 209:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 210:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* divider is ignored while SSS is set.                                     */
 213:Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CyScBoostClk_DIV_PTR, clkDivider);
 214:Generated_Source\PSoC5/CyScBoostClk.c ****                 CyScBoostClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 216:Generated_Source\PSoC5/CyScBoostClk.c ****             else
 217:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 218:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* it without bothering with the shadow load.                               */
 220:Generated_Source\PSoC5/CyScBoostClk.c ****                 CyScBoostClk_MOD_SRC |= CYCLK_SSS;
 221:Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CyScBoostClk_DIV_PTR, clkDivider);
 222:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 223:Generated_Source\PSoC5/CyScBoostClk.c ****         }
 224:Generated_Source\PSoC5/CyScBoostClk.c ****         else
 225:Generated_Source\PSoC5/CyScBoostClk.c ****         {
 226:Generated_Source\PSoC5/CyScBoostClk.c **** 			
 227:Generated_Source\PSoC5/CyScBoostClk.c ****             if (enabled != 0u)
 228:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 229:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_LD = 0x00u;
 230:Generated_Source\PSoC5/CyScBoostClk.c **** 
 231:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Clear all the mask bits except ours. */
 232:Generated_Source\PSoC5/CyScBoostClk.c **** #if defined(CyScBoostClk__CFG3)
 233:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_AMASK = CyScBoostClk_CLKEN_MASK;
 234:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_DMASK = 0x00u;
 235:Generated_Source\PSoC5/CyScBoostClk.c **** #else
 236:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_DMASK = CyScBoostClk_CLKEN_MASK;
 237:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_AMASK = 0x00u;
 238:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* CyScBoostClk__CFG3 */
 239:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Clear mask of bus clock. */
 240:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:Generated_Source\PSoC5/CyScBoostClk.c **** 
 242:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:Generated_Source\PSoC5/CyScBoostClk.c ****                 if (((CyScBoostClk_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:Generated_Source\PSoC5/CyScBoostClk.c ****                 {
 245:Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 246:Generated_Source\PSoC5/CyScBoostClk.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:Generated_Source\PSoC5/CyScBoostClk.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:Generated_Source\PSoC5/CyScBoostClk.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 9


 249:Generated_Source\PSoC5/CyScBoostClk.c ****                     /* Wait for clock to be disabled */
 250:Generated_Source\PSoC5/CyScBoostClk.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:Generated_Source\PSoC5/CyScBoostClk.c **** 
 253:Generated_Source\PSoC5/CyScBoostClk.c ****                     CyScBoostClk_CLKEN &= (uint8)(~CyScBoostClk_CLKEN_MASK);
 254:Generated_Source\PSoC5/CyScBoostClk.c **** 
 255:Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 256:Generated_Source\PSoC5/CyScBoostClk.c ****                     /* Clear the disable bit */
 257:Generated_Source\PSoC5/CyScBoostClk.c ****                     CLK_DIST_LD = 0x00u;
 258:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:Generated_Source\PSoC5/CyScBoostClk.c ****                 }
 260:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 261:Generated_Source\PSoC5/CyScBoostClk.c **** 
 262:Generated_Source\PSoC5/CyScBoostClk.c ****             /* Load divide value. */
 263:Generated_Source\PSoC5/CyScBoostClk.c ****             if ((CyScBoostClk_CLKEN & CyScBoostClk_CLKEN_MASK) != 0u)
 264:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 265:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:Generated_Source\PSoC5/CyScBoostClk.c **** 
 268:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:Generated_Source\PSoC5/CyScBoostClk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 271:Generated_Source\PSoC5/CyScBoostClk.c ****             else
 272:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 273:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* If the clock is disabled, set the divider directly */
 274:Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CyScBoostClk_DIV_PTR, clkDivider);
 275:Generated_Source\PSoC5/CyScBoostClk.c **** 				CyScBoostClk_CLKEN |= enabled;
 276:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 277:Generated_Source\PSoC5/CyScBoostClk.c ****         }
 278:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 279:Generated_Source\PSoC5/CyScBoostClk.c **** }
 280:Generated_Source\PSoC5/CyScBoostClk.c **** 
 281:Generated_Source\PSoC5/CyScBoostClk.c **** 
 282:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 283:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetDividerRegister
 284:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 285:Generated_Source\PSoC5/CyScBoostClk.c **** *
 286:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 287:Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the clock divider register value.
 288:Generated_Source\PSoC5/CyScBoostClk.c **** *
 289:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 290:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 291:Generated_Source\PSoC5/CyScBoostClk.c **** *
 292:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 293:Generated_Source\PSoC5/CyScBoostClk.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:Generated_Source\PSoC5/CyScBoostClk.c **** *  divide by 2, the return value will be 1.
 295:Generated_Source\PSoC5/CyScBoostClk.c **** *
 296:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 297:Generated_Source\PSoC5/CyScBoostClk.c **** uint16 CyScBoostClk_GetDividerRegister(void) 
 298:Generated_Source\PSoC5/CyScBoostClk.c **** {
 209              		.loc 1 298 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 299:Generated_Source\PSoC5/CyScBoostClk.c ****     return CY_GET_REG16(CyScBoostClk_DIV_PTR);
 214              		.loc 1 299 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 10


 215 0000 014B     		ldr	r3, .L18
 216 0002 1888     		ldrh	r0, [r3]
 300:Generated_Source\PSoC5/CyScBoostClk.c **** }
 217              		.loc 1 300 0
 218 0004 80B2     		uxth	r0, r0
 219 0006 7047     		bx	lr
 220              	.L19:
 221              		.align	2
 222              	.L18:
 223 0008 00410040 		.word	1073758464
 224              		.cfi_endproc
 225              	.LFE5:
 226              		.size	CyScBoostClk_GetDividerRegister, .-CyScBoostClk_GetDividerRegister
 227              		.section	.text.CyScBoostClk_SetModeRegister,"ax",%progbits
 228              		.align	2
 229              		.global	CyScBoostClk_SetModeRegister
 230              		.thumb
 231              		.thumb_func
 232              		.type	CyScBoostClk_SetModeRegister, %function
 233              	CyScBoostClk_SetModeRegister:
 234              	.LFB6:
 301:Generated_Source\PSoC5/CyScBoostClk.c **** 
 302:Generated_Source\PSoC5/CyScBoostClk.c **** 
 303:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 304:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetModeRegister
 305:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 306:Generated_Source\PSoC5/CyScBoostClk.c **** *
 307:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 308:Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:Generated_Source\PSoC5/CyScBoostClk.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:Generated_Source\PSoC5/CyScBoostClk.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled before changing the mode.
 312:Generated_Source\PSoC5/CyScBoostClk.c **** *
 313:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 314:Generated_Source\PSoC5/CyScBoostClk.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:Generated_Source\PSoC5/CyScBoostClk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:Generated_Source\PSoC5/CyScBoostClk.c **** *                 occur when the divider count reaches half of the divide
 318:Generated_Source\PSoC5/CyScBoostClk.c **** *                 value.
 319:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:Generated_Source\PSoC5/CyScBoostClk.c **** *                 is asserted for approximately half of its period. When
 321:Generated_Source\PSoC5/CyScBoostClk.c **** *                 disabled, the output clock is asserted for one period of the
 322:Generated_Source\PSoC5/CyScBoostClk.c **** *                 source clock.
 323:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:Generated_Source\PSoC5/CyScBoostClk.c **** *                 be enabled for all synchronous clocks.
 325:Generated_Source\PSoC5/CyScBoostClk.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:Generated_Source\PSoC5/CyScBoostClk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:Generated_Source\PSoC5/CyScBoostClk.c **** *
 328:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 329:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 330:Generated_Source\PSoC5/CyScBoostClk.c **** *
 331:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 332:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetModeRegister(uint8 modeBitMask) 
 333:Generated_Source\PSoC5/CyScBoostClk.c **** {
 235              		.loc 1 333 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 11


 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL3:
 334:Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_MOD_SRC |= modeBitMask & (uint8)CyScBoostClk_MODE_MASK;
 241              		.loc 1 334 0
 242 0000 034B     		ldr	r3, .L21
 243 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 244 0004 00F0F800 		and	r0, r0, #248
 245              	.LVL4:
 246 0008 1043     		orrs	r0, r0, r2
 247 000a 1870     		strb	r0, [r3]
 248 000c 7047     		bx	lr
 249              	.L22:
 250 000e 00BF     		.align	2
 251              	.L21:
 252 0010 02410040 		.word	1073758466
 253              		.cfi_endproc
 254              	.LFE6:
 255              		.size	CyScBoostClk_SetModeRegister, .-CyScBoostClk_SetModeRegister
 256              		.section	.text.CyScBoostClk_ClearModeRegister,"ax",%progbits
 257              		.align	2
 258              		.global	CyScBoostClk_ClearModeRegister
 259              		.thumb
 260              		.thumb_func
 261              		.type	CyScBoostClk_ClearModeRegister, %function
 262              	CyScBoostClk_ClearModeRegister:
 263              	.LFB7:
 335:Generated_Source\PSoC5/CyScBoostClk.c **** }
 336:Generated_Source\PSoC5/CyScBoostClk.c **** 
 337:Generated_Source\PSoC5/CyScBoostClk.c **** 
 338:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 339:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_ClearModeRegister
 340:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 341:Generated_Source\PSoC5/CyScBoostClk.c **** *
 342:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 343:Generated_Source\PSoC5/CyScBoostClk.c **** *  Clears flags that control the operating mode of the clock. This function
 344:Generated_Source\PSoC5/CyScBoostClk.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:Generated_Source\PSoC5/CyScBoostClk.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled before changing the mode.
 347:Generated_Source\PSoC5/CyScBoostClk.c **** *
 348:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 349:Generated_Source\PSoC5/CyScBoostClk.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:Generated_Source\PSoC5/CyScBoostClk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:Generated_Source\PSoC5/CyScBoostClk.c **** *                 occur when the divider count reaches half of the divide
 353:Generated_Source\PSoC5/CyScBoostClk.c **** *                 value.
 354:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:Generated_Source\PSoC5/CyScBoostClk.c **** *                 is asserted for approximately half of its period. When
 356:Generated_Source\PSoC5/CyScBoostClk.c **** *                 disabled, the output clock is asserted for one period of the
 357:Generated_Source\PSoC5/CyScBoostClk.c **** *                 source clock.
 358:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:Generated_Source\PSoC5/CyScBoostClk.c **** *                 be enabled for all synchronous clocks.
 360:Generated_Source\PSoC5/CyScBoostClk.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:Generated_Source\PSoC5/CyScBoostClk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:Generated_Source\PSoC5/CyScBoostClk.c **** *
 363:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 364:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 12


 365:Generated_Source\PSoC5/CyScBoostClk.c **** *
 366:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_ClearModeRegister(uint8 modeBitMask) 
 368:Generated_Source\PSoC5/CyScBoostClk.c **** {
 264              		.loc 1 368 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL5:
 369:Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(CyScBoostClk_MODE_MASK));
 270              		.loc 1 369 0
 271 0000 044B     		ldr	r3, .L24
 272 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 273 0004 C043     		mvns	r0, r0
 274              	.LVL6:
 275 0006 C0B2     		uxtb	r0, r0
 276 0008 40F00700 		orr	r0, r0, #7
 277 000c 1040     		ands	r0, r0, r2
 278 000e 1870     		strb	r0, [r3]
 279 0010 7047     		bx	lr
 280              	.L25:
 281 0012 00BF     		.align	2
 282              	.L24:
 283 0014 02410040 		.word	1073758466
 284              		.cfi_endproc
 285              	.LFE7:
 286              		.size	CyScBoostClk_ClearModeRegister, .-CyScBoostClk_ClearModeRegister
 287              		.section	.text.CyScBoostClk_GetModeRegister,"ax",%progbits
 288              		.align	2
 289              		.global	CyScBoostClk_GetModeRegister
 290              		.thumb
 291              		.thumb_func
 292              		.type	CyScBoostClk_GetModeRegister, %function
 293              	CyScBoostClk_GetModeRegister:
 294              	.LFB8:
 370:Generated_Source\PSoC5/CyScBoostClk.c **** }
 371:Generated_Source\PSoC5/CyScBoostClk.c **** 
 372:Generated_Source\PSoC5/CyScBoostClk.c **** 
 373:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 374:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetModeRegister
 375:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 376:Generated_Source\PSoC5/CyScBoostClk.c **** *
 377:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 378:Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the clock mode register value.
 379:Generated_Source\PSoC5/CyScBoostClk.c **** *
 380:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 381:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 382:Generated_Source\PSoC5/CyScBoostClk.c **** *
 383:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 384:Generated_Source\PSoC5/CyScBoostClk.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:Generated_Source\PSoC5/CyScBoostClk.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:Generated_Source\PSoC5/CyScBoostClk.c **** *
 387:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 388:Generated_Source\PSoC5/CyScBoostClk.c **** uint8 CyScBoostClk_GetModeRegister(void) 
 389:Generated_Source\PSoC5/CyScBoostClk.c **** {
 295              		.loc 1 389 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 13


 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 390:Generated_Source\PSoC5/CyScBoostClk.c ****     return CyScBoostClk_MOD_SRC & (uint8)(CyScBoostClk_MODE_MASK);
 300              		.loc 1 390 0
 301 0000 024B     		ldr	r3, .L27
 302 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:Generated_Source\PSoC5/CyScBoostClk.c **** }
 303              		.loc 1 391 0
 304 0004 00F0F800 		and	r0, r0, #248
 305 0008 7047     		bx	lr
 306              	.L28:
 307 000a 00BF     		.align	2
 308              	.L27:
 309 000c 02410040 		.word	1073758466
 310              		.cfi_endproc
 311              	.LFE8:
 312              		.size	CyScBoostClk_GetModeRegister, .-CyScBoostClk_GetModeRegister
 313              		.section	.text.CyScBoostClk_GetSourceRegister,"ax",%progbits
 314              		.align	2
 315              		.global	CyScBoostClk_GetSourceRegister
 316              		.thumb
 317              		.thumb_func
 318              		.type	CyScBoostClk_GetSourceRegister, %function
 319              	CyScBoostClk_GetSourceRegister:
 320              	.LFB10:
 392:Generated_Source\PSoC5/CyScBoostClk.c **** 
 393:Generated_Source\PSoC5/CyScBoostClk.c **** 
 394:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 395:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetSourceRegister
 396:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 397:Generated_Source\PSoC5/CyScBoostClk.c **** *
 398:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 399:Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:Generated_Source\PSoC5/CyScBoostClk.c **** *  changing the source. The old and new clock sources must be running.
 401:Generated_Source\PSoC5/CyScBoostClk.c **** *
 402:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 403:Generated_Source\PSoC5/CyScBoostClk.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:Generated_Source\PSoC5/CyScBoostClk.c **** *   following input sources:
 405:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_IMO
 407:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_XTALM
 408:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_ILO
 409:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_PLL
 410:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_XTALK
 411:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:Generated_Source\PSoC5/CyScBoostClk.c **** *   See the Technical Reference Manual for details on clock sources.
 414:Generated_Source\PSoC5/CyScBoostClk.c **** *
 415:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 416:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 417:Generated_Source\PSoC5/CyScBoostClk.c **** *
 418:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 419:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetSourceRegister(uint8 clkSource) 
 420:Generated_Source\PSoC5/CyScBoostClk.c **** {
 421:Generated_Source\PSoC5/CyScBoostClk.c ****     uint16 currDiv = CyScBoostClk_GetDividerRegister();
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 14


 422:Generated_Source\PSoC5/CyScBoostClk.c ****     uint8 oldSrc = CyScBoostClk_GetSourceRegister();
 423:Generated_Source\PSoC5/CyScBoostClk.c **** 
 424:Generated_Source\PSoC5/CyScBoostClk.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:Generated_Source\PSoC5/CyScBoostClk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 427:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:Generated_Source\PSoC5/CyScBoostClk.c ****         /* then set the source so we are consistent.                                */
 429:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC |= CYCLK_SSS;
 430:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC =
 431:Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 432:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 433:Generated_Source\PSoC5/CyScBoostClk.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:Generated_Source\PSoC5/CyScBoostClk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 436:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:Generated_Source\PSoC5/CyScBoostClk.c ****         /* lock when we clear SSS.                                                  */
 438:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC =
 439:Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 440:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 442:Generated_Source\PSoC5/CyScBoostClk.c ****     else
 443:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 444:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC =
 445:Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 446:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 447:Generated_Source\PSoC5/CyScBoostClk.c **** }
 448:Generated_Source\PSoC5/CyScBoostClk.c **** 
 449:Generated_Source\PSoC5/CyScBoostClk.c **** 
 450:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetSourceRegister
 452:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 453:Generated_Source\PSoC5/CyScBoostClk.c **** *
 454:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 455:Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the input source of the clock.
 456:Generated_Source\PSoC5/CyScBoostClk.c **** *
 457:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 458:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 459:Generated_Source\PSoC5/CyScBoostClk.c **** *
 460:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 461:Generated_Source\PSoC5/CyScBoostClk.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:Generated_Source\PSoC5/CyScBoostClk.c **** *
 463:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 464:Generated_Source\PSoC5/CyScBoostClk.c **** uint8 CyScBoostClk_GetSourceRegister(void) 
 465:Generated_Source\PSoC5/CyScBoostClk.c **** {
 321              		.loc 1 465 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 466:Generated_Source\PSoC5/CyScBoostClk.c ****     return CyScBoostClk_MOD_SRC & CyScBoostClk_SRC_SEL_MSK;
 326              		.loc 1 466 0
 327 0000 024B     		ldr	r3, .L30
 328 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:Generated_Source\PSoC5/CyScBoostClk.c **** }
 329              		.loc 1 467 0
 330 0004 00F00700 		and	r0, r0, #7
 331 0008 7047     		bx	lr
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 15


 332              	.L31:
 333 000a 00BF     		.align	2
 334              	.L30:
 335 000c 02410040 		.word	1073758466
 336              		.cfi_endproc
 337              	.LFE10:
 338              		.size	CyScBoostClk_GetSourceRegister, .-CyScBoostClk_GetSourceRegister
 339              		.section	.text.CyScBoostClk_SetDividerRegister,"ax",%progbits
 340              		.align	2
 341              		.global	CyScBoostClk_SetDividerRegister
 342              		.thumb
 343              		.thumb_func
 344              		.type	CyScBoostClk_SetDividerRegister, %function
 345              	CyScBoostClk_SetDividerRegister:
 346              	.LFB4:
 195:Generated_Source\PSoC5/CyScBoostClk.c ****     uint8 enabled;
 347              		.loc 1 195 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              	.LVL7:
 352 0000 70B5     		push	{r4, r5, r6, lr}
 353              		.cfi_def_cfa_offset 16
 354              		.cfi_offset 4, -16
 355              		.cfi_offset 5, -12
 356              		.cfi_offset 6, -8
 357              		.cfi_offset 14, -4
 358 0002 0546     		mov	r5, r0
 359 0004 0E46     		mov	r6, r1
 198:Generated_Source\PSoC5/CyScBoostClk.c ****     uint16 oldDivider = CyScBoostClk_GetDividerRegister();
 360              		.loc 1 198 0
 361 0006 FFF7FEFF 		bl	CyScBoostClk_GetSourceRegister
 362              	.LVL8:
 363 000a 0446     		mov	r4, r0
 364              	.LVL9:
 199:Generated_Source\PSoC5/CyScBoostClk.c **** 
 365              		.loc 1 199 0
 366 000c FFF7FEFF 		bl	CyScBoostClk_GetDividerRegister
 367              	.LVL10:
 201:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 368              		.loc 1 201 0
 369 0010 A842     		cmp	r0, r5
 370 0012 56D0     		beq	.L32
 203:Generated_Source\PSoC5/CyScBoostClk.c **** 
 371              		.loc 1 203 0
 372 0014 2B4B     		ldr	r3, .L45
 373 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 374 0018 03F00102 		and	r2, r3, #1
 375              	.LVL11:
 205:Generated_Source\PSoC5/CyScBoostClk.c ****         {
 376              		.loc 1 205 0
 377 001c 94B9     		cbnz	r4, .L34
 205:Generated_Source\PSoC5/CyScBoostClk.c ****         {
 378              		.loc 1 205 0 is_stmt 0 discriminator 1
 379 001e 00B1     		cbz	r0, .L35
 205:Generated_Source\PSoC5/CyScBoostClk.c ****         {
 380              		.loc 1 205 0 discriminator 2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 16


 381 0020 85B9     		cbnz	r5, .L34
 382              	.L35:
 208:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 383              		.loc 1 208 0 is_stmt 1
 384 0022 38B9     		cbnz	r0, .L36
 213:Generated_Source\PSoC5/CyScBoostClk.c ****                 CyScBoostClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 385              		.loc 1 213 0
 386 0024 284B     		ldr	r3, .L45+4
 387 0026 1D80     		strh	r5, [r3]	@ movhi
 214:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 388              		.loc 1 214 0
 389 0028 284A     		ldr	r2, .L45+8
 390              	.LVL12:
 391 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 392 002c 03F0BF03 		and	r3, r3, #191
 393 0030 1370     		strb	r3, [r2]
 394 0032 70BD     		pop	{r4, r5, r6, pc}
 395              	.LVL13:
 396              	.L36:
 220:Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CyScBoostClk_DIV_PTR, clkDivider);
 397              		.loc 1 220 0
 398 0034 254A     		ldr	r2, .L45+8
 399              	.LVL14:
 400 0036 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 401              	.LVL15:
 402 0038 43F04003 		orr	r3, r3, #64
 403 003c 1370     		strb	r3, [r2]
 221:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 404              		.loc 1 221 0
 405 003e 224B     		ldr	r3, .L45+4
 406 0040 1D80     		strh	r5, [r3]	@ movhi
 407 0042 70BD     		pop	{r4, r5, r6, pc}
 408              	.LVL16:
 409              	.L34:
 227:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 410              		.loc 1 227 0
 411 0044 22B3     		cbz	r2, .L37
 229:Generated_Source\PSoC5/CyScBoostClk.c **** 
 412              		.loc 1 229 0
 413 0046 0023     		movs	r3, #0
 414 0048 2149     		ldr	r1, .L45+12
 415 004a 0B70     		strb	r3, [r1]
 233:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_DMASK = 0x00u;
 416              		.loc 1 233 0
 417 004c 0124     		movs	r4, #1
 418              	.LVL17:
 419 004e 1331     		adds	r1, r1, #19
 420 0050 0C70     		strb	r4, [r1]
 234:Generated_Source\PSoC5/CyScBoostClk.c **** #else
 421              		.loc 1 234 0
 422 0052 0439     		subs	r1, r1, #4
 423 0054 0B70     		strb	r3, [r1]
 240:Generated_Source\PSoC5/CyScBoostClk.c **** 
 424              		.loc 1 240 0
 425 0056 0839     		subs	r1, r1, #8
 426 0058 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 427 005a 03F07F03 		and	r3, r3, #127
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 17


 428 005e 0B70     		strb	r3, [r1]
 243:Generated_Source\PSoC5/CyScBoostClk.c ****                 {
 429              		.loc 1 243 0
 430 0060 1A4B     		ldr	r3, .L45+8
 431 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432 0064 13F0080F 		tst	r3, #8
 433 0068 00D0     		beq	.L38
 243:Generated_Source\PSoC5/CyScBoostClk.c ****                 {
 434              		.loc 1 243 0 is_stmt 0 discriminator 1
 435 006a 8DB9     		cbnz	r5, .L37
 436              	.L38:
 246:Generated_Source\PSoC5/CyScBoostClk.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 437              		.loc 1 246 0 is_stmt 1
 438 006c 194B     		ldr	r3, .L45+16
 439 006e 1880     		strh	r0, [r3]	@ movhi
 247:Generated_Source\PSoC5/CyScBoostClk.c **** 
 440              		.loc 1 247 0
 441 0070 0721     		movs	r1, #7
 442 0072 013B     		subs	r3, r3, #1
 443 0074 1970     		strb	r1, [r3]
 444              	.L39:
 250:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 445              		.loc 1 250 0 discriminator 1
 446 0076 164B     		ldr	r3, .L45+12
 447 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 448 007a 13F0010F 		tst	r3, #1
 449 007e FAD1     		bne	.L39
 253:Generated_Source\PSoC5/CyScBoostClk.c **** 
 450              		.loc 1 253 0
 451 0080 1049     		ldr	r1, .L45
 452 0082 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 453 0084 03F0FE03 		and	r3, r3, #254
 454 0088 0B70     		strb	r3, [r1]
 257:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 455              		.loc 1 257 0
 456 008a 0021     		movs	r1, #0
 457 008c 104B     		ldr	r3, .L45+12
 458 008e 1970     		strb	r1, [r3]
 459              	.L37:
 263:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 460              		.loc 1 263 0
 461 0090 0C4B     		ldr	r3, .L45
 462 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 463 0094 13F0010F 		tst	r3, #1
 464 0098 0DD0     		beq	.L40
 266:Generated_Source\PSoC5/CyScBoostClk.c **** 
 465              		.loc 1 266 0
 466 009a 0E4B     		ldr	r3, .L45+16
 467 009c 1D80     		strh	r5, [r3]	@ movhi
 268:Generated_Source\PSoC5/CyScBoostClk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 468              		.loc 1 268 0
 469 009e 0EB1     		cbz	r6, .L43
 470 00a0 0322     		movs	r2, #3
 471              	.LVL18:
 472 00a2 00E0     		b	.L41
 473              	.LVL19:
 474              	.L43:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 18


 475 00a4 0122     		movs	r2, #1
 476              	.LVL20:
 477              	.L41:
 268:Generated_Source\PSoC5/CyScBoostClk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 478              		.loc 1 268 0 is_stmt 0 discriminator 4
 479 00a6 0A4B     		ldr	r3, .L45+12
 480 00a8 1A70     		strb	r2, [r3]
 481              	.L42:
 269:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 482              		.loc 1 269 0 is_stmt 1 discriminator 1
 483 00aa 094B     		ldr	r3, .L45+12
 484 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 00ae 13F0010F 		tst	r3, #1
 486 00b2 FAD1     		bne	.L42
 487 00b4 70BD     		pop	{r4, r5, r6, pc}
 488              	.LVL21:
 489              	.L40:
 274:Generated_Source\PSoC5/CyScBoostClk.c **** 				CyScBoostClk_CLKEN |= enabled;
 490              		.loc 1 274 0
 491 00b6 044B     		ldr	r3, .L45+4
 492 00b8 1D80     		strh	r5, [r3]	@ movhi
 275:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 493              		.loc 1 275 0
 494 00ba 0249     		ldr	r1, .L45
 495 00bc 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 496 00be 1343     		orrs	r3, r3, r2
 497 00c0 0B70     		strb	r3, [r1]
 498              	.LVL22:
 499              	.L32:
 500 00c2 70BD     		pop	{r4, r5, r6, pc}
 501              	.L46:
 502              		.align	2
 503              	.L45:
 504 00c4 A1430040 		.word	1073759137
 505 00c8 00410040 		.word	1073758464
 506 00cc 02410040 		.word	1073758466
 507 00d0 01400040 		.word	1073758209
 508 00d4 02400040 		.word	1073758210
 509              		.cfi_endproc
 510              	.LFE4:
 511              		.size	CyScBoostClk_SetDividerRegister, .-CyScBoostClk_SetDividerRegister
 512              		.section	.text.CyScBoostClk_SetSourceRegister,"ax",%progbits
 513              		.align	2
 514              		.global	CyScBoostClk_SetSourceRegister
 515              		.thumb
 516              		.thumb_func
 517              		.type	CyScBoostClk_SetSourceRegister, %function
 518              	CyScBoostClk_SetSourceRegister:
 519              	.LFB9:
 420:Generated_Source\PSoC5/CyScBoostClk.c ****     uint16 currDiv = CyScBoostClk_GetDividerRegister();
 520              		.loc 1 420 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              	.LVL23:
 525 0000 38B5     		push	{r3, r4, r5, lr}
 526              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 19


 527              		.cfi_offset 3, -16
 528              		.cfi_offset 4, -12
 529              		.cfi_offset 5, -8
 530              		.cfi_offset 14, -4
 531 0002 0446     		mov	r4, r0
 421:Generated_Source\PSoC5/CyScBoostClk.c ****     uint8 oldSrc = CyScBoostClk_GetSourceRegister();
 532              		.loc 1 421 0
 533 0004 FFF7FEFF 		bl	CyScBoostClk_GetDividerRegister
 534              	.LVL24:
 535 0008 0546     		mov	r5, r0
 536              	.LVL25:
 422:Generated_Source\PSoC5/CyScBoostClk.c **** 
 537              		.loc 1 422 0
 538 000a FFF7FEFF 		bl	CyScBoostClk_GetSourceRegister
 539              	.LVL26:
 424:Generated_Source\PSoC5/CyScBoostClk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 540              		.loc 1 424 0
 541 000e 0346     		mov	r3, r0
 542 0010 60B1     		cbz	r0, .L48
 424:Generated_Source\PSoC5/CyScBoostClk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 543              		.loc 1 424 0 is_stmt 0 discriminator 1
 544 0012 5CB9     		cbnz	r4, .L48
 425:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 545              		.loc 1 425 0 is_stmt 1
 546 0014 55B9     		cbnz	r5, .L48
 429:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC =
 547              		.loc 1 429 0
 548 0016 104A     		ldr	r2, .L52
 549 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 550 001a 43F04003 		orr	r3, r3, #64
 551 001e 1370     		strb	r3, [r2]
 431:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 552              		.loc 1 431 0
 553 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 430:Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 554              		.loc 1 430 0
 555 0022 03F0F803 		and	r3, r3, #248
 556 0026 1C43     		orrs	r4, r4, r3
 557 0028 1470     		strb	r4, [r2]
 558 002a 38BD     		pop	{r3, r4, r5, pc}
 559              	.LVL27:
 560              	.L48:
 433:Generated_Source\PSoC5/CyScBoostClk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 561              		.loc 1 433 0
 562 002c 63B9     		cbnz	r3, .L50
 433:Generated_Source\PSoC5/CyScBoostClk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 563              		.loc 1 433 0 is_stmt 0 discriminator 1
 564 002e 5CB1     		cbz	r4, .L50
 434:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 565              		.loc 1 434 0 is_stmt 1
 566 0030 55B9     		cbnz	r5, .L50
 439:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 567              		.loc 1 439 0
 568 0032 094A     		ldr	r2, .L52
 569 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 438:Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 570              		.loc 1 438 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 20


 571 0036 03F0F803 		and	r3, r3, #248
 572 003a 1C43     		orrs	r4, r4, r3
 573 003c 1470     		strb	r4, [r2]
 440:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 574              		.loc 1 440 0
 575 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 576 0040 03F0BF03 		and	r3, r3, #191
 577 0044 1370     		strb	r3, [r2]
 578 0046 38BD     		pop	{r3, r4, r5, pc}
 579              	.LVL28:
 580              	.L50:
 445:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 581              		.loc 1 445 0
 582 0048 034A     		ldr	r2, .L52
 583 004a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 444:Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 584              		.loc 1 444 0
 585 004c 03F0F803 		and	r3, r3, #248
 586 0050 1C43     		orrs	r4, r4, r3
 587 0052 1470     		strb	r4, [r2]
 588 0054 38BD     		pop	{r3, r4, r5, pc}
 589              	.LVL29:
 590              	.L53:
 591 0056 00BF     		.align	2
 592              	.L52:
 593 0058 02410040 		.word	1073758466
 594              		.cfi_endproc
 595              	.LFE9:
 596              		.size	CyScBoostClk_SetSourceRegister, .-CyScBoostClk_SetSourceRegister
 597              		.section	.text.CyScBoostClk_SetPhaseRegister,"ax",%progbits
 598              		.align	2
 599              		.global	CyScBoostClk_SetPhaseRegister
 600              		.thumb
 601              		.thumb_func
 602              		.type	CyScBoostClk_SetPhaseRegister, %function
 603              	CyScBoostClk_SetPhaseRegister:
 604              	.LFB11:
 468:Generated_Source\PSoC5/CyScBoostClk.c **** 
 469:Generated_Source\PSoC5/CyScBoostClk.c **** 
 470:Generated_Source\PSoC5/CyScBoostClk.c **** #if defined(CyScBoostClk__CFG3)
 471:Generated_Source\PSoC5/CyScBoostClk.c **** 
 472:Generated_Source\PSoC5/CyScBoostClk.c **** 
 473:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 474:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetPhaseRegister
 475:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 476:Generated_Source\PSoC5/CyScBoostClk.c **** *
 477:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 478:Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets the phase delay of the analog clock. This function is only available
 479:Generated_Source\PSoC5/CyScBoostClk.c **** *  for analog clocks. The clock must be disabled before changing the phase
 480:Generated_Source\PSoC5/CyScBoostClk.c **** *  delay to avoid glitches.
 481:Generated_Source\PSoC5/CyScBoostClk.c **** *
 482:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 483:Generated_Source\PSoC5/CyScBoostClk.c **** *  clkPhase: Amount to delay the phase of the clock, in 1.0ns increments.
 484:Generated_Source\PSoC5/CyScBoostClk.c **** *   clkPhase must be from 1 to 11 inclusive. Other values, including 0,
 485:Generated_Source\PSoC5/CyScBoostClk.c **** *   disable the clock. clkPhase = 1 produces a 0ns delay and clkPhase = 11 
 486:Generated_Source\PSoC5/CyScBoostClk.c **** *   produces a 10ns delay.
 487:Generated_Source\PSoC5/CyScBoostClk.c **** *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 21


 488:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 489:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 490:Generated_Source\PSoC5/CyScBoostClk.c **** *
 491:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 492:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetPhaseRegister(uint8 clkPhase) 
 493:Generated_Source\PSoC5/CyScBoostClk.c **** {
 605              		.loc 1 493 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610              	.LVL30:
 494:Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_PHASE = clkPhase & CyScBoostClk_PHASE_MASK;
 611              		.loc 1 494 0
 612 0000 00F00F00 		and	r0, r0, #15
 613              	.LVL31:
 614 0004 014B     		ldr	r3, .L55
 615 0006 1870     		strb	r0, [r3]
 616 0008 7047     		bx	lr
 617              	.L56:
 618 000a 00BF     		.align	2
 619              	.L55:
 620 000c 03410040 		.word	1073758467
 621              		.cfi_endproc
 622              	.LFE11:
 623              		.size	CyScBoostClk_SetPhaseRegister, .-CyScBoostClk_SetPhaseRegister
 624              		.section	.text.CyScBoostClk_GetPhaseRegister,"ax",%progbits
 625              		.align	2
 626              		.global	CyScBoostClk_GetPhaseRegister
 627              		.thumb
 628              		.thumb_func
 629              		.type	CyScBoostClk_GetPhaseRegister, %function
 630              	CyScBoostClk_GetPhaseRegister:
 631              	.LFB12:
 495:Generated_Source\PSoC5/CyScBoostClk.c **** }
 496:Generated_Source\PSoC5/CyScBoostClk.c **** 
 497:Generated_Source\PSoC5/CyScBoostClk.c **** 
 498:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 499:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetPhase
 500:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 501:Generated_Source\PSoC5/CyScBoostClk.c **** *
 502:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 503:Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the phase delay of the analog clock. This function is only available
 504:Generated_Source\PSoC5/CyScBoostClk.c **** *  for analog clocks.
 505:Generated_Source\PSoC5/CyScBoostClk.c **** *
 506:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 507:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 508:Generated_Source\PSoC5/CyScBoostClk.c **** *
 509:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 510:Generated_Source\PSoC5/CyScBoostClk.c **** *  Phase of the analog clock. See SetPhaseRegister for details.
 511:Generated_Source\PSoC5/CyScBoostClk.c **** *
 512:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 513:Generated_Source\PSoC5/CyScBoostClk.c **** uint8 CyScBoostClk_GetPhaseRegister(void) 
 514:Generated_Source\PSoC5/CyScBoostClk.c **** {
 632              		.loc 1 514 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 22


 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 515:Generated_Source\PSoC5/CyScBoostClk.c ****     return CyScBoostClk_PHASE & CyScBoostClk_PHASE_MASK;
 637              		.loc 1 515 0
 638 0000 024B     		ldr	r3, .L58
 639 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 516:Generated_Source\PSoC5/CyScBoostClk.c **** }
 640              		.loc 1 516 0
 641 0004 00F00F00 		and	r0, r0, #15
 642 0008 7047     		bx	lr
 643              	.L59:
 644 000a 00BF     		.align	2
 645              	.L58:
 646 000c 03410040 		.word	1073758467
 647              		.cfi_endproc
 648              	.LFE12:
 649              		.size	CyScBoostClk_GetPhaseRegister, .-CyScBoostClk_GetPhaseRegister
 650              		.text
 651              	.Letext0:
 652              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 653              		.section	.debug_info,"",%progbits
 654              	.Ldebug_info0:
 655 0000 C0020000 		.4byte	0x2c0
 656 0004 0400     		.2byte	0x4
 657 0006 00000000 		.4byte	.Ldebug_abbrev0
 658 000a 04       		.byte	0x4
 659 000b 01       		.uleb128 0x1
 660 000c BA020000 		.4byte	.LASF40
 661 0010 0C       		.byte	0xc
 662 0011 00000000 		.4byte	.LASF41
 663 0015 4B020000 		.4byte	.LASF42
 664 0019 00000000 		.4byte	.Ldebug_ranges0+0
 665 001d 00000000 		.4byte	0
 666 0021 00000000 		.4byte	.Ldebug_line0
 667 0025 02       		.uleb128 0x2
 668 0026 01       		.byte	0x1
 669 0027 06       		.byte	0x6
 670 0028 8C010000 		.4byte	.LASF0
 671 002c 02       		.uleb128 0x2
 672 002d 01       		.byte	0x1
 673 002e 08       		.byte	0x8
 674 002f 72010000 		.4byte	.LASF1
 675 0033 02       		.uleb128 0x2
 676 0034 02       		.byte	0x2
 677 0035 05       		.byte	0x5
 678 0036 51000000 		.4byte	.LASF2
 679 003a 02       		.uleb128 0x2
 680 003b 02       		.byte	0x2
 681 003c 07       		.byte	0x7
 682 003d BC010000 		.4byte	.LASF3
 683 0041 02       		.uleb128 0x2
 684 0042 04       		.byte	0x4
 685 0043 05       		.byte	0x5
 686 0044 3C010000 		.4byte	.LASF4
 687 0048 02       		.uleb128 0x2
 688 0049 04       		.byte	0x4
 689 004a 07       		.byte	0x7
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 23


 690 004b 32020000 		.4byte	.LASF5
 691 004f 02       		.uleb128 0x2
 692 0050 08       		.byte	0x8
 693 0051 05       		.byte	0x5
 694 0052 2E010000 		.4byte	.LASF6
 695 0056 02       		.uleb128 0x2
 696 0057 08       		.byte	0x8
 697 0058 07       		.byte	0x7
 698 0059 98010000 		.4byte	.LASF7
 699 005d 03       		.uleb128 0x3
 700 005e 04       		.byte	0x4
 701 005f 05       		.byte	0x5
 702 0060 696E7400 		.ascii	"int\000"
 703 0064 02       		.uleb128 0x2
 704 0065 04       		.byte	0x4
 705 0066 07       		.byte	0x7
 706 0067 AF010000 		.4byte	.LASF8
 707 006b 04       		.uleb128 0x4
 708 006c D9000000 		.4byte	.LASF9
 709 0070 02       		.byte	0x2
 710 0071 E401     		.2byte	0x1e4
 711 0073 2C000000 		.4byte	0x2c
 712 0077 04       		.uleb128 0x4
 713 0078 84000000 		.4byte	.LASF10
 714 007c 02       		.byte	0x2
 715 007d E501     		.2byte	0x1e5
 716 007f 3A000000 		.4byte	0x3a
 717 0083 02       		.uleb128 0x2
 718 0084 04       		.byte	0x4
 719 0085 04       		.byte	0x4
 720 0086 0A010000 		.4byte	.LASF11
 721 008a 02       		.uleb128 0x2
 722 008b 08       		.byte	0x8
 723 008c 04       		.byte	0x4
 724 008d 44020000 		.4byte	.LASF12
 725 0091 02       		.uleb128 0x2
 726 0092 01       		.byte	0x1
 727 0093 08       		.byte	0x8
 728 0094 CF010000 		.4byte	.LASF13
 729 0098 04       		.uleb128 0x4
 730 0099 2D020000 		.4byte	.LASF14
 731 009d 02       		.byte	0x2
 732 009e 8E02     		.2byte	0x28e
 733 00a0 A4000000 		.4byte	0xa4
 734 00a4 05       		.uleb128 0x5
 735 00a5 6B000000 		.4byte	0x6b
 736 00a9 04       		.uleb128 0x4
 737 00aa 4B000000 		.4byte	.LASF15
 738 00ae 02       		.byte	0x2
 739 00af 8F02     		.2byte	0x28f
 740 00b1 B5000000 		.4byte	0xb5
 741 00b5 05       		.uleb128 0x5
 742 00b6 77000000 		.4byte	0x77
 743 00ba 06       		.uleb128 0x6
 744 00bb 8D020000 		.4byte	.LASF16
 745 00bf 01       		.byte	0x1
 746 00c0 2D       		.byte	0x2d
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 24


 747 00c1 00000000 		.4byte	.LFB0
 748 00c5 1C000000 		.4byte	.LFE0-.LFB0
 749 00c9 01       		.uleb128 0x1
 750 00ca 9C       		.byte	0x9c
 751 00cb 06       		.uleb128 0x6
 752 00cc 5B000000 		.4byte	.LASF17
 753 00d0 01       		.byte	0x1
 754 00d1 47       		.byte	0x47
 755 00d2 00000000 		.4byte	.LFB1
 756 00d6 1C000000 		.4byte	.LFE1-.LFB1
 757 00da 01       		.uleb128 0x1
 758 00db 9C       		.byte	0x9c
 759 00dc 07       		.uleb128 0x7
 760 00dd 6D000000 		.4byte	.LASF18
 761 00e1 01       		.byte	0x1
 762 00e2 64       		.byte	0x64
 763 00e3 00000000 		.4byte	.LFB2
 764 00e7 6C000000 		.4byte	.LFE2-.LFB2
 765 00eb 01       		.uleb128 0x1
 766 00ec 9C       		.byte	0x9c
 767 00ed 0B010000 		.4byte	0x10b
 768 00f1 08       		.uleb128 0x8
 769 00f2 0A000000 		.4byte	.LBB2
 770 00f6 62000000 		.4byte	.LBE2-.LBB2
 771 00fa 09       		.uleb128 0x9
 772 00fb E6010000 		.4byte	.LASF30
 773 00ff 01       		.byte	0x1
 774 0100 69       		.byte	0x69
 775 0101 77000000 		.4byte	0x77
 776 0105 00000000 		.4byte	.LLST0
 777 0109 00       		.byte	0
 778 010a 00       		.byte	0
 779 010b 07       		.uleb128 0x7
 780 010c A0020000 		.4byte	.LASF19
 781 0110 01       		.byte	0x1
 782 0111 9D       		.byte	0x9d
 783 0112 00000000 		.4byte	.LFB3
 784 0116 20000000 		.4byte	.LFE3-.LFB3
 785 011a 01       		.uleb128 0x1
 786 011b 9C       		.byte	0x9c
 787 011c 2E010000 		.4byte	0x12e
 788 0120 0A       		.uleb128 0xa
 789 0121 63010000 		.4byte	.LASF21
 790 0125 01       		.byte	0x1
 791 0126 9D       		.byte	0x9d
 792 0127 6B000000 		.4byte	0x6b
 793 012b 01       		.uleb128 0x1
 794 012c 50       		.byte	0x50
 795 012d 00       		.byte	0
 796 012e 0B       		.uleb128 0xb
 797 012f EA000000 		.4byte	.LASF24
 798 0133 01       		.byte	0x1
 799 0134 2901     		.2byte	0x129
 800 0136 77000000 		.4byte	0x77
 801 013a 00000000 		.4byte	.LFB5
 802 013e 0C000000 		.4byte	.LFE5-.LFB5
 803 0142 01       		.uleb128 0x1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 25


 804 0143 9C       		.byte	0x9c
 805 0144 0C       		.uleb128 0xc
 806 0145 26000000 		.4byte	.LASF20
 807 0149 01       		.byte	0x1
 808 014a 4C01     		.2byte	0x14c
 809 014c 00000000 		.4byte	.LFB6
 810 0150 14000000 		.4byte	.LFE6-.LFB6
 811 0154 01       		.uleb128 0x1
 812 0155 9C       		.byte	0x9c
 813 0156 6B010000 		.4byte	0x16b
 814 015a 0D       		.uleb128 0xd
 815 015b 80010000 		.4byte	.LASF22
 816 015f 01       		.byte	0x1
 817 0160 4C01     		.2byte	0x14c
 818 0162 6B000000 		.4byte	0x6b
 819 0166 13000000 		.4byte	.LLST1
 820 016a 00       		.byte	0
 821 016b 0C       		.uleb128 0xc
 822 016c 48030000 		.4byte	.LASF23
 823 0170 01       		.byte	0x1
 824 0171 6F01     		.2byte	0x16f
 825 0173 00000000 		.4byte	.LFB7
 826 0177 18000000 		.4byte	.LFE7-.LFB7
 827 017b 01       		.uleb128 0x1
 828 017c 9C       		.byte	0x9c
 829 017d 92010000 		.4byte	0x192
 830 0181 0D       		.uleb128 0xd
 831 0182 80010000 		.4byte	.LASF22
 832 0186 01       		.byte	0x1
 833 0187 6F01     		.2byte	0x16f
 834 0189 6B000000 		.4byte	0x6b
 835 018d 34000000 		.4byte	.LLST2
 836 0191 00       		.byte	0
 837 0192 0B       		.uleb128 0xb
 838 0193 F1010000 		.4byte	.LASF25
 839 0197 01       		.byte	0x1
 840 0198 8401     		.2byte	0x184
 841 019a 6B000000 		.4byte	0x6b
 842 019e 00000000 		.4byte	.LFB8
 843 01a2 10000000 		.4byte	.LFE8-.LFB8
 844 01a6 01       		.uleb128 0x1
 845 01a7 9C       		.byte	0x9c
 846 01a8 0B       		.uleb128 0xb
 847 01a9 0E020000 		.4byte	.LASF26
 848 01ad 01       		.byte	0x1
 849 01ae D001     		.2byte	0x1d0
 850 01b0 6B000000 		.4byte	0x6b
 851 01b4 00000000 		.4byte	.LFB10
 852 01b8 10000000 		.4byte	.LFE10-.LFB10
 853 01bc 01       		.uleb128 0x1
 854 01bd 9C       		.byte	0x9c
 855 01be 07       		.uleb128 0x7
 856 01bf 93000000 		.4byte	.LASF27
 857 01c3 01       		.byte	0x1
 858 01c4 C1       		.byte	0xc1
 859 01c5 00000000 		.4byte	.LFB4
 860 01c9 D8000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 26


 861 01cd 01       		.uleb128 0x1
 862 01ce 9C       		.byte	0x9c
 863 01cf 2F020000 		.4byte	0x22f
 864 01d3 0E       		.uleb128 0xe
 865 01d4 DF000000 		.4byte	.LASF28
 866 01d8 01       		.byte	0x1
 867 01d9 C1       		.byte	0xc1
 868 01da 77000000 		.4byte	0x77
 869 01de 55000000 		.4byte	.LLST3
 870 01e2 0E       		.uleb128 0xe
 871 01e3 8B000000 		.4byte	.LASF29
 872 01e7 01       		.byte	0x1
 873 01e8 C1       		.byte	0xc1
 874 01e9 6B000000 		.4byte	0x6b
 875 01ed 76000000 		.4byte	.LLST4
 876 01f1 09       		.uleb128 0x9
 877 01f2 85020000 		.4byte	.LASF31
 878 01f6 01       		.byte	0x1
 879 01f7 C4       		.byte	0xc4
 880 01f8 6B000000 		.4byte	0x6b
 881 01fc 97000000 		.4byte	.LLST5
 882 0200 09       		.uleb128 0x9
 883 0201 DE010000 		.4byte	.LASF32
 884 0205 01       		.byte	0x1
 885 0206 C6       		.byte	0xc6
 886 0207 6B000000 		.4byte	0x6b
 887 020b E5000000 		.4byte	.LLST6
 888 020f 0F       		.uleb128 0xf
 889 0210 E6010000 		.4byte	.LASF30
 890 0214 01       		.byte	0x1
 891 0215 C7       		.byte	0xc7
 892 0216 77000000 		.4byte	0x77
 893 021a 01       		.uleb128 0x1
 894 021b 50       		.byte	0x50
 895 021c 10       		.uleb128 0x10
 896 021d 0A000000 		.4byte	.LVL8
 897 0221 A8010000 		.4byte	0x1a8
 898 0225 10       		.uleb128 0x10
 899 0226 10000000 		.4byte	.LVL10
 900 022a 2E010000 		.4byte	0x12e
 901 022e 00       		.byte	0
 902 022f 0C       		.uleb128 0xc
 903 0230 B3000000 		.4byte	.LASF33
 904 0234 01       		.byte	0x1
 905 0235 A301     		.2byte	0x1a3
 906 0237 00000000 		.4byte	.LFB9
 907 023b 5C000000 		.4byte	.LFE9-.LFB9
 908 023f 01       		.uleb128 0x1
 909 0240 9C       		.byte	0x9c
 910 0241 86020000 		.4byte	0x286
 911 0245 0D       		.uleb128 0xd
 912 0246 D4010000 		.4byte	.LASF34
 913 024a 01       		.byte	0x1
 914 024b A301     		.2byte	0x1a3
 915 024d 6B000000 		.4byte	0x6b
 916 0251 F8000000 		.4byte	.LLST7
 917 0255 11       		.uleb128 0x11
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 27


 918 0256 43000000 		.4byte	.LASF35
 919 025a 01       		.byte	0x1
 920 025b A501     		.2byte	0x1a5
 921 025d 77000000 		.4byte	0x77
 922 0261 19010000 		.4byte	.LLST8
 923 0265 12       		.uleb128 0x12
 924 0266 D2000000 		.4byte	.LASF36
 925 026a 01       		.byte	0x1
 926 026b A601     		.2byte	0x1a6
 927 026d 6B000000 		.4byte	0x6b
 928 0271 01       		.uleb128 0x1
 929 0272 50       		.byte	0x50
 930 0273 10       		.uleb128 0x10
 931 0274 08000000 		.4byte	.LVL24
 932 0278 2E010000 		.4byte	0x12e
 933 027c 10       		.uleb128 0x10
 934 027d 0E000000 		.4byte	.LVL26
 935 0281 A8010000 		.4byte	0x1a8
 936 0285 00       		.byte	0
 937 0286 0C       		.uleb128 0xc
 938 0287 45010000 		.4byte	.LASF37
 939 028b 01       		.byte	0x1
 940 028c EC01     		.2byte	0x1ec
 941 028e 00000000 		.4byte	.LFB11
 942 0292 10000000 		.4byte	.LFE11-.LFB11
 943 0296 01       		.uleb128 0x1
 944 0297 9C       		.byte	0x9c
 945 0298 AD020000 		.4byte	0x2ad
 946 029c 0D       		.uleb128 0xd
 947 029d 69010000 		.4byte	.LASF38
 948 02a1 01       		.byte	0x1
 949 02a2 EC01     		.2byte	0x1ec
 950 02a4 6B000000 		.4byte	0x6b
 951 02a8 2C010000 		.4byte	.LLST9
 952 02ac 00       		.byte	0
 953 02ad 0B       		.uleb128 0xb
 954 02ae 10010000 		.4byte	.LASF39
 955 02b2 01       		.byte	0x1
 956 02b3 0102     		.2byte	0x201
 957 02b5 6B000000 		.4byte	0x6b
 958 02b9 00000000 		.4byte	.LFB12
 959 02bd 10000000 		.4byte	.LFE12-.LFB12
 960 02c1 01       		.uleb128 0x1
 961 02c2 9C       		.byte	0x9c
 962 02c3 00       		.byte	0
 963              		.section	.debug_abbrev,"",%progbits
 964              	.Ldebug_abbrev0:
 965 0000 01       		.uleb128 0x1
 966 0001 11       		.uleb128 0x11
 967 0002 01       		.byte	0x1
 968 0003 25       		.uleb128 0x25
 969 0004 0E       		.uleb128 0xe
 970 0005 13       		.uleb128 0x13
 971 0006 0B       		.uleb128 0xb
 972 0007 03       		.uleb128 0x3
 973 0008 0E       		.uleb128 0xe
 974 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 28


 975 000a 0E       		.uleb128 0xe
 976 000b 55       		.uleb128 0x55
 977 000c 17       		.uleb128 0x17
 978 000d 11       		.uleb128 0x11
 979 000e 01       		.uleb128 0x1
 980 000f 10       		.uleb128 0x10
 981 0010 17       		.uleb128 0x17
 982 0011 00       		.byte	0
 983 0012 00       		.byte	0
 984 0013 02       		.uleb128 0x2
 985 0014 24       		.uleb128 0x24
 986 0015 00       		.byte	0
 987 0016 0B       		.uleb128 0xb
 988 0017 0B       		.uleb128 0xb
 989 0018 3E       		.uleb128 0x3e
 990 0019 0B       		.uleb128 0xb
 991 001a 03       		.uleb128 0x3
 992 001b 0E       		.uleb128 0xe
 993 001c 00       		.byte	0
 994 001d 00       		.byte	0
 995 001e 03       		.uleb128 0x3
 996 001f 24       		.uleb128 0x24
 997 0020 00       		.byte	0
 998 0021 0B       		.uleb128 0xb
 999 0022 0B       		.uleb128 0xb
 1000 0023 3E       		.uleb128 0x3e
 1001 0024 0B       		.uleb128 0xb
 1002 0025 03       		.uleb128 0x3
 1003 0026 08       		.uleb128 0x8
 1004 0027 00       		.byte	0
 1005 0028 00       		.byte	0
 1006 0029 04       		.uleb128 0x4
 1007 002a 16       		.uleb128 0x16
 1008 002b 00       		.byte	0
 1009 002c 03       		.uleb128 0x3
 1010 002d 0E       		.uleb128 0xe
 1011 002e 3A       		.uleb128 0x3a
 1012 002f 0B       		.uleb128 0xb
 1013 0030 3B       		.uleb128 0x3b
 1014 0031 05       		.uleb128 0x5
 1015 0032 49       		.uleb128 0x49
 1016 0033 13       		.uleb128 0x13
 1017 0034 00       		.byte	0
 1018 0035 00       		.byte	0
 1019 0036 05       		.uleb128 0x5
 1020 0037 35       		.uleb128 0x35
 1021 0038 00       		.byte	0
 1022 0039 49       		.uleb128 0x49
 1023 003a 13       		.uleb128 0x13
 1024 003b 00       		.byte	0
 1025 003c 00       		.byte	0
 1026 003d 06       		.uleb128 0x6
 1027 003e 2E       		.uleb128 0x2e
 1028 003f 00       		.byte	0
 1029 0040 3F       		.uleb128 0x3f
 1030 0041 19       		.uleb128 0x19
 1031 0042 03       		.uleb128 0x3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 29


 1032 0043 0E       		.uleb128 0xe
 1033 0044 3A       		.uleb128 0x3a
 1034 0045 0B       		.uleb128 0xb
 1035 0046 3B       		.uleb128 0x3b
 1036 0047 0B       		.uleb128 0xb
 1037 0048 27       		.uleb128 0x27
 1038 0049 19       		.uleb128 0x19
 1039 004a 11       		.uleb128 0x11
 1040 004b 01       		.uleb128 0x1
 1041 004c 12       		.uleb128 0x12
 1042 004d 06       		.uleb128 0x6
 1043 004e 40       		.uleb128 0x40
 1044 004f 18       		.uleb128 0x18
 1045 0050 9742     		.uleb128 0x2117
 1046 0052 19       		.uleb128 0x19
 1047 0053 00       		.byte	0
 1048 0054 00       		.byte	0
 1049 0055 07       		.uleb128 0x7
 1050 0056 2E       		.uleb128 0x2e
 1051 0057 01       		.byte	0x1
 1052 0058 3F       		.uleb128 0x3f
 1053 0059 19       		.uleb128 0x19
 1054 005a 03       		.uleb128 0x3
 1055 005b 0E       		.uleb128 0xe
 1056 005c 3A       		.uleb128 0x3a
 1057 005d 0B       		.uleb128 0xb
 1058 005e 3B       		.uleb128 0x3b
 1059 005f 0B       		.uleb128 0xb
 1060 0060 27       		.uleb128 0x27
 1061 0061 19       		.uleb128 0x19
 1062 0062 11       		.uleb128 0x11
 1063 0063 01       		.uleb128 0x1
 1064 0064 12       		.uleb128 0x12
 1065 0065 06       		.uleb128 0x6
 1066 0066 40       		.uleb128 0x40
 1067 0067 18       		.uleb128 0x18
 1068 0068 9742     		.uleb128 0x2117
 1069 006a 19       		.uleb128 0x19
 1070 006b 01       		.uleb128 0x1
 1071 006c 13       		.uleb128 0x13
 1072 006d 00       		.byte	0
 1073 006e 00       		.byte	0
 1074 006f 08       		.uleb128 0x8
 1075 0070 0B       		.uleb128 0xb
 1076 0071 01       		.byte	0x1
 1077 0072 11       		.uleb128 0x11
 1078 0073 01       		.uleb128 0x1
 1079 0074 12       		.uleb128 0x12
 1080 0075 06       		.uleb128 0x6
 1081 0076 00       		.byte	0
 1082 0077 00       		.byte	0
 1083 0078 09       		.uleb128 0x9
 1084 0079 34       		.uleb128 0x34
 1085 007a 00       		.byte	0
 1086 007b 03       		.uleb128 0x3
 1087 007c 0E       		.uleb128 0xe
 1088 007d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 30


 1089 007e 0B       		.uleb128 0xb
 1090 007f 3B       		.uleb128 0x3b
 1091 0080 0B       		.uleb128 0xb
 1092 0081 49       		.uleb128 0x49
 1093 0082 13       		.uleb128 0x13
 1094 0083 02       		.uleb128 0x2
 1095 0084 17       		.uleb128 0x17
 1096 0085 00       		.byte	0
 1097 0086 00       		.byte	0
 1098 0087 0A       		.uleb128 0xa
 1099 0088 05       		.uleb128 0x5
 1100 0089 00       		.byte	0
 1101 008a 03       		.uleb128 0x3
 1102 008b 0E       		.uleb128 0xe
 1103 008c 3A       		.uleb128 0x3a
 1104 008d 0B       		.uleb128 0xb
 1105 008e 3B       		.uleb128 0x3b
 1106 008f 0B       		.uleb128 0xb
 1107 0090 49       		.uleb128 0x49
 1108 0091 13       		.uleb128 0x13
 1109 0092 02       		.uleb128 0x2
 1110 0093 18       		.uleb128 0x18
 1111 0094 00       		.byte	0
 1112 0095 00       		.byte	0
 1113 0096 0B       		.uleb128 0xb
 1114 0097 2E       		.uleb128 0x2e
 1115 0098 00       		.byte	0
 1116 0099 3F       		.uleb128 0x3f
 1117 009a 19       		.uleb128 0x19
 1118 009b 03       		.uleb128 0x3
 1119 009c 0E       		.uleb128 0xe
 1120 009d 3A       		.uleb128 0x3a
 1121 009e 0B       		.uleb128 0xb
 1122 009f 3B       		.uleb128 0x3b
 1123 00a0 05       		.uleb128 0x5
 1124 00a1 27       		.uleb128 0x27
 1125 00a2 19       		.uleb128 0x19
 1126 00a3 49       		.uleb128 0x49
 1127 00a4 13       		.uleb128 0x13
 1128 00a5 11       		.uleb128 0x11
 1129 00a6 01       		.uleb128 0x1
 1130 00a7 12       		.uleb128 0x12
 1131 00a8 06       		.uleb128 0x6
 1132 00a9 40       		.uleb128 0x40
 1133 00aa 18       		.uleb128 0x18
 1134 00ab 9742     		.uleb128 0x2117
 1135 00ad 19       		.uleb128 0x19
 1136 00ae 00       		.byte	0
 1137 00af 00       		.byte	0
 1138 00b0 0C       		.uleb128 0xc
 1139 00b1 2E       		.uleb128 0x2e
 1140 00b2 01       		.byte	0x1
 1141 00b3 3F       		.uleb128 0x3f
 1142 00b4 19       		.uleb128 0x19
 1143 00b5 03       		.uleb128 0x3
 1144 00b6 0E       		.uleb128 0xe
 1145 00b7 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 31


 1146 00b8 0B       		.uleb128 0xb
 1147 00b9 3B       		.uleb128 0x3b
 1148 00ba 05       		.uleb128 0x5
 1149 00bb 27       		.uleb128 0x27
 1150 00bc 19       		.uleb128 0x19
 1151 00bd 11       		.uleb128 0x11
 1152 00be 01       		.uleb128 0x1
 1153 00bf 12       		.uleb128 0x12
 1154 00c0 06       		.uleb128 0x6
 1155 00c1 40       		.uleb128 0x40
 1156 00c2 18       		.uleb128 0x18
 1157 00c3 9742     		.uleb128 0x2117
 1158 00c5 19       		.uleb128 0x19
 1159 00c6 01       		.uleb128 0x1
 1160 00c7 13       		.uleb128 0x13
 1161 00c8 00       		.byte	0
 1162 00c9 00       		.byte	0
 1163 00ca 0D       		.uleb128 0xd
 1164 00cb 05       		.uleb128 0x5
 1165 00cc 00       		.byte	0
 1166 00cd 03       		.uleb128 0x3
 1167 00ce 0E       		.uleb128 0xe
 1168 00cf 3A       		.uleb128 0x3a
 1169 00d0 0B       		.uleb128 0xb
 1170 00d1 3B       		.uleb128 0x3b
 1171 00d2 05       		.uleb128 0x5
 1172 00d3 49       		.uleb128 0x49
 1173 00d4 13       		.uleb128 0x13
 1174 00d5 02       		.uleb128 0x2
 1175 00d6 17       		.uleb128 0x17
 1176 00d7 00       		.byte	0
 1177 00d8 00       		.byte	0
 1178 00d9 0E       		.uleb128 0xe
 1179 00da 05       		.uleb128 0x5
 1180 00db 00       		.byte	0
 1181 00dc 03       		.uleb128 0x3
 1182 00dd 0E       		.uleb128 0xe
 1183 00de 3A       		.uleb128 0x3a
 1184 00df 0B       		.uleb128 0xb
 1185 00e0 3B       		.uleb128 0x3b
 1186 00e1 0B       		.uleb128 0xb
 1187 00e2 49       		.uleb128 0x49
 1188 00e3 13       		.uleb128 0x13
 1189 00e4 02       		.uleb128 0x2
 1190 00e5 17       		.uleb128 0x17
 1191 00e6 00       		.byte	0
 1192 00e7 00       		.byte	0
 1193 00e8 0F       		.uleb128 0xf
 1194 00e9 34       		.uleb128 0x34
 1195 00ea 00       		.byte	0
 1196 00eb 03       		.uleb128 0x3
 1197 00ec 0E       		.uleb128 0xe
 1198 00ed 3A       		.uleb128 0x3a
 1199 00ee 0B       		.uleb128 0xb
 1200 00ef 3B       		.uleb128 0x3b
 1201 00f0 0B       		.uleb128 0xb
 1202 00f1 49       		.uleb128 0x49
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 32


 1203 00f2 13       		.uleb128 0x13
 1204 00f3 02       		.uleb128 0x2
 1205 00f4 18       		.uleb128 0x18
 1206 00f5 00       		.byte	0
 1207 00f6 00       		.byte	0
 1208 00f7 10       		.uleb128 0x10
 1209 00f8 898201   		.uleb128 0x4109
 1210 00fb 00       		.byte	0
 1211 00fc 11       		.uleb128 0x11
 1212 00fd 01       		.uleb128 0x1
 1213 00fe 31       		.uleb128 0x31
 1214 00ff 13       		.uleb128 0x13
 1215 0100 00       		.byte	0
 1216 0101 00       		.byte	0
 1217 0102 11       		.uleb128 0x11
 1218 0103 34       		.uleb128 0x34
 1219 0104 00       		.byte	0
 1220 0105 03       		.uleb128 0x3
 1221 0106 0E       		.uleb128 0xe
 1222 0107 3A       		.uleb128 0x3a
 1223 0108 0B       		.uleb128 0xb
 1224 0109 3B       		.uleb128 0x3b
 1225 010a 05       		.uleb128 0x5
 1226 010b 49       		.uleb128 0x49
 1227 010c 13       		.uleb128 0x13
 1228 010d 02       		.uleb128 0x2
 1229 010e 17       		.uleb128 0x17
 1230 010f 00       		.byte	0
 1231 0110 00       		.byte	0
 1232 0111 12       		.uleb128 0x12
 1233 0112 34       		.uleb128 0x34
 1234 0113 00       		.byte	0
 1235 0114 03       		.uleb128 0x3
 1236 0115 0E       		.uleb128 0xe
 1237 0116 3A       		.uleb128 0x3a
 1238 0117 0B       		.uleb128 0xb
 1239 0118 3B       		.uleb128 0x3b
 1240 0119 05       		.uleb128 0x5
 1241 011a 49       		.uleb128 0x49
 1242 011b 13       		.uleb128 0x13
 1243 011c 02       		.uleb128 0x2
 1244 011d 18       		.uleb128 0x18
 1245 011e 00       		.byte	0
 1246 011f 00       		.byte	0
 1247 0120 00       		.byte	0
 1248              		.section	.debug_loc,"",%progbits
 1249              	.Ldebug_loc0:
 1250              	.LLST0:
 1251 0000 2A000000 		.4byte	.LVL0
 1252 0004 5A000000 		.4byte	.LVL1
 1253 0008 0100     		.2byte	0x1
 1254 000a 52       		.byte	0x52
 1255 000b 00000000 		.4byte	0
 1256 000f 00000000 		.4byte	0
 1257              	.LLST1:
 1258 0013 00000000 		.4byte	.LVL3
 1259 0017 08000000 		.4byte	.LVL4
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 33


 1260 001b 0100     		.2byte	0x1
 1261 001d 50       		.byte	0x50
 1262 001e 08000000 		.4byte	.LVL4
 1263 0022 14000000 		.4byte	.LFE6
 1264 0026 0400     		.2byte	0x4
 1265 0028 F3       		.byte	0xf3
 1266 0029 01       		.uleb128 0x1
 1267 002a 50       		.byte	0x50
 1268 002b 9F       		.byte	0x9f
 1269 002c 00000000 		.4byte	0
 1270 0030 00000000 		.4byte	0
 1271              	.LLST2:
 1272 0034 00000000 		.4byte	.LVL5
 1273 0038 06000000 		.4byte	.LVL6
 1274 003c 0100     		.2byte	0x1
 1275 003e 50       		.byte	0x50
 1276 003f 06000000 		.4byte	.LVL6
 1277 0043 18000000 		.4byte	.LFE7
 1278 0047 0400     		.2byte	0x4
 1279 0049 F3       		.byte	0xf3
 1280 004a 01       		.uleb128 0x1
 1281 004b 50       		.byte	0x50
 1282 004c 9F       		.byte	0x9f
 1283 004d 00000000 		.4byte	0
 1284 0051 00000000 		.4byte	0
 1285              	.LLST3:
 1286 0055 00000000 		.4byte	.LVL7
 1287 0059 09000000 		.4byte	.LVL8-1
 1288 005d 0100     		.2byte	0x1
 1289 005f 50       		.byte	0x50
 1290 0060 09000000 		.4byte	.LVL8-1
 1291 0064 D8000000 		.4byte	.LFE4
 1292 0068 0400     		.2byte	0x4
 1293 006a F3       		.byte	0xf3
 1294 006b 01       		.uleb128 0x1
 1295 006c 50       		.byte	0x50
 1296 006d 9F       		.byte	0x9f
 1297 006e 00000000 		.4byte	0
 1298 0072 00000000 		.4byte	0
 1299              	.LLST4:
 1300 0076 00000000 		.4byte	.LVL7
 1301 007a 09000000 		.4byte	.LVL8-1
 1302 007e 0100     		.2byte	0x1
 1303 0080 51       		.byte	0x51
 1304 0081 09000000 		.4byte	.LVL8-1
 1305 0085 D8000000 		.4byte	.LFE4
 1306 0089 0400     		.2byte	0x4
 1307 008b F3       		.byte	0xf3
 1308 008c 01       		.uleb128 0x1
 1309 008d 51       		.byte	0x51
 1310 008e 9F       		.byte	0x9f
 1311 008f 00000000 		.4byte	0
 1312 0093 00000000 		.4byte	0
 1313              	.LLST5:
 1314 0097 1C000000 		.4byte	.LVL11
 1315 009b 2A000000 		.4byte	.LVL12
 1316 009f 0100     		.2byte	0x1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 34


 1317 00a1 52       		.byte	0x52
 1318 00a2 34000000 		.4byte	.LVL13
 1319 00a6 36000000 		.4byte	.LVL14
 1320 00aa 0100     		.2byte	0x1
 1321 00ac 52       		.byte	0x52
 1322 00ad 36000000 		.4byte	.LVL14
 1323 00b1 38000000 		.4byte	.LVL15
 1324 00b5 0500     		.2byte	0x5
 1325 00b7 73       		.byte	0x73
 1326 00b8 00       		.sleb128 0
 1327 00b9 31       		.byte	0x31
 1328 00ba 1A       		.byte	0x1a
 1329 00bb 9F       		.byte	0x9f
 1330 00bc 44000000 		.4byte	.LVL16
 1331 00c0 A2000000 		.4byte	.LVL18
 1332 00c4 0100     		.2byte	0x1
 1333 00c6 52       		.byte	0x52
 1334 00c7 A4000000 		.4byte	.LVL19
 1335 00cb A6000000 		.4byte	.LVL20
 1336 00cf 0100     		.2byte	0x1
 1337 00d1 52       		.byte	0x52
 1338 00d2 B6000000 		.4byte	.LVL21
 1339 00d6 C2000000 		.4byte	.LVL22
 1340 00da 0100     		.2byte	0x1
 1341 00dc 52       		.byte	0x52
 1342 00dd 00000000 		.4byte	0
 1343 00e1 00000000 		.4byte	0
 1344              	.LLST6:
 1345 00e5 0C000000 		.4byte	.LVL9
 1346 00e9 4E000000 		.4byte	.LVL17
 1347 00ed 0100     		.2byte	0x1
 1348 00ef 54       		.byte	0x54
 1349 00f0 00000000 		.4byte	0
 1350 00f4 00000000 		.4byte	0
 1351              	.LLST7:
 1352 00f8 00000000 		.4byte	.LVL23
 1353 00fc 07000000 		.4byte	.LVL24-1
 1354 0100 0100     		.2byte	0x1
 1355 0102 50       		.byte	0x50
 1356 0103 07000000 		.4byte	.LVL24-1
 1357 0107 5C000000 		.4byte	.LFE9
 1358 010b 0400     		.2byte	0x4
 1359 010d F3       		.byte	0xf3
 1360 010e 01       		.uleb128 0x1
 1361 010f 50       		.byte	0x50
 1362 0110 9F       		.byte	0x9f
 1363 0111 00000000 		.4byte	0
 1364 0115 00000000 		.4byte	0
 1365              	.LLST8:
 1366 0119 0A000000 		.4byte	.LVL25
 1367 011d 56000000 		.4byte	.LVL29
 1368 0121 0100     		.2byte	0x1
 1369 0123 55       		.byte	0x55
 1370 0124 00000000 		.4byte	0
 1371 0128 00000000 		.4byte	0
 1372              	.LLST9:
 1373 012c 00000000 		.4byte	.LVL30
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 35


 1374 0130 04000000 		.4byte	.LVL31
 1375 0134 0100     		.2byte	0x1
 1376 0136 50       		.byte	0x50
 1377 0137 04000000 		.4byte	.LVL31
 1378 013b 10000000 		.4byte	.LFE11
 1379 013f 0400     		.2byte	0x4
 1380 0141 F3       		.byte	0xf3
 1381 0142 01       		.uleb128 0x1
 1382 0143 50       		.byte	0x50
 1383 0144 9F       		.byte	0x9f
 1384 0145 00000000 		.4byte	0
 1385 0149 00000000 		.4byte	0
 1386              		.section	.debug_aranges,"",%progbits
 1387 0000 7C000000 		.4byte	0x7c
 1388 0004 0200     		.2byte	0x2
 1389 0006 00000000 		.4byte	.Ldebug_info0
 1390 000a 04       		.byte	0x4
 1391 000b 00       		.byte	0
 1392 000c 0000     		.2byte	0
 1393 000e 0000     		.2byte	0
 1394 0010 00000000 		.4byte	.LFB0
 1395 0014 1C000000 		.4byte	.LFE0-.LFB0
 1396 0018 00000000 		.4byte	.LFB1
 1397 001c 1C000000 		.4byte	.LFE1-.LFB1
 1398 0020 00000000 		.4byte	.LFB2
 1399 0024 6C000000 		.4byte	.LFE2-.LFB2
 1400 0028 00000000 		.4byte	.LFB3
 1401 002c 20000000 		.4byte	.LFE3-.LFB3
 1402 0030 00000000 		.4byte	.LFB5
 1403 0034 0C000000 		.4byte	.LFE5-.LFB5
 1404 0038 00000000 		.4byte	.LFB6
 1405 003c 14000000 		.4byte	.LFE6-.LFB6
 1406 0040 00000000 		.4byte	.LFB7
 1407 0044 18000000 		.4byte	.LFE7-.LFB7
 1408 0048 00000000 		.4byte	.LFB8
 1409 004c 10000000 		.4byte	.LFE8-.LFB8
 1410 0050 00000000 		.4byte	.LFB10
 1411 0054 10000000 		.4byte	.LFE10-.LFB10
 1412 0058 00000000 		.4byte	.LFB4
 1413 005c D8000000 		.4byte	.LFE4-.LFB4
 1414 0060 00000000 		.4byte	.LFB9
 1415 0064 5C000000 		.4byte	.LFE9-.LFB9
 1416 0068 00000000 		.4byte	.LFB11
 1417 006c 10000000 		.4byte	.LFE11-.LFB11
 1418 0070 00000000 		.4byte	.LFB12
 1419 0074 10000000 		.4byte	.LFE12-.LFB12
 1420 0078 00000000 		.4byte	0
 1421 007c 00000000 		.4byte	0
 1422              		.section	.debug_ranges,"",%progbits
 1423              	.Ldebug_ranges0:
 1424 0000 00000000 		.4byte	.LFB0
 1425 0004 1C000000 		.4byte	.LFE0
 1426 0008 00000000 		.4byte	.LFB1
 1427 000c 1C000000 		.4byte	.LFE1
 1428 0010 00000000 		.4byte	.LFB2
 1429 0014 6C000000 		.4byte	.LFE2
 1430 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 36


 1431 001c 20000000 		.4byte	.LFE3
 1432 0020 00000000 		.4byte	.LFB5
 1433 0024 0C000000 		.4byte	.LFE5
 1434 0028 00000000 		.4byte	.LFB6
 1435 002c 14000000 		.4byte	.LFE6
 1436 0030 00000000 		.4byte	.LFB7
 1437 0034 18000000 		.4byte	.LFE7
 1438 0038 00000000 		.4byte	.LFB8
 1439 003c 10000000 		.4byte	.LFE8
 1440 0040 00000000 		.4byte	.LFB10
 1441 0044 10000000 		.4byte	.LFE10
 1442 0048 00000000 		.4byte	.LFB4
 1443 004c D8000000 		.4byte	.LFE4
 1444 0050 00000000 		.4byte	.LFB9
 1445 0054 5C000000 		.4byte	.LFE9
 1446 0058 00000000 		.4byte	.LFB11
 1447 005c 10000000 		.4byte	.LFE11
 1448 0060 00000000 		.4byte	.LFB12
 1449 0064 10000000 		.4byte	.LFE12
 1450 0068 00000000 		.4byte	0
 1451 006c 00000000 		.4byte	0
 1452              		.section	.debug_line,"",%progbits
 1453              	.Ldebug_line0:
 1454 0000 9A010000 		.section	.debug_str,"MS",%progbits,1
 1454      02004900 
 1454      00000201 
 1454      FB0E0D00 
 1454      01010101 
 1455              	.LASF41:
 1456 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\CyScBoostClk.c\000"
 1456      72617465 
 1456      645F536F 
 1456      75726365 
 1456      5C50536F 
 1457              	.LASF20:
 1458 0026 43795363 		.ascii	"CyScBoostClk_SetModeRegister\000"
 1458      426F6F73 
 1458      74436C6B 
 1458      5F536574 
 1458      4D6F6465 
 1459              	.LASF35:
 1460 0043 63757272 		.ascii	"currDiv\000"
 1460      44697600 
 1461              	.LASF15:
 1462 004b 72656731 		.ascii	"reg16\000"
 1462      3600
 1463              	.LASF2:
 1464 0051 73686F72 		.ascii	"short int\000"
 1464      7420696E 
 1464      7400
 1465              	.LASF17:
 1466 005b 43795363 		.ascii	"CyScBoostClk_Stop\000"
 1466      426F6F73 
 1466      74436C6B 
 1466      5F53746F 
 1466      7000
 1467              	.LASF18:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 37


 1468 006d 43795363 		.ascii	"CyScBoostClk_StopBlock\000"
 1468      426F6F73 
 1468      74436C6B 
 1468      5F53746F 
 1468      70426C6F 
 1469              	.LASF10:
 1470 0084 75696E74 		.ascii	"uint16\000"
 1470      313600
 1471              	.LASF29:
 1472 008b 72657374 		.ascii	"restart\000"
 1472      61727400 
 1473              	.LASF27:
 1474 0093 43795363 		.ascii	"CyScBoostClk_SetDividerRegister\000"
 1474      426F6F73 
 1474      74436C6B 
 1474      5F536574 
 1474      44697669 
 1475              	.LASF33:
 1476 00b3 43795363 		.ascii	"CyScBoostClk_SetSourceRegister\000"
 1476      426F6F73 
 1476      74436C6B 
 1476      5F536574 
 1476      536F7572 
 1477              	.LASF36:
 1478 00d2 6F6C6453 		.ascii	"oldSrc\000"
 1478      726300
 1479              	.LASF9:
 1480 00d9 75696E74 		.ascii	"uint8\000"
 1480      3800
 1481              	.LASF28:
 1482 00df 636C6B44 		.ascii	"clkDivider\000"
 1482      69766964 
 1482      657200
 1483              	.LASF24:
 1484 00ea 43795363 		.ascii	"CyScBoostClk_GetDividerRegister\000"
 1484      426F6F73 
 1484      74436C6B 
 1484      5F476574 
 1484      44697669 
 1485              	.LASF11:
 1486 010a 666C6F61 		.ascii	"float\000"
 1486      7400
 1487              	.LASF39:
 1488 0110 43795363 		.ascii	"CyScBoostClk_GetPhaseRegister\000"
 1488      426F6F73 
 1488      74436C6B 
 1488      5F476574 
 1488      50686173 
 1489              	.LASF6:
 1490 012e 6C6F6E67 		.ascii	"long long int\000"
 1490      206C6F6E 
 1490      6720696E 
 1490      7400
 1491              	.LASF4:
 1492 013c 6C6F6E67 		.ascii	"long int\000"
 1492      20696E74 
 1492      00
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 38


 1493              	.LASF37:
 1494 0145 43795363 		.ascii	"CyScBoostClk_SetPhaseRegister\000"
 1494      426F6F73 
 1494      74436C6B 
 1494      5F536574 
 1494      50686173 
 1495              	.LASF21:
 1496 0163 73746174 		.ascii	"state\000"
 1496      6500
 1497              	.LASF38:
 1498 0169 636C6B50 		.ascii	"clkPhase\000"
 1498      68617365 
 1498      00
 1499              	.LASF1:
 1500 0172 756E7369 		.ascii	"unsigned char\000"
 1500      676E6564 
 1500      20636861 
 1500      7200
 1501              	.LASF22:
 1502 0180 6D6F6465 		.ascii	"modeBitMask\000"
 1502      4269744D 
 1502      61736B00 
 1503              	.LASF0:
 1504 018c 7369676E 		.ascii	"signed char\000"
 1504      65642063 
 1504      68617200 
 1505              	.LASF7:
 1506 0198 6C6F6E67 		.ascii	"long long unsigned int\000"
 1506      206C6F6E 
 1506      6720756E 
 1506      7369676E 
 1506      65642069 
 1507              	.LASF8:
 1508 01af 756E7369 		.ascii	"unsigned int\000"
 1508      676E6564 
 1508      20696E74 
 1508      00
 1509              	.LASF3:
 1510 01bc 73686F72 		.ascii	"short unsigned int\000"
 1510      7420756E 
 1510      7369676E 
 1510      65642069 
 1510      6E7400
 1511              	.LASF13:
 1512 01cf 63686172 		.ascii	"char\000"
 1512      00
 1513              	.LASF34:
 1514 01d4 636C6B53 		.ascii	"clkSource\000"
 1514      6F757263 
 1514      6500
 1515              	.LASF32:
 1516 01de 63757272 		.ascii	"currSrc\000"
 1516      53726300 
 1517              	.LASF30:
 1518 01e6 6F6C6444 		.ascii	"oldDivider\000"
 1518      69766964 
 1518      657200
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 39


 1519              	.LASF25:
 1520 01f1 43795363 		.ascii	"CyScBoostClk_GetModeRegister\000"
 1520      426F6F73 
 1520      74436C6B 
 1520      5F476574 
 1520      4D6F6465 
 1521              	.LASF26:
 1522 020e 43795363 		.ascii	"CyScBoostClk_GetSourceRegister\000"
 1522      426F6F73 
 1522      74436C6B 
 1522      5F476574 
 1522      536F7572 
 1523              	.LASF14:
 1524 022d 72656738 		.ascii	"reg8\000"
 1524      00
 1525              	.LASF5:
 1526 0232 6C6F6E67 		.ascii	"long unsigned int\000"
 1526      20756E73 
 1526      69676E65 
 1526      6420696E 
 1526      7400
 1527              	.LASF12:
 1528 0244 646F7562 		.ascii	"double\000"
 1528      6C6500
 1529              	.LASF42:
 1530 024b 433A5C55 		.ascii	"C:\\Users\\jdrd3\\Documents\\PSoC Creator\\Ejemplos"
 1530      73657273 
 1530      5C6A6472 
 1530      64335C44 
 1530      6F63756D 
 1531 0279 5C4F4C45 		.ascii	"\\OLED.cydsn\000"
 1531      442E6379 
 1531      64736E00 
 1532              	.LASF31:
 1533 0285 656E6162 		.ascii	"enabled\000"
 1533      6C656400 
 1534              	.LASF16:
 1535 028d 43795363 		.ascii	"CyScBoostClk_Start\000"
 1535      426F6F73 
 1535      74436C6B 
 1535      5F537461 
 1535      727400
 1536              	.LASF19:
 1537 02a0 43795363 		.ascii	"CyScBoostClk_StandbyPower\000"
 1537      426F6F73 
 1537      74436C6B 
 1537      5F537461 
 1537      6E646279 
 1538              	.LASF40:
 1539 02ba 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1539      43313120 
 1539      352E342E 
 1539      31203230 
 1539      31363036 
 1540 02ed 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1540      20726576 
 1540      6973696F 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\cclB5w6u.s 			page 40


 1540      6E203233 
 1540      37373135 
 1541 0320 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1541      66756E63 
 1541      74696F6E 
 1541      2D736563 
 1541      74696F6E 
 1542              	.LASF23:
 1543 0348 43795363 		.ascii	"CyScBoostClk_ClearModeRegister\000"
 1543      426F6F73 
 1543      74436C6B 
 1543      5F436C65 
 1543      61724D6F 
 1544              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
