ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_em_eeprom.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_Em_EEPROM_Init,"ax",%progbits
  20              		.align	2
  21              		.global	Cy_Em_EEPROM_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	Cy_Em_EEPROM_Init, %function
  25              	Cy_Em_EEPROM_Init:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\cy_em_eeprom.c"
   1:Generated_Source\PSoC4/cy_em_eeprom.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cy_em_eeprom.c **** * \file cy_em_eeprom.c
   3:Generated_Source\PSoC4/cy_em_eeprom.c **** * \version 2.20
   4:Generated_Source\PSoC4/cy_em_eeprom.c **** *
   5:Generated_Source\PSoC4/cy_em_eeprom.c **** * \brief
   6:Generated_Source\PSoC4/cy_em_eeprom.c **** *  This file provides source code of the API for the Emulated EEPROM library.
   7:Generated_Source\PSoC4/cy_em_eeprom.c **** *  The Emulated EEPROM API allows creating of an emulated EEPROM in flash that
   8:Generated_Source\PSoC4/cy_em_eeprom.c **** *  has the ability to do wear leveling and restore corrupted data from a
   9:Generated_Source\PSoC4/cy_em_eeprom.c **** *  redundant copy.
  10:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  11:Generated_Source\PSoC4/cy_em_eeprom.c **** ********************************************************************************
  12:Generated_Source\PSoC4/cy_em_eeprom.c **** * \copyright
  13:Generated_Source\PSoC4/cy_em_eeprom.c **** * Copyright 2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/cy_em_eeprom.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/cy_em_eeprom.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/cy_em_eeprom.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  19:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  20:Generated_Source\PSoC4/cy_em_eeprom.c **** #include "cytypes.h"
  21:Generated_Source\PSoC4/cy_em_eeprom.c **** #include <string.h>
  22:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  23:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC6)
  24:Generated_Source\PSoC4/cy_em_eeprom.c ****     #include "em_eeprom/cy_em_eeprom.h"
  25:Generated_Source\PSoC4/cy_em_eeprom.c **** #else
  26:Generated_Source\PSoC4/cy_em_eeprom.c ****     #include "cy_em_eeprom.h"
  27:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC6) */
  28:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  29:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  30:Generated_Source\PSoC4/cy_em_eeprom.c **** #if defined(__cplusplus)
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 2


  31:Generated_Source\PSoC4/cy_em_eeprom.c **** extern "C" {
  32:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif
  33:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  34:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  35:Generated_Source\PSoC4/cy_em_eeprom.c **** /***************************************
  36:Generated_Source\PSoC4/cy_em_eeprom.c **** * Private Function Prototypes
  37:Generated_Source\PSoC4/cy_em_eeprom.c **** ***************************************/
  38:Generated_Source\PSoC4/cy_em_eeprom.c **** static void FindLastWrittenRow(uint32 * lastWrRowPtr, cy_stc_eeprom_context_t * context);
  39:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetRowAddrBySeqNum(uint32 seqNum, cy_stc_eeprom_context_t * context);
  40:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint8 CalcChecksum(uint8 rowData[], uint32 len);
  41:Generated_Source\PSoC4/cy_em_eeprom.c **** static void GetNextRowToWrite(uint32 seqNum,
  42:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToWrPtr,
  43:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToRdPtr,
  44:Generated_Source\PSoC4/cy_em_eeprom.c ****                             cy_stc_eeprom_context_t * context);
  45:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckRanges(cy_stc_eeprom_config_t* config);
  46:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t WriteRow(uint32 rowAddr, uint32 *rowData, cy_stc_eeprom_context_t *
  47:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t EraseRow(uint32 rowAddr, uint32 ramBuffAddr, cy_stc_eeprom_context_
  48:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckCrcAndCopy(uint32 startAddr,
  49:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 dstAddr,
  50:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 rowOffset,
  51:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 numBytes,
  52:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 cy_stc_eeprom_context_t * context);
  53:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetAddresses(uint32 *startAddr, uint32 *endAddr, uint32 *offset, uint32 rowNum, uint3
  54:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t FillChecksum(cy_stc_eeprom_context_t * context);
  55:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  56:Generated_Source\PSoC4/cy_em_eeprom.c **** /**
  57:Generated_Source\PSoC4/cy_em_eeprom.c **** * \addtogroup group_em_eeprom_functions
  58:Generated_Source\PSoC4/cy_em_eeprom.c **** * \{
  59:Generated_Source\PSoC4/cy_em_eeprom.c **** */
  60:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  61:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
  62:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Init
  63:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
  64:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  65:Generated_Source\PSoC4/cy_em_eeprom.c **** * Initializes the Emulated EEPROM library by filling the context structure. 
  66:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  67:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param config
  68:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a configuration structure. See \ref cy_stc_eeprom_config_t.
  69:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  70:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
  71:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure to be filled by the function.
  72:Generated_Source\PSoC4/cy_em_eeprom.c **** * \ref cy_stc_eeprom_context_t.
  73:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  74:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
  75:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
  76:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  77:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
  78:Generated_Source\PSoC4/cy_em_eeprom.c **** * The context structure should not be modified by the user after it is filled
  79:Generated_Source\PSoC4/cy_em_eeprom.c **** * with this function. Modification of context structure may cause the 
  80:Generated_Source\PSoC4/cy_em_eeprom.c **** * unexpected behavior of the Cy_Em_EEPROM API functions which rely on it.
  81:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  82:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
  83:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
  84:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
  85:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
  86:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  87:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 3


  88:Generated_Source\PSoC4/cy_em_eeprom.c **** * If the "Redundant Copy" option is used, the function performs a number of 
  89:Generated_Source\PSoC4/cy_em_eeprom.c **** * write operations to the EEPROM to initialize flash rows checksums. Therefore,
  90:Generated_Source\PSoC4/cy_em_eeprom.c **** * Cy_Em_EEPROM_NumWrites(), when it is called right after Cy_Em_EEPROM_Init(), 
  91:Generated_Source\PSoC4/cy_em_eeprom.c **** * will return a non-zero value that identifies the number of writes performed 
  92:Generated_Source\PSoC4/cy_em_eeprom.c **** * by Cy_Em_EEPROM_Init().
  93:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  94:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Init(cy_stc_eeprom_config_t* config, cy_stc_eeprom_context_t 
  96:Generated_Source\PSoC4/cy_em_eeprom.c **** {
  28              		.loc 1 96 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              		.cfi_def_cfa_offset 32
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  42 0008 3960     		str	r1, [r7]
  97:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
  43              		.loc 1 97 0
  44 000a 0F23     		movs	r3, #15
  45 000c FB18     		adds	r3, r7, r3
  46 000e 0122     		movs	r2, #1
  47 0010 1A70     		strb	r2, [r3]
  98:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  99:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((NULL != context) && (NULL != config) && (NULL != ((uint32 *)config->userFlashStartAddr)) &&
  48              		.loc 1 99 0
  49 0012 3B68     		ldr	r3, [r7]
  50 0014 002B     		cmp	r3, #0
  51 0016 67D0     		beq	.L2
  52              		.loc 1 99 0 is_stmt 0 discriminator 1
  53 0018 7B68     		ldr	r3, [r7, #4]
  54 001a 002B     		cmp	r3, #0
  55 001c 64D0     		beq	.L2
  56              		.loc 1 99 0 discriminator 2
  57 001e 7B68     		ldr	r3, [r7, #4]
  58 0020 DB68     		ldr	r3, [r3, #12]
  59 0022 002B     		cmp	r3, #0
  60 0024 60D0     		beq	.L2
 100:Generated_Source\PSoC4/cy_em_eeprom.c ****         (config->wearLevelingFactor <= CY_EM_EEPROM_MAX_WEAR_LEVELING_FACTOR) && (config->eepromSiz
  61              		.loc 1 100 0 is_stmt 1 discriminator 3
  62 0026 7B68     		ldr	r3, [r7, #4]
  63 0028 5B68     		ldr	r3, [r3, #4]
  99:Generated_Source\PSoC4/cy_em_eeprom.c ****         (config->wearLevelingFactor <= CY_EM_EEPROM_MAX_WEAR_LEVELING_FACTOR) && (config->eepromSiz
  64              		.loc 1 99 0 discriminator 3
  65 002a 0A2B     		cmp	r3, #10
  66 002c 5CD8     		bhi	.L2
  67              		.loc 1 100 0
  68 002e 7B68     		ldr	r3, [r7, #4]
  69 0030 1B68     		ldr	r3, [r3]
  70 0032 002B     		cmp	r3, #0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 4


  71 0034 58D0     		beq	.L2
 101:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 102:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CheckRanges(config);
  72              		.loc 1 102 0
  73 0036 0F23     		movs	r3, #15
  74 0038 FC18     		adds	r4, r7, r3
  75 003a 7B68     		ldr	r3, [r7, #4]
  76 003c 1800     		movs	r0, r3
  77 003e FFF7FEFF 		bl	CheckRanges
  78 0042 0300     		movs	r3, r0
  79 0044 2370     		strb	r3, [r4]
 103:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 104:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
  80              		.loc 1 104 0
  81 0046 0F23     		movs	r3, #15
  82 0048 FB18     		adds	r3, r7, r3
  83 004a 1B78     		ldrb	r3, [r3]
  84 004c 002B     		cmp	r3, #0
  85 004e 4BD1     		bne	.L2
 105:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 106:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Copy the user config structure fields into context */
 107:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->eepromSize = config->eepromSize;
  86              		.loc 1 107 0
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1A68     		ldr	r2, [r3]
  89 0054 3B68     		ldr	r3, [r7]
  90 0056 DA60     		str	r2, [r3, #12]
 108:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wearLevelingFactor = config->wearLevelingFactor;
  91              		.loc 1 108 0
  92 0058 7B68     		ldr	r3, [r7, #4]
  93 005a 5A68     		ldr	r2, [r3, #4]
  94 005c 3B68     		ldr	r3, [r7]
  95 005e 1A61     		str	r2, [r3, #16]
 109:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->redundantCopy = config->redundantCopy;
  96              		.loc 1 109 0
  97 0060 7B68     		ldr	r3, [r7, #4]
  98 0062 1A7A     		ldrb	r2, [r3, #8]
  99 0064 3B68     		ldr	r3, [r7]
 100 0066 1A75     		strb	r2, [r3, #20]
 110:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->blockingWrite = config->blockingWrite;
 101              		.loc 1 110 0
 102 0068 7B68     		ldr	r3, [r7, #4]
 103 006a 5A7A     		ldrb	r2, [r3, #9]
 104 006c 3B68     		ldr	r3, [r7]
 105 006e 5A75     		strb	r2, [r3, #21]
 111:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->userFlashStartAddr = config->userFlashStartAddr;
 106              		.loc 1 111 0
 107 0070 7B68     		ldr	r3, [r7, #4]
 108 0072 DA68     		ldr	r2, [r3, #12]
 109 0074 3B68     		ldr	r3, [r7]
 110 0076 9A61     		str	r2, [r3, #24]
 112:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Store frequently used data for internal use */
 113:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->numberOfRows = CY_EM_EEPROM_GET_NUM_ROWS_IN_EEPROM(config->eepromSize);
 111              		.loc 1 113 0
 112 0078 7B68     		ldr	r3, [r7, #4]
 113 007a 1B68     		ldr	r3, [r3]
 114 007c 9A09     		lsrs	r2, r3, #6
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 5


 115 007e 7B68     		ldr	r3, [r7, #4]
 116 0080 1B68     		ldr	r3, [r3]
 117 0082 3F21     		movs	r1, #63
 118 0084 0B40     		ands	r3, r1
 119 0086 01D0     		beq	.L3
 120              		.loc 1 113 0 is_stmt 0 discriminator 1
 121 0088 0123     		movs	r3, #1
 122 008a 00E0     		b	.L4
 123              	.L3:
 124              		.loc 1 113 0 discriminator 2
 125 008c 0023     		movs	r3, #0
 126              	.L4:
 127              		.loc 1 113 0 discriminator 4
 128 008e D218     		adds	r2, r2, r3
 129 0090 3B68     		ldr	r3, [r7]
 130 0092 5A60     		str	r2, [r3, #4]
 114:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wlEndAddr = ((CY_EM_EEPROM_GET_EEPROM_SIZE(context->numberOfRows) * config->we
 131              		.loc 1 114 0 is_stmt 1 discriminator 4
 132 0094 3B68     		ldr	r3, [r7]
 133 0096 5A68     		ldr	r2, [r3, #4]
 134 0098 7B68     		ldr	r3, [r7, #4]
 135 009a 5B68     		ldr	r3, [r3, #4]
 136 009c 5343     		muls	r3, r2
 137 009e DA01     		lsls	r2, r3, #7
 115:Generated_Source\PSoC4/cy_em_eeprom.c ****                     config->userFlashStartAddr);
 138              		.loc 1 115 0 discriminator 4
 139 00a0 7B68     		ldr	r3, [r7, #4]
 140 00a2 DB68     		ldr	r3, [r3, #12]
 114:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wlEndAddr = ((CY_EM_EEPROM_GET_EEPROM_SIZE(context->numberOfRows) * config->we
 141              		.loc 1 114 0 discriminator 4
 142 00a4 D218     		adds	r2, r2, r3
 143 00a6 3B68     		ldr	r3, [r7]
 144 00a8 1A60     		str	r2, [r3]
 116:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Find last written EEPROM row and store it for quick access */
 117:Generated_Source\PSoC4/cy_em_eeprom.c ****             FindLastWrittenRow(&context->lastWrRowAddr, context);
 145              		.loc 1 117 0 discriminator 4
 146 00aa 3B68     		ldr	r3, [r7]
 147 00ac 0833     		adds	r3, r3, #8
 148 00ae 3A68     		ldr	r2, [r7]
 149 00b0 1100     		movs	r1, r2
 150 00b2 1800     		movs	r0, r3
 151 00b4 FFF7FEFF 		bl	FindLastWrittenRow
 118:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 119:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((0u == CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr)) && (0u != context->redundan
 152              		.loc 1 119 0 discriminator 4
 153 00b8 3B68     		ldr	r3, [r7]
 154 00ba 9B68     		ldr	r3, [r3, #8]
 155 00bc 1B68     		ldr	r3, [r3]
 156 00be 002B     		cmp	r3, #0
 157 00c0 12D1     		bne	.L2
 158              		.loc 1 119 0 is_stmt 0 discriminator 1
 159 00c2 3B68     		ldr	r3, [r7]
 160 00c4 1B7D     		ldrb	r3, [r3, #20]
 161 00c6 002B     		cmp	r3, #0
 162 00c8 0ED0     		beq	.L2
 120:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 121:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Call the function only after device reprogramming in case
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 6


 122:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * if redundant copy is enabled.
 123:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 124:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = FillChecksum(context);
 163              		.loc 1 124 0 is_stmt 1
 164 00ca 0F23     		movs	r3, #15
 165 00cc FC18     		adds	r4, r7, r3
 166 00ce 3B68     		ldr	r3, [r7]
 167 00d0 1800     		movs	r0, r3
 168 00d2 FFF7FEFF 		bl	FillChecksum
 169 00d6 0300     		movs	r3, r0
 170 00d8 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/cy_em_eeprom.c ****                 
 126:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Update the last written EEPROM row for Cy_Em_EEPROM_NumWrites() */
 127:Generated_Source\PSoC4/cy_em_eeprom.c ****                 FindLastWrittenRow(&context->lastWrRowAddr, context);
 171              		.loc 1 127 0
 172 00da 3B68     		ldr	r3, [r7]
 173 00dc 0833     		adds	r3, r3, #8
 174 00de 3A68     		ldr	r2, [r7]
 175 00e0 1100     		movs	r1, r2
 176 00e2 1800     		movs	r0, r3
 177 00e4 FFF7FEFF 		bl	FindLastWrittenRow
 178              	.L2:
 128:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 129:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 130:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 131:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 132:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 179              		.loc 1 132 0
 180 00e8 0F23     		movs	r3, #15
 181 00ea FB18     		adds	r3, r7, r3
 182 00ec 1B78     		ldrb	r3, [r3]
 133:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 183              		.loc 1 133 0
 184 00ee 1800     		movs	r0, r3
 185 00f0 BD46     		mov	sp, r7
 186 00f2 05B0     		add	sp, sp, #20
 187              		@ sp needed
 188 00f4 90BD     		pop	{r4, r7, pc}
 189              		.cfi_endproc
 190              	.LFE0:
 191              		.size	Cy_Em_EEPROM_Init, .-Cy_Em_EEPROM_Init
 192              		.global	__aeabi_uidiv
 193 00f6 C046     		.section	.text.Cy_Em_EEPROM_Read,"ax",%progbits
 194              		.align	2
 195              		.global	Cy_Em_EEPROM_Read
 196              		.code	16
 197              		.thumb_func
 198              		.type	Cy_Em_EEPROM_Read, %function
 199              	Cy_Em_EEPROM_Read:
 200              	.LFB1:
 134:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 135:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 136:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 137:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Read
 138:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 139:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 140:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function takes the logical EEPROM address, converts it to the actual
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 7


 141:Generated_Source\PSoC4/cy_em_eeprom.c **** * physical address where the data is stored and returns the data to the user.
 142:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 143:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
 144:Generated_Source\PSoC4/cy_em_eeprom.c **** * The logical start address in EEPROM to start reading data from.
 145:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 146:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param eepromData
 147:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a user array to write data to.
 148:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 149:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param size
 150:Generated_Source\PSoC4/cy_em_eeprom.c **** * The amount of data to read.
 151:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 152:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 153:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 154:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 155:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 156:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 157:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 158:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 159:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
 160:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 161:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 162:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 163:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 164:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if redundant copy option is enabled the function may perform writes
 165:Generated_Source\PSoC4/cy_em_eeprom.c **** * to EEPROM. This is done in case if the data in the EEPPROM is corrupted and
 166:Generated_Source\PSoC4/cy_em_eeprom.c **** * the data in redundant copy is valid based on CRC-8 data integrity check.
 167:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 168:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 169:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Read(uint32 addr, 
 170:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         void * eepromData, 
 171:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         uint32 size,
 172:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
 173:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 201              		.loc 1 173 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 96
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205 0000 B0B5     		push	{r4, r5, r7, lr}
 206              		.cfi_def_cfa_offset 16
 207              		.cfi_offset 4, -16
 208              		.cfi_offset 5, -12
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 9AB0     		sub	sp, sp, #104
 212              		.cfi_def_cfa_offset 120
 213 0004 02AF     		add	r7, sp, #8
 214              		.cfi_def_cfa 7, 112
 215 0006 F860     		str	r0, [r7, #12]
 216 0008 B960     		str	r1, [r7, #8]
 217 000a 7A60     		str	r2, [r7, #4]
 218 000c 3B60     		str	r3, [r7]
 174:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 219              		.loc 1 174 0
 220 000e 5F23     		movs	r3, #95
 221 0010 FB18     		adds	r3, r7, r3
 222 0012 0122     		movs	r2, #1
 223 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 8


 175:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 176:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 numBytesToRead;
 177:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curEepromBaseAddr;
 178:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curRowOffset;
 179:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startRowAddr;
 180:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 actEepromRowNum;
 181:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curRdEepromRowNum = 0u;
 224              		.loc 1 181 0
 225 0016 0023     		movs	r3, #0
 226 0018 FB64     		str	r3, [r7, #76]
 182:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 dataStartEepromRowNum = 0u;
 227              		.loc 1 182 0
 228 001a 0023     		movs	r3, #0
 229 001c BB64     		str	r3, [r7, #72]
 183:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 eeData = (uint32) eepromData; /* To avoid the pointer arithmetic with void */
 230              		.loc 1 183 0
 231 001e BB68     		ldr	r3, [r7, #8]
 232 0020 7B64     		str	r3, [r7, #68]
 184:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 185:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Validate input parameters */
 186:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((0u != size) && ((addr + size) <= (context->eepromSize)) && (NULL != eepromData))
 233              		.loc 1 186 0
 234 0022 7B68     		ldr	r3, [r7, #4]
 235 0024 002B     		cmp	r3, #0
 236 0026 00D1     		bne	.LCB175
 237 0028 78E1     		b	.L7	@long jump
 238              	.LCB175:
 239              		.loc 1 186 0 is_stmt 0 discriminator 1
 240 002a FA68     		ldr	r2, [r7, #12]
 241 002c 7B68     		ldr	r3, [r7, #4]
 242 002e D218     		adds	r2, r2, r3
 243 0030 3B68     		ldr	r3, [r7]
 244 0032 DB68     		ldr	r3, [r3, #12]
 245 0034 9A42     		cmp	r2, r3
 246 0036 00D9     		bls	.LCB182
 247 0038 70E1     		b	.L7	@long jump
 248              	.LCB182:
 249              		.loc 1 186 0 discriminator 2
 250 003a BB68     		ldr	r3, [r7, #8]
 251 003c 002B     		cmp	r3, #0
 252 003e 00D1     		bne	.LCB185
 253 0040 6CE1     		b	.L7	@long jump
 254              	.LCB185:
 255              	.LBB2:
 187:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 188:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 rdAddr = addr;
 256              		.loc 1 188 0 is_stmt 1
 257 0042 FB68     		ldr	r3, [r7, #12]
 258 0044 3B64     		str	r3, [r7, #64]
 189:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 rdSize = size;
 259              		.loc 1 189 0
 260 0046 7B68     		ldr	r3, [r7, #4]
 261 0048 FB63     		str	r3, [r7, #60]
 190:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Get the sequence number of the last written row */
 191:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr);
 262              		.loc 1 191 0
 263 004a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 9


 264 004c 9B68     		ldr	r3, [r3, #8]
 265 004e 1B68     		ldr	r3, [r3]
 266 0050 7B63     		str	r3, [r7, #52]
 192:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 updateAddrFlag = 0u;
 267              		.loc 1 192 0
 268 0052 0023     		movs	r3, #0
 269 0054 BB63     		str	r3, [r7, #56]
 193:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 194:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Calculate the number of the row read operations. Currently this only concerns
 195:Generated_Source\PSoC4/cy_em_eeprom.c ****         * the reads from the EEPROM data locations.
 196:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
 197:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 numRowReads = ((((rdAddr + rdSize) - 1u) / CY_EM_EEPROM_EEPROM_DATA_LEN) -
 270              		.loc 1 197 0
 271 0056 3A6C     		ldr	r2, [r7, #64]
 272 0058 FB6B     		ldr	r3, [r7, #60]
 273 005a D318     		adds	r3, r2, r3
 274 005c 013B     		subs	r3, r3, #1
 275 005e 9A09     		lsrs	r2, r3, #6
 198:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (rdAddr / CY_EM_EEPROM_EEPROM_DATA_LEN)) + 1u;
 276              		.loc 1 198 0
 277 0060 3B6C     		ldr	r3, [r7, #64]
 278 0062 9B09     		lsrs	r3, r3, #6
 197:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (rdAddr / CY_EM_EEPROM_EEPROM_DATA_LEN)) + 1u;
 279              		.loc 1 197 0
 280 0064 D31A     		subs	r3, r2, r3
 281 0066 0133     		adds	r3, r3, #1
 282 0068 3B63     		str	r3, [r7, #48]
 199:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 200:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Get the address of the first row of the currently active EEPROM sector. If
 201:Generated_Source\PSoC4/cy_em_eeprom.c ****         * no wear leveling is used - the EEPROM has only one sector, so use the base
 202:Generated_Source\PSoC4/cy_em_eeprom.c ****         * addr stored in "context->userFlashStartAddr".
 203:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
 204:Generated_Source\PSoC4/cy_em_eeprom.c ****         curEepromBaseAddr = (((context->lastWrRowAddr - context->userFlashStartAddr) /
 283              		.loc 1 204 0
 284 006a 3B68     		ldr	r3, [r7]
 285 006c 9A68     		ldr	r2, [r3, #8]
 286 006e 3B68     		ldr	r3, [r7]
 287 0070 9B69     		ldr	r3, [r3, #24]
 288 0072 D21A     		subs	r2, r2, r3
 205:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 289              		.loc 1 205 0
 290 0074 3B68     		ldr	r3, [r7]
 291 0076 5B68     		ldr	r3, [r3, #4]
 292 0078 DB01     		lsls	r3, r3, #7
 204:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 293              		.loc 1 204 0
 294 007a 1900     		movs	r1, r3
 295 007c 1000     		movs	r0, r2
 296 007e FFF7FEFF 		bl	__aeabi_uidiv
 297 0082 0300     		movs	r3, r0
 298 0084 1A00     		movs	r2, r3
 206:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) +
 299              		.loc 1 206 0
 300 0086 3B68     		ldr	r3, [r7]
 301 0088 5B68     		ldr	r3, [r3, #4]
 205:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 302              		.loc 1 205 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 10


 303 008a 5343     		muls	r3, r2
 304 008c DA01     		lsls	r2, r3, #7
 207:Generated_Source\PSoC4/cy_em_eeprom.c ****                                context->userFlashStartAddr;
 305              		.loc 1 207 0
 306 008e 3B68     		ldr	r3, [r7]
 307 0090 9B69     		ldr	r3, [r3, #24]
 204:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 308              		.loc 1 204 0
 309 0092 D318     		adds	r3, r2, r3
 310 0094 FB62     		str	r3, [r7, #44]
 208:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 209:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Find the number of the row that contains the start address of the data */
 210:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(i = 0u; i < context->numberOfRows; i++)
 311              		.loc 1 210 0
 312 0096 0023     		movs	r3, #0
 313 0098 BB65     		str	r3, [r7, #88]
 314 009a 18E0     		b	.L8
 315              	.L13:
 211:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 212:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(rdAddr, i))
 316              		.loc 1 212 0
 317 009c BB6D     		ldr	r3, [r7, #88]
 318 009e 9A01     		lsls	r2, r3, #6
 319 00a0 3B6C     		ldr	r3, [r7, #64]
 320 00a2 9A42     		cmp	r2, r3
 321 00a4 08D8     		bhi	.L9
 322              		.loc 1 212 0 is_stmt 0 discriminator 1
 323 00a6 BB6D     		ldr	r3, [r7, #88]
 324 00a8 0133     		adds	r3, r3, #1
 325 00aa 9B01     		lsls	r3, r3, #6
 326 00ac 5A1E     		subs	r2, r3, #1
 327 00ae 3B6C     		ldr	r3, [r7, #64]
 328 00b0 9A42     		cmp	r2, r3
 329 00b2 01D3     		bcc	.L9
 330              		.loc 1 212 0 discriminator 3
 331 00b4 0123     		movs	r3, #1
 332 00b6 00E0     		b	.L10
 333              	.L9:
 334              		.loc 1 212 0 discriminator 4
 335 00b8 0023     		movs	r3, #0
 336              	.L10:
 337              		.loc 1 212 0 discriminator 6
 338 00ba 002B     		cmp	r3, #0
 339 00bc 04D0     		beq	.L11
 213:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 214:Generated_Source\PSoC4/cy_em_eeprom.c ****                 dataStartEepromRowNum = i;
 340              		.loc 1 214 0 is_stmt 1
 341 00be BB6D     		ldr	r3, [r7, #88]
 342 00c0 BB64     		str	r3, [r7, #72]
 215:Generated_Source\PSoC4/cy_em_eeprom.c ****                 curRdEepromRowNum = dataStartEepromRowNum;
 343              		.loc 1 215 0
 344 00c2 BB6C     		ldr	r3, [r7, #72]
 345 00c4 FB64     		str	r3, [r7, #76]
 216:Generated_Source\PSoC4/cy_em_eeprom.c ****                 break;
 346              		.loc 1 216 0
 347 00c6 07E0     		b	.L12
 348              	.L11:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 11


 210:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 349              		.loc 1 210 0 discriminator 2
 350 00c8 BB6D     		ldr	r3, [r7, #88]
 351 00ca 0133     		adds	r3, r3, #1
 352 00cc BB65     		str	r3, [r7, #88]
 353              	.L8:
 210:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 354              		.loc 1 210 0 is_stmt 0 discriminator 1
 355 00ce 3B68     		ldr	r3, [r7]
 356 00d0 5A68     		ldr	r2, [r3, #4]
 357 00d2 BB6D     		ldr	r3, [r7, #88]
 358 00d4 9A42     		cmp	r2, r3
 359 00d6 E1D8     		bhi	.L13
 360              	.L12:
 217:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 218:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 219:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 220:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Find the row number of the last written row */
 221:Generated_Source\PSoC4/cy_em_eeprom.c ****         actEepromRowNum = (context->lastWrRowAddr - curEepromBaseAddr) / CY_EM_EEPROM_FLASH_SIZEOF_
 361              		.loc 1 221 0 is_stmt 1
 362 00d8 3B68     		ldr	r3, [r7]
 363 00da 9A68     		ldr	r2, [r3, #8]
 364 00dc FB6A     		ldr	r3, [r7, #44]
 365 00de D31A     		subs	r3, r2, r3
 366 00e0 DB09     		lsrs	r3, r3, #7
 367 00e2 BB62     		str	r3, [r7, #40]
 222:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 223:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Check if wear leveling is used */
 224:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(context->wearLevelingFactor > 1u)
 368              		.loc 1 224 0
 369 00e4 3B68     		ldr	r3, [r7]
 370 00e6 1B69     		ldr	r3, [r3, #16]
 371 00e8 012B     		cmp	r3, #1
 372 00ea 12D9     		bls	.L14
 373              	.LBB3:
 225:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 226:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 dataEndEepromRowNum = dataStartEepromRowNum + (numRowReads - 1u);
 374              		.loc 1 226 0
 375 00ec 3A6B     		ldr	r2, [r7, #48]
 376 00ee BB6C     		ldr	r3, [r7, #72]
 377 00f0 D318     		adds	r3, r2, r3
 378 00f2 013B     		subs	r3, r3, #1
 379 00f4 7B62     		str	r3, [r7, #36]
 227:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 228:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if the future validation of the read address is required. */
 229:Generated_Source\PSoC4/cy_em_eeprom.c ****             updateAddrFlag = (dataStartEepromRowNum > actEepromRowNum) ? 1u :
 380              		.loc 1 229 0
 381 00f6 BA6C     		ldr	r2, [r7, #72]
 382 00f8 BB6A     		ldr	r3, [r7, #40]
 383 00fa 9A42     		cmp	r2, r3
 384 00fc 07D8     		bhi	.L15
 385              		.loc 1 229 0 is_stmt 0 discriminator 1
 386 00fe 7A6A     		ldr	r2, [r7, #36]
 387 0100 BB6A     		ldr	r3, [r7, #40]
 388 0102 9A42     		cmp	r2, r3
 389 0104 01D9     		bls	.L16
 390              		.loc 1 229 0 discriminator 3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 12


 391 0106 0123     		movs	r3, #1
 392 0108 02E0     		b	.L18
 393              	.L16:
 394              		.loc 1 229 0 discriminator 4
 395 010a 0023     		movs	r3, #0
 396 010c 00E0     		b	.L18
 397              	.L15:
 398              		.loc 1 229 0 discriminator 2
 399 010e 0123     		movs	r3, #1
 400              	.L18:
 401              		.loc 1 229 0 discriminator 8
 402 0110 BB63     		str	r3, [r7, #56]
 403              	.L14:
 404              	.LBE3:
 230:Generated_Source\PSoC4/cy_em_eeprom.c ****                               ((dataEndEepromRowNum > actEepromRowNum) ? 1u : 0u);
 231:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 232:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 233:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Copy data from the EEPROM data locations to the user buffer */
 234:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(i = 0u; i < numRowReads; i++)
 405              		.loc 1 234 0 is_stmt 1
 406 0112 0023     		movs	r3, #0
 407 0114 BB65     		str	r3, [r7, #88]
 408 0116 68E0     		b	.L19
 409              	.L26:
 235:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 236:Generated_Source\PSoC4/cy_em_eeprom.c ****             startRowAddr = curEepromBaseAddr + (curRdEepromRowNum * CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 410              		.loc 1 236 0
 411 0118 FB6C     		ldr	r3, [r7, #76]
 412 011a DA01     		lsls	r2, r3, #7
 413 011c FB6A     		ldr	r3, [r7, #44]
 414 011e D318     		adds	r3, r2, r3
 415 0120 3B65     		str	r3, [r7, #80]
 237:Generated_Source\PSoC4/cy_em_eeprom.c ****             curRowOffset = CY_EM_EEPROM_EEPROM_DATA_LEN + (rdAddr % CY_EM_EEPROM_EEPROM_DATA_LEN);
 416              		.loc 1 237 0
 417 0122 3B6C     		ldr	r3, [r7, #64]
 418 0124 3F22     		movs	r2, #63
 419 0126 1340     		ands	r3, r2
 420 0128 4033     		adds	r3, r3, #64
 421 012a 3B62     		str	r3, [r7, #32]
 238:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 239:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if there are more reads pending and update the number of the
 240:Generated_Source\PSoC4/cy_em_eeprom.c ****             * remaining bytes to read respectively.
 241:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 242:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((i + 1u) < numRowReads)
 422              		.loc 1 242 0
 423 012c BB6D     		ldr	r3, [r7, #88]
 424 012e 5A1C     		adds	r2, r3, #1
 425 0130 3B6B     		ldr	r3, [r7, #48]
 426 0132 9A42     		cmp	r2, r3
 427 0134 06D2     		bcs	.L20
 243:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 244:Generated_Source\PSoC4/cy_em_eeprom.c ****                 numBytesToRead = CY_EM_EEPROM_EEPROM_DATA_LEN - (rdAddr % CY_EM_EEPROM_EEPROM_DATA_
 428              		.loc 1 244 0
 429 0136 3B6C     		ldr	r3, [r7, #64]
 430 0138 3F22     		movs	r2, #63
 431 013a 1340     		ands	r3, r2
 432 013c 4022     		movs	r2, #64
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 13


 433 013e D31A     		subs	r3, r2, r3
 434 0140 7B65     		str	r3, [r7, #84]
 435 0142 01E0     		b	.L21
 436              	.L20:
 245:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 246:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 247:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 248:Generated_Source\PSoC4/cy_em_eeprom.c ****                 numBytesToRead = rdSize;
 437              		.loc 1 248 0
 438 0144 FB6B     		ldr	r3, [r7, #60]
 439 0146 7B65     		str	r3, [r7, #84]
 440              	.L21:
 249:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 250:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 251:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if the read address needs to be updated to point to the correct
 252:Generated_Source\PSoC4/cy_em_eeprom.c ****             * EEPROM sector.
 253:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 254:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((0u != updateAddrFlag) && (curRdEepromRowNum > actEepromRowNum))
 441              		.loc 1 254 0
 442 0148 BB6B     		ldr	r3, [r7, #56]
 443 014a 002B     		cmp	r3, #0
 444 014c 17D0     		beq	.L22
 445              		.loc 1 254 0 is_stmt 0 discriminator 1
 446 014e FA6C     		ldr	r2, [r7, #76]
 447 0150 BB6A     		ldr	r3, [r7, #40]
 448 0152 9A42     		cmp	r2, r3
 449 0154 13D9     		bls	.L22
 255:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 256:Generated_Source\PSoC4/cy_em_eeprom.c ****                 startRowAddr -= context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 450              		.loc 1 256 0 is_stmt 1
 451 0156 3B68     		ldr	r3, [r7]
 452 0158 5B68     		ldr	r3, [r3, #4]
 453 015a DB01     		lsls	r3, r3, #7
 454 015c 3A6D     		ldr	r2, [r7, #80]
 455 015e D31A     		subs	r3, r2, r3
 456 0160 3B65     		str	r3, [r7, #80]
 257:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 258:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(startRowAddr < context->userFlashStartAddr)
 457              		.loc 1 258 0
 458 0162 3B68     		ldr	r3, [r7]
 459 0164 9A69     		ldr	r2, [r3, #24]
 460 0166 3B6D     		ldr	r3, [r7, #80]
 461 0168 9A42     		cmp	r2, r3
 462 016a 08D9     		bls	.L22
 259:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 260:Generated_Source\PSoC4/cy_em_eeprom.c ****                     startRowAddr = context->wlEndAddr -
 463              		.loc 1 260 0
 464 016c 3B68     		ldr	r3, [r7]
 465 016e 1A68     		ldr	r2, [r3]
 261:Generated_Source\PSoC4/cy_em_eeprom.c ****                         ((context->numberOfRows - curRdEepromRowNum) * CY_EM_EEPROM_FLASH_SIZEOF_RO
 466              		.loc 1 261 0
 467 0170 3B68     		ldr	r3, [r7]
 468 0172 5968     		ldr	r1, [r3, #4]
 469 0174 FB6C     		ldr	r3, [r7, #76]
 470 0176 CB1A     		subs	r3, r1, r3
 471 0178 DB01     		lsls	r3, r3, #7
 260:Generated_Source\PSoC4/cy_em_eeprom.c ****                         ((context->numberOfRows - curRdEepromRowNum) * CY_EM_EEPROM_FLASH_SIZEOF_RO
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 14


 472              		.loc 1 260 0
 473 017a D31A     		subs	r3, r2, r3
 474 017c 3B65     		str	r3, [r7, #80]
 475              	.L22:
 262:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 263:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 264:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 265:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u != context->redundantCopy)
 476              		.loc 1 265 0
 477 017e 3B68     		ldr	r3, [r7]
 478 0180 1B7D     		ldrb	r3, [r3, #20]
 479 0182 002B     		cmp	r3, #0
 480 0184 12D0     		beq	.L23
 266:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 267:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Check a checksum of the EEPROM row and if it is bad, check a checksum in
 268:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * the corresponding row in redundant copy, otherwise return failure.
 269:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 270:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CheckCrcAndCopy(startRowAddr, eeData, curRowOffset, numBytesToRead, context);
 481              		.loc 1 270 0
 482 0186 5F23     		movs	r3, #95
 483 0188 FC18     		adds	r4, r7, r3
 484 018a 7D6D     		ldr	r5, [r7, #84]
 485 018c 3A6A     		ldr	r2, [r7, #32]
 486 018e 796C     		ldr	r1, [r7, #68]
 487 0190 386D     		ldr	r0, [r7, #80]
 488 0192 3B68     		ldr	r3, [r7]
 489 0194 0093     		str	r3, [sp]
 490 0196 2B00     		movs	r3, r5
 491 0198 FFF7FEFF 		bl	CheckCrcAndCopy
 492 019c 0300     		movs	r3, r0
 493 019e 2370     		strb	r3, [r4]
 271:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 272:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(CY_EM_EEPROM_SUCCESS != ret)
 494              		.loc 1 272 0
 495 01a0 5F23     		movs	r3, #95
 496 01a2 FB18     		adds	r3, r7, r3
 497 01a4 1B78     		ldrb	r3, [r3]
 498 01a6 002B     		cmp	r3, #0
 499 01a8 0DD0     		beq	.L24
 273:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 274:Generated_Source\PSoC4/cy_em_eeprom.c ****                     break;
 500              		.loc 1 274 0
 501 01aa 22E0     		b	.L25
 502              	.L23:
 275:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 276:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 277:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 278:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 279:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Copy the data to the user buffer */
 280:Generated_Source\PSoC4/cy_em_eeprom.c ****                 (void)memcpy((void *)(eeData),
 503              		.loc 1 280 0
 504 01ac 786C     		ldr	r0, [r7, #68]
 281:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(startRowAddr + curRowOffset),
 505              		.loc 1 281 0
 506 01ae 3A6D     		ldr	r2, [r7, #80]
 507 01b0 3B6A     		ldr	r3, [r7, #32]
 508 01b2 D318     		adds	r3, r2, r3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 15


 280:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(startRowAddr + curRowOffset),
 509              		.loc 1 280 0
 510 01b4 1900     		movs	r1, r3
 511 01b6 7B6D     		ldr	r3, [r7, #84]
 512 01b8 1A00     		movs	r2, r3
 513 01ba FFF7FEFF 		bl	memcpy
 282:Generated_Source\PSoC4/cy_em_eeprom.c ****                              numBytesToRead);
 283:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 284:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Indicate success to be able to execute next code block */
 285:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
 514              		.loc 1 285 0
 515 01be 5F23     		movs	r3, #95
 516 01c0 FB18     		adds	r3, r7, r3
 517 01c2 0022     		movs	r2, #0
 518 01c4 1A70     		strb	r2, [r3]
 519              	.L24:
 286:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 287:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 288:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Update variables anticipated in the read operation */
 289:Generated_Source\PSoC4/cy_em_eeprom.c ****             rdAddr += numBytesToRead;
 520              		.loc 1 289 0 discriminator 2
 521 01c6 3A6C     		ldr	r2, [r7, #64]
 522 01c8 7B6D     		ldr	r3, [r7, #84]
 523 01ca D318     		adds	r3, r2, r3
 524 01cc 3B64     		str	r3, [r7, #64]
 290:Generated_Source\PSoC4/cy_em_eeprom.c ****             rdSize -= numBytesToRead;
 525              		.loc 1 290 0 discriminator 2
 526 01ce FA6B     		ldr	r2, [r7, #60]
 527 01d0 7B6D     		ldr	r3, [r7, #84]
 528 01d2 D31A     		subs	r3, r2, r3
 529 01d4 FB63     		str	r3, [r7, #60]
 291:Generated_Source\PSoC4/cy_em_eeprom.c ****             eeData += numBytesToRead;
 530              		.loc 1 291 0 discriminator 2
 531 01d6 7A6C     		ldr	r2, [r7, #68]
 532 01d8 7B6D     		ldr	r3, [r7, #84]
 533 01da D318     		adds	r3, r2, r3
 534 01dc 7B64     		str	r3, [r7, #68]
 292:Generated_Source\PSoC4/cy_em_eeprom.c ****             curRdEepromRowNum++;
 535              		.loc 1 292 0 discriminator 2
 536 01de FB6C     		ldr	r3, [r7, #76]
 537 01e0 0133     		adds	r3, r3, #1
 538 01e2 FB64     		str	r3, [r7, #76]
 234:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 539              		.loc 1 234 0 discriminator 2
 540 01e4 BB6D     		ldr	r3, [r7, #88]
 541 01e6 0133     		adds	r3, r3, #1
 542 01e8 BB65     		str	r3, [r7, #88]
 543              	.L19:
 234:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 544              		.loc 1 234 0 is_stmt 0 discriminator 1
 545 01ea BA6D     		ldr	r2, [r7, #88]
 546 01ec 3B6B     		ldr	r3, [r7, #48]
 547 01ee 9A42     		cmp	r2, r3
 548 01f0 92D3     		bcc	.L26
 549              	.L25:
 293:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 294:Generated_Source\PSoC4/cy_em_eeprom.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 16


 295:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* This code block will copy the latest data from the EEPROM headers into the
 296:Generated_Source\PSoC4/cy_em_eeprom.c ****         * user buffer. The data previously copied into the user buffer may be updated
 297:Generated_Source\PSoC4/cy_em_eeprom.c ****         * as the EEPROM headers contain more recent data. 
 298:Generated_Source\PSoC4/cy_em_eeprom.c ****         * The code block is executed when two following conditions are true:
 299:Generated_Source\PSoC4/cy_em_eeprom.c ****         *  1) The reads from "historic" data locations were successful;
 300:Generated_Source\PSoC4/cy_em_eeprom.c ****         *  2) The user performed at least one write operation to Em_EEPROM (0u !=
 301:Generated_Source\PSoC4/cy_em_eeprom.c ****         *     seqNum).        
 302:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
 303:Generated_Source\PSoC4/cy_em_eeprom.c ****         if((CY_EM_EEPROM_SUCCESS == ret) && (0u != seqNum))
 550              		.loc 1 303 0 is_stmt 1
 551 01f2 5F23     		movs	r3, #95
 552 01f4 FB18     		adds	r3, r7, r3
 553 01f6 1B78     		ldrb	r3, [r3]
 554 01f8 002B     		cmp	r3, #0
 555 01fa 00D0     		beq	.LCB448
 556 01fc 8EE0     		b	.L7	@long jump
 557              	.LCB448:
 558              		.loc 1 303 0 is_stmt 0 discriminator 1
 559 01fe 7B6B     		ldr	r3, [r7, #52]
 560 0200 002B     		cmp	r3, #0
 561 0202 00D1     		bne	.LCB451
 562 0204 8AE0     		b	.L7	@long jump
 563              	.LCB451:
 304:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 305:Generated_Source\PSoC4/cy_em_eeprom.c ****             numRowReads = (context->numberOfRows <= seqNum) ? (context->numberOfRows) : (seqNum);
 564              		.loc 1 305 0 is_stmt 1
 565 0206 3B68     		ldr	r3, [r7]
 566 0208 5B68     		ldr	r3, [r3, #4]
 567 020a 7A6B     		ldr	r2, [r7, #52]
 568 020c 9342     		cmp	r3, r2
 569 020e 00D9     		bls	.L27
 570 0210 1300     		movs	r3, r2
 571              	.L27:
 572 0212 3B63     		str	r3, [r7, #48]
 306:Generated_Source\PSoC4/cy_em_eeprom.c ****             numRowReads--;
 573              		.loc 1 306 0
 574 0214 3B6B     		ldr	r3, [r7, #48]
 575 0216 013B     		subs	r3, r3, #1
 576 0218 3B63     		str	r3, [r7, #48]
 307:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 308:Generated_Source\PSoC4/cy_em_eeprom.c ****             for(i = (seqNum - numRowReads); i <= seqNum; i++)
 577              		.loc 1 308 0
 578 021a 7A6B     		ldr	r2, [r7, #52]
 579 021c 3B6B     		ldr	r3, [r7, #48]
 580 021e D31A     		subs	r3, r2, r3
 581 0220 BB65     		str	r3, [r7, #88]
 582 0222 77E0     		b	.L28
 583              	.L39:
 309:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 310:Generated_Source\PSoC4/cy_em_eeprom.c ****                 startRowAddr = GetRowAddrBySeqNum(i, context);
 584              		.loc 1 310 0
 585 0224 3A68     		ldr	r2, [r7]
 586 0226 BB6D     		ldr	r3, [r7, #88]
 587 0228 1100     		movs	r1, r2
 588 022a 1800     		movs	r0, r3
 589 022c FFF7FEFF 		bl	GetRowAddrBySeqNum
 590 0230 0300     		movs	r3, r0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 17


 591 0232 3B65     		str	r3, [r7, #80]
 311:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 312:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if (0u != startRowAddr)
 592              		.loc 1 312 0
 593 0234 3B6D     		ldr	r3, [r7, #80]
 594 0236 002B     		cmp	r3, #0
 595 0238 69D0     		beq	.L29
 596              	.LBB4:
 313:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 314:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* The following variables are introduced to increase code readability. */
 315:Generated_Source\PSoC4/cy_em_eeprom.c ****                     uint32 startAddr  = *(uint32 *)(startRowAddr + CY_EM_EEPROM_HEADER_ADDR_OFFSET)
 597              		.loc 1 315 0
 598 023a 3B6D     		ldr	r3, [r7, #80]
 599 023c 0433     		adds	r3, r3, #4
 600 023e 1B68     		ldr	r3, [r3]
 601 0240 FB61     		str	r3, [r7, #28]
 316:Generated_Source\PSoC4/cy_em_eeprom.c ****                     uint32 endAddr    = startAddr + (*(uint32 *)(startRowAddr + CY_EM_EEPROM_HEADER
 602              		.loc 1 316 0
 603 0242 3B6D     		ldr	r3, [r7, #80]
 604 0244 0833     		adds	r3, r3, #8
 605 0246 1A68     		ldr	r2, [r3]
 606 0248 FB69     		ldr	r3, [r7, #28]
 607 024a D318     		adds	r3, r2, r3
 608 024c BB61     		str	r3, [r7, #24]
 317:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 318:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Check if the current row EEPROM header contains the data requested for read 
 319:Generated_Source\PSoC4/cy_em_eeprom.c ****                     if(0u != CY_EM_EEPROM_IS_ADDRESES_CROSSING(startAddr, endAddr, addr, addr + siz
 609              		.loc 1 319 0
 610 024e FA69     		ldr	r2, [r7, #28]
 611 0250 FB68     		ldr	r3, [r7, #12]
 612 0252 9A42     		cmp	r2, r3
 613 0254 08D9     		bls	.L30
 614              		.loc 1 319 0 is_stmt 0 discriminator 1
 615 0256 FA68     		ldr	r2, [r7, #12]
 616 0258 7B68     		ldr	r3, [r7, #4]
 617 025a D318     		adds	r3, r2, r3
 618 025c FA69     		ldr	r2, [r7, #28]
 619 025e 9A42     		cmp	r2, r3
 620 0260 9B41     		sbcs	r3, r3, r3
 621 0262 5B42     		rsbs	r3, r3, #0
 622 0264 DBB2     		uxtb	r3, r3
 623 0266 05E0     		b	.L31
 624              	.L30:
 625              		.loc 1 319 0 discriminator 2
 626 0268 FA68     		ldr	r2, [r7, #12]
 627 026a BB69     		ldr	r3, [r7, #24]
 628 026c 9A42     		cmp	r2, r3
 629 026e 9B41     		sbcs	r3, r3, r3
 630 0270 5B42     		rsbs	r3, r3, #0
 631 0272 DBB2     		uxtb	r3, r3
 632              	.L31:
 633              		.loc 1 319 0 discriminator 4
 634 0274 002B     		cmp	r3, #0
 635 0276 4AD0     		beq	.L29
 636              	.LBB5:
 320:Generated_Source\PSoC4/cy_em_eeprom.c ****                     {
 321:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 srcOffset = (startAddr > addr) ? (0u) : (addr - startAddr);
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 18


 637              		.loc 1 321 0 is_stmt 1
 638 0278 FA69     		ldr	r2, [r7, #28]
 639 027a FB68     		ldr	r3, [r7, #12]
 640 027c 9A42     		cmp	r2, r3
 641 027e 03D8     		bhi	.L32
 642              		.loc 1 321 0 is_stmt 0 discriminator 1
 643 0280 FA68     		ldr	r2, [r7, #12]
 644 0282 FB69     		ldr	r3, [r7, #28]
 645 0284 D31A     		subs	r3, r2, r3
 646 0286 00E0     		b	.L33
 647              	.L32:
 648              		.loc 1 321 0 discriminator 2
 649 0288 0023     		movs	r3, #0
 650              	.L33:
 651              		.loc 1 321 0 discriminator 4
 652 028a 7B61     		str	r3, [r7, #20]
 322:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 dstOffset = (startAddr > addr) ? (startAddr - addr): (0u);
 653              		.loc 1 322 0 is_stmt 1 discriminator 4
 654 028c FA69     		ldr	r2, [r7, #28]
 655 028e FB68     		ldr	r3, [r7, #12]
 656 0290 9A42     		cmp	r2, r3
 657 0292 03D9     		bls	.L34
 658              		.loc 1 322 0 is_stmt 0 discriminator 1
 659 0294 FA69     		ldr	r2, [r7, #28]
 660 0296 FB68     		ldr	r3, [r7, #12]
 661 0298 D31A     		subs	r3, r2, r3
 662 029a 00E0     		b	.L35
 663              	.L34:
 664              		.loc 1 322 0 discriminator 2
 665 029c 0023     		movs	r3, #0
 666              	.L35:
 667              		.loc 1 322 0 discriminator 4
 668 029e 3B61     		str	r3, [r7, #16]
 323:Generated_Source\PSoC4/cy_em_eeprom.c ****                         rdAddr = (startAddr > addr) ? (startAddr) : (addr);
 669              		.loc 1 323 0 is_stmt 1 discriminator 4
 670 02a0 FA69     		ldr	r2, [r7, #28]
 671 02a2 FB68     		ldr	r3, [r7, #12]
 672 02a4 9342     		cmp	r3, r2
 673 02a6 00D2     		bcs	.L36
 674 02a8 1300     		movs	r3, r2
 675              	.L36:
 676 02aa 3B64     		str	r3, [r7, #64]
 324:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 325:Generated_Source\PSoC4/cy_em_eeprom.c ****                         srcOffset += CY_EM_EEPROM_HEADER_DATA_OFFSET;
 677              		.loc 1 325 0 discriminator 4
 678 02ac 7B69     		ldr	r3, [r7, #20]
 679 02ae 0C33     		adds	r3, r3, #12
 680 02b0 7B61     		str	r3, [r7, #20]
 326:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 327:Generated_Source\PSoC4/cy_em_eeprom.c ****                         /* Calculate the number of bytes to be read from the current row's EEPROM h
 328:Generated_Source\PSoC4/cy_em_eeprom.c ****                         numBytesToRead = ((endAddr < (addr + size)) ? endAddr : (addr + size)) - rd
 681              		.loc 1 328 0 discriminator 4
 682 02b2 FA68     		ldr	r2, [r7, #12]
 683 02b4 7B68     		ldr	r3, [r7, #4]
 684 02b6 D318     		adds	r3, r2, r3
 685 02b8 BA69     		ldr	r2, [r7, #24]
 686 02ba 9342     		cmp	r3, r2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 19


 687 02bc 00D9     		bls	.L37
 688 02be 1300     		movs	r3, r2
 689              	.L37:
 690 02c0 3A6C     		ldr	r2, [r7, #64]
 691 02c2 9B1A     		subs	r3, r3, r2
 692 02c4 7B65     		str	r3, [r7, #84]
 329:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 330:Generated_Source\PSoC4/cy_em_eeprom.c ****                         /* Calculate the offset in the user buffer from which the data will be upda
 331:Generated_Source\PSoC4/cy_em_eeprom.c ****                         eeData = ((uint32)eepromData) + dstOffset;
 693              		.loc 1 331 0 discriminator 4
 694 02c6 BA68     		ldr	r2, [r7, #8]
 695 02c8 3B69     		ldr	r3, [r7, #16]
 696 02ca D318     		adds	r3, r2, r3
 697 02cc 7B64     		str	r3, [r7, #68]
 332:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 333:Generated_Source\PSoC4/cy_em_eeprom.c ****                         /* Check a checksum of the EEPROM row and if it is bad, check a checksum in
 334:Generated_Source\PSoC4/cy_em_eeprom.c ****                         * corresponding row in redundant copy, otherwise return failure. Copy the d
 335:Generated_Source\PSoC4/cy_em_eeprom.c ****                         * from the recent EEPROM headers to the user buffer. This will overwrite th
 336:Generated_Source\PSoC4/cy_em_eeprom.c ****                         * data copied form EEPROM data locations as the data in EEPROM headers is n
 337:Generated_Source\PSoC4/cy_em_eeprom.c ****                         */
 338:Generated_Source\PSoC4/cy_em_eeprom.c ****                         if(0u != context->redundantCopy)
 698              		.loc 1 338 0 discriminator 4
 699 02ce 3B68     		ldr	r3, [r7]
 700 02d0 1B7D     		ldrb	r3, [r3, #20]
 701 02d2 002B     		cmp	r3, #0
 702 02d4 12D0     		beq	.L38
 339:Generated_Source\PSoC4/cy_em_eeprom.c ****                         {
 340:Generated_Source\PSoC4/cy_em_eeprom.c ****                             ret = CheckCrcAndCopy(startRowAddr, eeData, srcOffset, numBytesToRead, 
 703              		.loc 1 340 0
 704 02d6 5F23     		movs	r3, #95
 705 02d8 FC18     		adds	r4, r7, r3
 706 02da 7D6D     		ldr	r5, [r7, #84]
 707 02dc 7A69     		ldr	r2, [r7, #20]
 708 02de 796C     		ldr	r1, [r7, #68]
 709 02e0 386D     		ldr	r0, [r7, #80]
 710 02e2 3B68     		ldr	r3, [r7]
 711 02e4 0093     		str	r3, [sp]
 712 02e6 2B00     		movs	r3, r5
 713 02e8 FFF7FEFF 		bl	CheckCrcAndCopy
 714 02ec 0300     		movs	r3, r0
 715 02ee 2370     		strb	r3, [r4]
 341:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 342:Generated_Source\PSoC4/cy_em_eeprom.c ****                             if(CY_EM_EEPROM_SUCCESS != ret)
 716              		.loc 1 342 0
 717 02f0 5F23     		movs	r3, #95
 718 02f2 FB18     		adds	r3, r7, r3
 719 02f4 1B78     		ldrb	r3, [r3]
 720 02f6 002B     		cmp	r3, #0
 721 02f8 09D0     		beq	.L29
 343:Generated_Source\PSoC4/cy_em_eeprom.c ****                             {
 344:Generated_Source\PSoC4/cy_em_eeprom.c ****                                 break;
 722              		.loc 1 344 0
 723 02fa 0FE0     		b	.L7
 724              	.L38:
 345:Generated_Source\PSoC4/cy_em_eeprom.c ****                             }
 346:Generated_Source\PSoC4/cy_em_eeprom.c ****                         }
 347:Generated_Source\PSoC4/cy_em_eeprom.c ****                         else
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 20


 348:Generated_Source\PSoC4/cy_em_eeprom.c ****                         {
 349:Generated_Source\PSoC4/cy_em_eeprom.c ****                             (void)memcpy((void *)(eeData), (void *)(startRowAddr + srcOffset), numB
 725              		.loc 1 349 0
 726 02fc 786C     		ldr	r0, [r7, #68]
 727 02fe 3A6D     		ldr	r2, [r7, #80]
 728 0300 7B69     		ldr	r3, [r7, #20]
 729 0302 D318     		adds	r3, r2, r3
 730 0304 1900     		movs	r1, r3
 731 0306 7B6D     		ldr	r3, [r7, #84]
 732 0308 1A00     		movs	r2, r3
 733 030a FFF7FEFF 		bl	memcpy
 734              	.L29:
 735              	.LBE5:
 736              	.LBE4:
 308:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 737              		.loc 1 308 0 discriminator 2
 738 030e BB6D     		ldr	r3, [r7, #88]
 739 0310 0133     		adds	r3, r3, #1
 740 0312 BB65     		str	r3, [r7, #88]
 741              	.L28:
 308:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 742              		.loc 1 308 0 is_stmt 0 discriminator 1
 743 0314 BA6D     		ldr	r2, [r7, #88]
 744 0316 7B6B     		ldr	r3, [r7, #52]
 745 0318 9A42     		cmp	r2, r3
 746 031a 83D9     		bls	.L39
 747              	.L7:
 748              	.LBE2:
 350:Generated_Source\PSoC4/cy_em_eeprom.c ****                         }
 351:Generated_Source\PSoC4/cy_em_eeprom.c ****                     }
 352:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 353:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 354:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 355:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 356:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 357:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 749              		.loc 1 357 0 is_stmt 1
 750 031c 5F23     		movs	r3, #95
 751 031e FB18     		adds	r3, r7, r3
 752 0320 1B78     		ldrb	r3, [r3]
 358:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 753              		.loc 1 358 0
 754 0322 1800     		movs	r0, r3
 755 0324 BD46     		mov	sp, r7
 756 0326 18B0     		add	sp, sp, #96
 757              		@ sp needed
 758 0328 B0BD     		pop	{r4, r5, r7, pc}
 759              		.cfi_endproc
 760              	.LFE1:
 761              		.size	Cy_Em_EEPROM_Read, .-Cy_Em_EEPROM_Read
 762              		.global	__aeabi_uidivmod
 763 032a C046     		.section	.text.Cy_Em_EEPROM_Write,"ax",%progbits
 764              		.align	2
 765              		.global	Cy_Em_EEPROM_Write
 766              		.code	16
 767              		.thumb_func
 768              		.type	Cy_Em_EEPROM_Write, %function
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 21


 769              	Cy_Em_EEPROM_Write:
 770              	.LFB2:
 359:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 360:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 361:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 362:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Write
 363:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 364:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 365:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function takes the logical EEPROM address and converts it to the actual
 366:Generated_Source\PSoC4/cy_em_eeprom.c **** * physical address and writes data there. If wear leveling is implemented, the
 367:Generated_Source\PSoC4/cy_em_eeprom.c **** * writing process will use the wear leveling techniques. This is a blocking
 368:Generated_Source\PSoC4/cy_em_eeprom.c **** * function and it does not return until the write operation is completed. The
 369:Generated_Source\PSoC4/cy_em_eeprom.c **** * user firmware should not enter Hibernate mode until write is completed. The
 370:Generated_Source\PSoC4/cy_em_eeprom.c **** * write operation is allowed in Sleep and Deep-Sleep modes. During the flash
 371:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation, the device should not be reset, including the XRES pin, a software
 372:Generated_Source\PSoC4/cy_em_eeprom.c **** * reset, and watchdog reset sources. Also, low-voltage detect circuits should
 373:Generated_Source\PSoC4/cy_em_eeprom.c **** * be configured to generate an interrupt instead of a reset. Otherwise, portions
 374:Generated_Source\PSoC4/cy_em_eeprom.c **** * of flash may undergo unexpected changes.
 375:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 376:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
 377:Generated_Source\PSoC4/cy_em_eeprom.c **** * The logical start address in EEPROM to start writing data from.
 378:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 379:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param eepromData
 380:Generated_Source\PSoC4/cy_em_eeprom.c **** * Data to write to EEPROM.
 381:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 382:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param size
 383:Generated_Source\PSoC4/cy_em_eeprom.c **** * The amount of data to write to EEPROM.
 384:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 385:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 386:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 387:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 388:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 389:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 390:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 391:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 392:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform write
 393:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 394:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 395:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 396:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 397:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case when blocking write option is used, if this function is called by
 398:Generated_Source\PSoC4/cy_em_eeprom.c **** * the CM4 the user code on CM0P and the user code on CM4 are blocked until erase
 399:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row operation is finished. If this function is called by the CM0P the
 400:Generated_Source\PSoC4/cy_em_eeprom.c **** * user code on CM4 is not blocked and the user code on CM0P is blocked until
 401:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase flash row operation is finished. Plan your task allocation accordingly.
 402:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 403:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 404:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if non-blocking write option is used and when user flash is used as
 405:Generated_Source\PSoC4/cy_em_eeprom.c **** * an EEPROM storage care should be taken to prevent the read while write (RWW)
 406:Generated_Source\PSoC4/cy_em_eeprom.c **** * exception. To prevent the RWW exception the user flash macro that includes
 407:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM storage should not be read while the EEPROM write is not completed.
 408:Generated_Source\PSoC4/cy_em_eeprom.c **** * The read also means the user code execution from the respective flash macro.
 409:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 410:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 411:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Write(uint32 addr,
 412:Generated_Source\PSoC4/cy_em_eeprom.c ****                                             void * eepromData,
 413:Generated_Source\PSoC4/cy_em_eeprom.c ****                                             uint32 size,
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 22


 414:Generated_Source\PSoC4/cy_em_eeprom.c ****                                             cy_stc_eeprom_context_t * context)
 415:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 771              		.loc 1 415 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 208
 774              		@ frame_needed = 1, uses_anonymous_args = 0
 775 0000 B0B5     		push	{r4, r5, r7, lr}
 776              		.cfi_def_cfa_offset 16
 777              		.cfi_offset 4, -16
 778              		.cfi_offset 5, -12
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 B6B0     		sub	sp, sp, #216
 782              		.cfi_def_cfa_offset 232
 783 0004 02AF     		add	r7, sp, #8
 784              		.cfi_def_cfa 7, 224
 785 0006 F860     		str	r0, [r7, #12]
 786 0008 B960     		str	r1, [r7, #8]
 787 000a 7A60     		str	r2, [r7, #4]
 788 000c 3B60     		str	r3, [r7]
 416:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 789              		.loc 1 416 0
 790 000e CF23     		movs	r3, #207
 791 0010 FB18     		adds	r3, r7, r3
 792 0012 0122     		movs	r2, #1
 793 0014 1A70     		strb	r2, [r3]
 417:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 418:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 wrCnt;
 419:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 actEmEepromRowNum;
 420:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
 421:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startAddr = 0u;
 794              		.loc 1 421 0
 795 0016 0023     		movs	r3, #0
 796 0018 3B62     		str	r3, [r7, #32]
 422:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 endAddr = 0u;
 797              		.loc 1 422 0
 798 001a 0023     		movs	r3, #0
 799 001c FB61     		str	r3, [r7, #28]
 423:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 tmpRowAddr;
 424:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = context->lastWrRowAddr;
 800              		.loc 1 424 0
 801 001e 3B68     		ldr	r3, [r7]
 802 0020 9B68     		ldr	r3, [r3, #8]
 803 0022 BB61     		str	r3, [r7, #24]
 425:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowRdAddr;
 426:Generated_Source\PSoC4/cy_em_eeprom.c ****     void * tmpData;
 427:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 eeData = (uint32) eepromData; /* To avoid the pointer arithmetic with void */
 804              		.loc 1 427 0
 805 0024 BB68     		ldr	r3, [r7, #8]
 806 0026 BC22     		movs	r2, #188
 807 0028 BA18     		adds	r2, r7, r2
 808 002a 1360     		str	r3, [r2]
 428:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 429:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check if the EEPROM data does not exceed the EEPROM capacity */
 430:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((0u != size) && ((addr + size) <= (context->eepromSize)) && (NULL != eepromData))
 809              		.loc 1 430 0
 810 002c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 23


 811 002e 002B     		cmp	r3, #0
 812 0030 00D1     		bne	.LCB674
 813 0032 77E1     		b	.L42	@long jump
 814              	.LCB674:
 815              		.loc 1 430 0 is_stmt 0 discriminator 1
 816 0034 FA68     		ldr	r2, [r7, #12]
 817 0036 7B68     		ldr	r3, [r7, #4]
 818 0038 D218     		adds	r2, r2, r3
 819 003a 3B68     		ldr	r3, [r7]
 820 003c DB68     		ldr	r3, [r3, #12]
 821 003e 9A42     		cmp	r2, r3
 822 0040 00D9     		bls	.LCB681
 823 0042 6FE1     		b	.L42	@long jump
 824              	.LCB681:
 825              		.loc 1 430 0 discriminator 2
 826 0044 BB68     		ldr	r3, [r7, #8]
 827 0046 002B     		cmp	r3, #0
 828 0048 00D1     		bne	.LCB684
 829 004a 6BE1     		b	.L42	@long jump
 830              	.LCB684:
 831              	.LBB6:
 431:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 432:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 numWrites = ((size - 1u) / CY_EM_EEPROM_HEADER_DATA_LEN) + 1u;
 832              		.loc 1 432 0 is_stmt 1
 833 004c 7B68     		ldr	r3, [r7, #4]
 834 004e 013B     		subs	r3, r3, #1
 835 0050 3021     		movs	r1, #48
 836 0052 1800     		movs	r0, r3
 837 0054 FFF7FEFF 		bl	__aeabi_uidiv
 838 0058 0300     		movs	r3, r0
 839 005a 0133     		adds	r3, r3, #1
 840 005c B422     		movs	r2, #180
 841 005e BA18     		adds	r2, r7, r2
 842 0060 1360     		str	r3, [r2]
 433:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 eeHeaderDataOffset = 0u;
 843              		.loc 1 433 0
 844 0062 0023     		movs	r3, #0
 845 0064 3B61     		str	r3, [r7, #16]
 434:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 435:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(wrCnt = 0u; wrCnt < numWrites; wrCnt++)
 846              		.loc 1 435 0
 847 0066 0023     		movs	r3, #0
 848 0068 C422     		movs	r2, #196
 849 006a BA18     		adds	r2, r7, r2
 850 006c 1360     		str	r3, [r2]
 851 006e 4EE1     		b	.L43
 852              	.L61:
 853              	.LBB7:
 436:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 437:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 skipOperation = 0u;
 854              		.loc 1 437 0
 855 0070 0023     		movs	r3, #0
 856 0072 B822     		movs	r2, #184
 857 0074 BA18     		adds	r2, r7, r2
 858 0076 1360     		str	r3, [r2]
 438:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the sequence number of the last written row */
 439:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 24


 859              		.loc 1 439 0
 860 0078 BB69     		ldr	r3, [r7, #24]
 861 007a 1B68     		ldr	r3, [r3]
 862 007c B022     		movs	r2, #176
 863 007e BA18     		adds	r2, r7, r2
 864 0080 1360     		str	r3, [r2]
 440:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 441:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the address of the row to be written. The "emEepromRowAddr" may be
 442:Generated_Source\PSoC4/cy_em_eeprom.c ****             * updated with the proper address (if wear leveling is used). The
 443:Generated_Source\PSoC4/cy_em_eeprom.c ****             * "emEepromRowRdAddr" will point to the row address from which the historic
 444:Generated_Source\PSoC4/cy_em_eeprom.c ****             * data will be read into the RAM buffer.
 445:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 446:Generated_Source\PSoC4/cy_em_eeprom.c ****             GetNextRowToWrite(seqNum, &emEepromRowAddr, &emEepromRowRdAddr, context);
 865              		.loc 1 446 0
 866 0082 3B68     		ldr	r3, [r7]
 867 0084 1422     		movs	r2, #20
 868 0086 BA18     		adds	r2, r7, r2
 869 0088 1821     		movs	r1, #24
 870 008a 7918     		adds	r1, r7, r1
 871 008c B020     		movs	r0, #176
 872 008e 3818     		adds	r0, r7, r0
 873 0090 0068     		ldr	r0, [r0]
 874 0092 FFF7FEFF 		bl	GetNextRowToWrite
 447:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 448:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Clear the RAM buffer so to not put junk into flash */
 449:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memset(writeRamBuffer, 0, CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 875              		.loc 1 449 0
 876 0096 2423     		movs	r3, #36
 877 0098 FB18     		adds	r3, r7, r3
 878 009a 8022     		movs	r2, #128
 879 009c 0021     		movs	r1, #0
 880 009e 1800     		movs	r0, r3
 881 00a0 FFF7FEFF 		bl	memset
 450:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 451:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Fill the EM_EEPROM header info for the row in the RAM buffer */
 452:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum++;
 882              		.loc 1 452 0
 883 00a4 B023     		movs	r3, #176
 884 00a6 FB18     		adds	r3, r7, r3
 885 00a8 1B68     		ldr	r3, [r3]
 886 00aa 0133     		adds	r3, r3, #1
 887 00ac B022     		movs	r2, #176
 888 00ae BA18     		adds	r2, r7, r2
 889 00b0 1360     		str	r3, [r2]
 453:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_SEQ_NUM_OFFSET_U32] = seqNum;
 890              		.loc 1 453 0
 891 00b2 2423     		movs	r3, #36
 892 00b4 FB18     		adds	r3, r7, r3
 893 00b6 B022     		movs	r2, #176
 894 00b8 BA18     		adds	r2, r7, r2
 895 00ba 1268     		ldr	r2, [r2]
 896 00bc 1A60     		str	r2, [r3]
 454:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_ADDR_OFFSET_U32] = addr;
 897              		.loc 1 454 0
 898 00be 2423     		movs	r3, #36
 899 00c0 FB18     		adds	r3, r7, r3
 900 00c2 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 25


 901 00c4 5A60     		str	r2, [r3, #4]
 455:Generated_Source\PSoC4/cy_em_eeprom.c ****             tmpData = (void *) eeData;
 902              		.loc 1 455 0
 903 00c6 BC23     		movs	r3, #188
 904 00c8 FB18     		adds	r3, r7, r3
 905 00ca 1B68     		ldr	r3, [r3]
 906 00cc AC22     		movs	r2, #172
 907 00ce BA18     		adds	r2, r7, r2
 908 00d0 1360     		str	r3, [r2]
 456:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 457:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if this is the last row to write */
 458:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(wrCnt == (numWrites - 1u))
 909              		.loc 1 458 0
 910 00d2 B423     		movs	r3, #180
 911 00d4 FB18     		adds	r3, r7, r3
 912 00d6 1B68     		ldr	r3, [r3]
 913 00d8 5A1E     		subs	r2, r3, #1
 914 00da C423     		movs	r3, #196
 915 00dc FB18     		adds	r3, r7, r3
 916 00de 1B68     		ldr	r3, [r3]
 917 00e0 9A42     		cmp	r2, r3
 918 00e2 04D1     		bne	.L44
 459:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 460:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Fill in the remaining size value to the EEPROM header. */
 461:Generated_Source\PSoC4/cy_em_eeprom.c ****                 writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32] = size;
 919              		.loc 1 461 0
 920 00e4 2423     		movs	r3, #36
 921 00e6 FB18     		adds	r3, r7, r3
 922 00e8 7A68     		ldr	r2, [r7, #4]
 923 00ea 9A60     		str	r2, [r3, #8]
 924 00ec 10E0     		b	.L45
 925              	.L44:
 462:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 463:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 464:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 465:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* This is not the last row to write in the current EEPROM write operation.
 466:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * Write the maximum possible data size to the EEPROM header. Update the
 467:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * size, eeData and addr respectively.
 468:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 469:Generated_Source\PSoC4/cy_em_eeprom.c ****                 writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32] = CY_EM_EEPROM_HEADER_DATA_LEN;
 926              		.loc 1 469 0
 927 00ee 2423     		movs	r3, #36
 928 00f0 FB18     		adds	r3, r7, r3
 929 00f2 3022     		movs	r2, #48
 930 00f4 9A60     		str	r2, [r3, #8]
 470:Generated_Source\PSoC4/cy_em_eeprom.c ****                 size -= CY_EM_EEPROM_HEADER_DATA_LEN;
 931              		.loc 1 470 0
 932 00f6 7B68     		ldr	r3, [r7, #4]
 933 00f8 303B     		subs	r3, r3, #48
 934 00fa 7B60     		str	r3, [r7, #4]
 471:Generated_Source\PSoC4/cy_em_eeprom.c ****                 addr += CY_EM_EEPROM_HEADER_DATA_LEN;
 935              		.loc 1 471 0
 936 00fc FB68     		ldr	r3, [r7, #12]
 937 00fe 3033     		adds	r3, r3, #48
 938 0100 FB60     		str	r3, [r7, #12]
 472:Generated_Source\PSoC4/cy_em_eeprom.c ****                 eeData += CY_EM_EEPROM_HEADER_DATA_LEN;
 939              		.loc 1 472 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 26


 940 0102 BC23     		movs	r3, #188
 941 0104 FB18     		adds	r3, r7, r3
 942 0106 1B68     		ldr	r3, [r3]
 943 0108 3033     		adds	r3, r3, #48
 944 010a BC22     		movs	r2, #188
 945 010c BA18     		adds	r2, r7, r2
 946 010e 1360     		str	r3, [r2]
 947              	.L45:
 473:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 474:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 475:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the data to the EEPROM header */
 476:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memcpy((void *)&writeRamBuffer[CY_EM_EEPROM_HEADER_DATA_OFFSET_U32],
 477:Generated_Source\PSoC4/cy_em_eeprom.c ****                          tmpData,
 478:Generated_Source\PSoC4/cy_em_eeprom.c ****                          writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32]);
 948              		.loc 1 478 0
 949 0110 2423     		movs	r3, #36
 950 0112 FB18     		adds	r3, r7, r3
 951 0114 9A68     		ldr	r2, [r3, #8]
 476:Generated_Source\PSoC4/cy_em_eeprom.c ****                          tmpData,
 952              		.loc 1 476 0
 953 0116 AC23     		movs	r3, #172
 954 0118 FB18     		adds	r3, r7, r3
 955 011a 1968     		ldr	r1, [r3]
 956 011c 2423     		movs	r3, #36
 957 011e FB18     		adds	r3, r7, r3
 958 0120 0C33     		adds	r3, r3, #12
 959 0122 1800     		movs	r0, r3
 960 0124 FFF7FEFF 		bl	memcpy
 479:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 480:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(emEepromRowRdAddr != 0UL)
 961              		.loc 1 480 0
 962 0128 7B69     		ldr	r3, [r7, #20]
 963 012a 002B     		cmp	r3, #0
 964 012c 09D0     		beq	.L46
 481:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 482:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Copy the EEPROM historic data for this row from flash to RAM */
 483:Generated_Source\PSoC4/cy_em_eeprom.c ****                 (void)memcpy((void *)&writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 484:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(emEepromRowRdAddr + CY_EM_EEPROM_EEPROM_DATA_LEN),
 965              		.loc 1 484 0
 966 012e 7B69     		ldr	r3, [r7, #20]
 967 0130 4033     		adds	r3, r3, #64
 483:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(emEepromRowRdAddr + CY_EM_EEPROM_EEPROM_DATA_LEN),
 968              		.loc 1 483 0
 969 0132 1900     		movs	r1, r3
 970 0134 2423     		movs	r3, #36
 971 0136 FB18     		adds	r3, r7, r3
 972 0138 4033     		adds	r3, r3, #64
 973 013a 4022     		movs	r2, #64
 974 013c 1800     		movs	r0, r3
 975 013e FFF7FEFF 		bl	memcpy
 976              	.L46:
 485:Generated_Source\PSoC4/cy_em_eeprom.c ****                              CY_EM_EEPROM_EEPROM_DATA_LEN);
 486:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 487:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 488:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if there is data for this location in other EEPROM headers:
 489:Generated_Source\PSoC4/cy_em_eeprom.c ****             * find out the row with the lowest possible sequence number which
 490:Generated_Source\PSoC4/cy_em_eeprom.c ****             * may contain the data for the current row.
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 27


 491:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 492:Generated_Source\PSoC4/cy_em_eeprom.c ****             i = (seqNum > context->numberOfRows) ? ((seqNum - (context->numberOfRows)) + 1u) : 1u;
 977              		.loc 1 492 0
 978 0142 3B68     		ldr	r3, [r7]
 979 0144 5A68     		ldr	r2, [r3, #4]
 980 0146 B023     		movs	r3, #176
 981 0148 FB18     		adds	r3, r7, r3
 982 014a 1B68     		ldr	r3, [r3]
 983 014c 9A42     		cmp	r2, r3
 984 014e 07D2     		bcs	.L47
 985              		.loc 1 492 0 is_stmt 0 discriminator 1
 986 0150 3B68     		ldr	r3, [r7]
 987 0152 5B68     		ldr	r3, [r3, #4]
 988 0154 B022     		movs	r2, #176
 989 0156 BA18     		adds	r2, r7, r2
 990 0158 1268     		ldr	r2, [r2]
 991 015a D31A     		subs	r3, r2, r3
 992 015c 0133     		adds	r3, r3, #1
 993 015e 00E0     		b	.L48
 994              	.L47:
 995              		.loc 1 492 0 discriminator 2
 996 0160 0123     		movs	r3, #1
 997              	.L48:
 998              		.loc 1 492 0 discriminator 4
 999 0162 C822     		movs	r2, #200
 1000 0164 BA18     		adds	r2, r7, r2
 1001 0166 1360     		str	r3, [r2]
 493:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 494:Generated_Source\PSoC4/cy_em_eeprom.c ****             for(; i <= seqNum; i++)
 1002              		.loc 1 494 0 is_stmt 1 discriminator 4
 1003 0168 8AE0     		b	.L49
 1004              	.L56:
 495:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 496:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(i == seqNum)
 1005              		.loc 1 496 0
 1006 016a C823     		movs	r3, #200
 1007 016c FB18     		adds	r3, r7, r3
 1008 016e 1A68     		ldr	r2, [r3]
 1009 0170 B023     		movs	r3, #176
 1010 0172 FB18     		adds	r3, r7, r3
 1011 0174 1B68     		ldr	r3, [r3]
 1012 0176 9A42     		cmp	r2, r3
 1013 0178 05D1     		bne	.L50
 497:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 498:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* The code reached the row that is about to be written. Analyze the recently
 499:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * created EEPROM header (stored in the RAM buffer currently): if it contains
 500:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * the data for EEPROM data locations in the row that is about to be written.
 501:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 502:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = (uint32) writeRamBuffer;
 1014              		.loc 1 502 0
 1015 017a 2423     		movs	r3, #36
 1016 017c FB18     		adds	r3, r7, r3
 1017 017e C022     		movs	r2, #192
 1018 0180 BA18     		adds	r2, r7, r2
 1019 0182 1360     		str	r3, [r2]
 1020 0184 0BE0     		b	.L51
 1021              	.L50:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 28


 503:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 504:Generated_Source\PSoC4/cy_em_eeprom.c ****                 else
 505:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 506:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Retrieve the address of the previously written row by its sequence number.
 507:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * The pointer will be used to get data from the respective EEPROM header.
 508:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 509:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = GetRowAddrBySeqNum(i, context);
 1022              		.loc 1 509 0
 1023 0186 3A68     		ldr	r2, [r7]
 1024 0188 C823     		movs	r3, #200
 1025 018a FB18     		adds	r3, r7, r3
 1026 018c 1B68     		ldr	r3, [r3]
 1027 018e 1100     		movs	r1, r2
 1028 0190 1800     		movs	r0, r3
 1029 0192 FFF7FEFF 		bl	GetRowAddrBySeqNum
 1030 0196 0300     		movs	r3, r0
 1031 0198 C022     		movs	r2, #192
 1032 019a BA18     		adds	r2, r7, r2
 1033 019c 1360     		str	r3, [r2]
 1034              	.L51:
 510:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 511:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 512:Generated_Source\PSoC4/cy_em_eeprom.c ****                 actEmEepromRowNum = CY_EM_EEPROM_GET_ACT_ROW_NUM_FROM_ADDR(emEepromRowAddr,
 1035              		.loc 1 512 0
 1036 019e BA69     		ldr	r2, [r7, #24]
 1037 01a0 3B68     		ldr	r3, [r7]
 1038 01a2 9B69     		ldr	r3, [r3, #24]
 1039 01a4 D31A     		subs	r3, r2, r3
 1040 01a6 DA09     		lsrs	r2, r3, #7
 1041 01a8 3B68     		ldr	r3, [r7]
 1042 01aa 5B68     		ldr	r3, [r3, #4]
 1043 01ac 1900     		movs	r1, r3
 1044 01ae 1000     		movs	r0, r2
 1045 01b0 FFF7FEFF 		bl	__aeabi_uidivmod
 1046 01b4 0B00     		movs	r3, r1
 1047 01b6 A822     		movs	r2, #168
 1048 01b8 BA18     		adds	r2, r7, r2
 1049 01ba 1360     		str	r3, [r2]
 513:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                                            context->numberOfRows,
 514:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                                            context->userFlashStartA
 515:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0UL != tmpRowAddr)
 1050              		.loc 1 515 0
 1051 01bc C023     		movs	r3, #192
 1052 01be FB18     		adds	r3, r7, r3
 1053 01c0 1B68     		ldr	r3, [r3]
 1054 01c2 002B     		cmp	r3, #0
 1055 01c4 1DD0     		beq	.L52
 516:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 517:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Calculate the required addressed for the later EEPROM historic data update *
 518:Generated_Source\PSoC4/cy_em_eeprom.c ****                     skipOperation = GetAddresses(
 519:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 520:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &endAddr,
 521:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &eeHeaderDataOffset,
 522:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               actEmEepromRowNum,
 523:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               *(uint32 *)(tmpRowAddr + CY_EM_EEPROM_HEADER_ADDR_OFF
 1056              		.loc 1 523 0
 1057 01c6 C023     		movs	r3, #192
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 29


 1058 01c8 FB18     		adds	r3, r7, r3
 1059 01ca 1B68     		ldr	r3, [r3]
 1060 01cc 0433     		adds	r3, r3, #4
 518:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 1061              		.loc 1 518 0
 1062 01ce 1A68     		ldr	r2, [r3]
 524:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               *(uint32 *)(tmpRowAddr + CY_EM_EEPROM_HEADER_LEN_OFFS
 1063              		.loc 1 524 0
 1064 01d0 C023     		movs	r3, #192
 1065 01d2 FB18     		adds	r3, r7, r3
 1066 01d4 1B68     		ldr	r3, [r3]
 1067 01d6 0833     		adds	r3, r3, #8
 518:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 1068              		.loc 1 518 0
 1069 01d8 1B68     		ldr	r3, [r3]
 1070 01da A821     		movs	r1, #168
 1071 01dc 7918     		adds	r1, r7, r1
 1072 01de 0D68     		ldr	r5, [r1]
 1073 01e0 1021     		movs	r1, #16
 1074 01e2 7C18     		adds	r4, r7, r1
 1075 01e4 1C21     		movs	r1, #28
 1076 01e6 7918     		adds	r1, r7, r1
 1077 01e8 2020     		movs	r0, #32
 1078 01ea 3818     		adds	r0, r7, r0
 1079 01ec 0193     		str	r3, [sp, #4]
 1080 01ee 0092     		str	r2, [sp]
 1081 01f0 2B00     		movs	r3, r5
 1082 01f2 2200     		movs	r2, r4
 1083 01f4 FFF7FEFF 		bl	GetAddresses
 1084 01f8 0300     		movs	r3, r0
 1085 01fa B822     		movs	r2, #184
 1086 01fc BA18     		adds	r2, r7, r2
 1087 01fe 1360     		str	r3, [r2]
 1088 0200 06E0     		b	.L53
 1089              	.L52:
 525:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 526:Generated_Source\PSoC4/cy_em_eeprom.c ****                 else
 527:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 528:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Skip writes to the RAM buffer */
 529:Generated_Source\PSoC4/cy_em_eeprom.c ****                     skipOperation++;
 1090              		.loc 1 529 0
 1091 0202 B823     		movs	r3, #184
 1092 0204 FB18     		adds	r3, r7, r3
 1093 0206 1B68     		ldr	r3, [r3]
 1094 0208 0133     		adds	r3, r3, #1
 1095 020a B822     		movs	r2, #184
 1096 020c BA18     		adds	r2, r7, r2
 1097 020e 1360     		str	r3, [r2]
 1098              	.L53:
 530:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 531:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 532:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Write data to the RAM buffer */
 533:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0u == skipOperation)
 1099              		.loc 1 533 0
 1100 0210 B823     		movs	r3, #184
 1101 0212 FB18     		adds	r3, r7, r3
 1102 0214 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 30


 1103 0216 002B     		cmp	r3, #0
 1104 0218 1BD1     		bne	.L54
 1105              	.LBB8:
 534:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 535:Generated_Source\PSoC4/cy_em_eeprom.c ****                     uint32 dataAddr = ((uint32)((uint8 *)&writeRamBuffer)) + startAddr;
 1106              		.loc 1 535 0
 1107 021a 2423     		movs	r3, #36
 1108 021c FA18     		adds	r2, r7, r3
 1109 021e 3B6A     		ldr	r3, [r7, #32]
 1110 0220 D318     		adds	r3, r2, r3
 1111 0222 A422     		movs	r2, #164
 1112 0224 BA18     		adds	r2, r7, r2
 1113 0226 1360     		str	r3, [r2]
 536:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 537:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Update the address to point to the EEPROM header data and not to
 538:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * the start of the row.
 539:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 540:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = tmpRowAddr + CY_EM_EEPROM_HEADER_DATA_OFFSET + eeHeaderDataOffset;
 1114              		.loc 1 540 0
 1115 0228 3A69     		ldr	r2, [r7, #16]
 1116 022a C023     		movs	r3, #192
 1117 022c FB18     		adds	r3, r7, r3
 1118 022e 1B68     		ldr	r3, [r3]
 1119 0230 D318     		adds	r3, r2, r3
 1120 0232 0C33     		adds	r3, r3, #12
 1121 0234 C022     		movs	r2, #192
 1122 0236 BA18     		adds	r2, r7, r2
 1123 0238 1360     		str	r3, [r2]
 541:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (void)memcpy((void *)(dataAddr), (void *)(tmpRowAddr), endAddr - startAddr);
 1124              		.loc 1 541 0
 1125 023a A423     		movs	r3, #164
 1126 023c FB18     		adds	r3, r7, r3
 1127 023e 1868     		ldr	r0, [r3]
 1128 0240 C023     		movs	r3, #192
 1129 0242 FB18     		adds	r3, r7, r3
 1130 0244 1968     		ldr	r1, [r3]
 1131 0246 FA69     		ldr	r2, [r7, #28]
 1132 0248 3B6A     		ldr	r3, [r7, #32]
 1133 024a D31A     		subs	r3, r2, r3
 1134 024c 1A00     		movs	r2, r3
 1135 024e FFF7FEFF 		bl	memcpy
 1136              	.L54:
 1137              	.LBE8:
 542:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 543:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 544:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Calculate the checksum if redundant copy is enabled */
 545:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0u != context->redundantCopy)
 1138              		.loc 1 545 0
 1139 0252 3B68     		ldr	r3, [r7]
 1140 0254 1B7D     		ldrb	r3, [r3, #20]
 1141 0256 002B     		cmp	r3, #0
 1142 0258 0BD0     		beq	.L55
 546:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 547:Generated_Source\PSoC4/cy_em_eeprom.c ****                     writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
 548:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1143              		.loc 1 548 0
 1144 025a 2423     		movs	r3, #36
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 31


 1145 025c FB18     		adds	r3, r7, r3
 1146 025e 4033     		adds	r3, r3, #64
 1147 0260 4021     		movs	r1, #64
 1148 0262 1800     		movs	r0, r3
 1149 0264 FFF7FEFF 		bl	CalcChecksum
 1150 0268 0300     		movs	r3, r0
 547:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1151              		.loc 1 547 0
 1152 026a 1A00     		movs	r2, r3
 1153 026c 2423     		movs	r3, #36
 1154 026e FB18     		adds	r3, r7, r3
 1155 0270 DA63     		str	r2, [r3, #60]
 1156              	.L55:
 494:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 1157              		.loc 1 494 0
 1158 0272 C823     		movs	r3, #200
 1159 0274 FB18     		adds	r3, r7, r3
 1160 0276 1B68     		ldr	r3, [r3]
 1161 0278 0133     		adds	r3, r3, #1
 1162 027a C822     		movs	r2, #200
 1163 027c BA18     		adds	r2, r7, r2
 1164 027e 1360     		str	r3, [r2]
 1165              	.L49:
 494:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 1166              		.loc 1 494 0 is_stmt 0 discriminator 1
 1167 0280 C823     		movs	r3, #200
 1168 0282 FB18     		adds	r3, r7, r3
 1169 0284 1A68     		ldr	r2, [r3]
 1170 0286 B023     		movs	r3, #176
 1171 0288 FB18     		adds	r3, r7, r3
 1172 028a 1B68     		ldr	r3, [r3]
 1173 028c 9A42     		cmp	r2, r3
 1174 028e 00D8     		bhi	.LCB1002
 1175 0290 6BE7     		b	.L56	@long jump
 1176              	.LCB1002:
 549:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                   CY_EM_EEPROM_EEPROM_DATA_LEN);
 550:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 551:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 552:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 553:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the data to the specified flash row */
 554:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = WriteRow(emEepromRowAddr, writeRamBuffer, context);
 1177              		.loc 1 554 0 is_stmt 1
 1178 0292 BB69     		ldr	r3, [r7, #24]
 1179 0294 CF22     		movs	r2, #207
 1180 0296 BC18     		adds	r4, r7, r2
 1181 0298 3A68     		ldr	r2, [r7]
 1182 029a 2421     		movs	r1, #36
 1183 029c 7918     		adds	r1, r7, r1
 1184 029e 1800     		movs	r0, r3
 1185 02a0 FFF7FEFF 		bl	WriteRow
 1186 02a4 0300     		movs	r3, r0
 1187 02a6 2370     		strb	r3, [r4]
 555:Generated_Source\PSoC4/cy_em_eeprom.c ****             tmpRowAddr = emEepromRowAddr;
 1188              		.loc 1 555 0
 1189 02a8 BB69     		ldr	r3, [r7, #24]
 1190 02aa C022     		movs	r2, #192
 1191 02ac BA18     		adds	r2, r7, r2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 32


 1192 02ae 1360     		str	r3, [r2]
 556:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 557:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if redundant copy is used */
 558:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((0u != context->redundantCopy) && (CY_EM_EEPROM_SUCCESS == ret))
 1193              		.loc 1 558 0
 1194 02b0 3B68     		ldr	r3, [r7]
 1195 02b2 1B7D     		ldrb	r3, [r3, #20]
 1196 02b4 002B     		cmp	r3, #0
 1197 02b6 1BD0     		beq	.L57
 1198              		.loc 1 558 0 is_stmt 0 discriminator 1
 1199 02b8 CF23     		movs	r3, #207
 1200 02ba FB18     		adds	r3, r7, r3
 1201 02bc 1B78     		ldrb	r3, [r3]
 1202 02be 002B     		cmp	r3, #0
 1203 02c0 16D1     		bne	.L57
 559:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 560:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Update the row address to point to the row in the redundant EEPROM's copy */
 561:Generated_Source\PSoC4/cy_em_eeprom.c ****                 tmpRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
 1204              		.loc 1 561 0 is_stmt 1
 1205 02c2 BA69     		ldr	r2, [r7, #24]
 1206 02c4 3B68     		ldr	r3, [r7]
 1207 02c6 9B69     		ldr	r3, [r3, #24]
 1208 02c8 D21A     		subs	r2, r2, r3
 1209 02ca 3B68     		ldr	r3, [r7]
 1210 02cc 1B68     		ldr	r3, [r3]
 1211 02ce D318     		adds	r3, r2, r3
 1212 02d0 C022     		movs	r2, #192
 1213 02d2 BA18     		adds	r2, r7, r2
 1214 02d4 1360     		str	r3, [r2]
 562:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 563:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Write the data to the specified flash row */
 564:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = WriteRow(tmpRowAddr, writeRamBuffer, context);
 1215              		.loc 1 564 0
 1216 02d6 CF23     		movs	r3, #207
 1217 02d8 FC18     		adds	r4, r7, r3
 1218 02da 3A68     		ldr	r2, [r7]
 1219 02dc 2423     		movs	r3, #36
 1220 02de F918     		adds	r1, r7, r3
 1221 02e0 C023     		movs	r3, #192
 1222 02e2 FB18     		adds	r3, r7, r3
 1223 02e4 1B68     		ldr	r3, [r3]
 1224 02e6 1800     		movs	r0, r3
 1225 02e8 FFF7FEFF 		bl	WriteRow
 1226 02ec 0300     		movs	r3, r0
 1227 02ee 2370     		strb	r3, [r4]
 1228              	.L57:
 565:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 566:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 567:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_EM_EEPROM_SUCCESS == ret)
 1229              		.loc 1 567 0
 1230 02f0 CF23     		movs	r3, #207
 1231 02f2 FB18     		adds	r3, r7, r3
 1232 02f4 1B78     		ldrb	r3, [r3]
 1233 02f6 002B     		cmp	r3, #0
 1234 02f8 13D1     		bne	.L63
 568:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 569:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Store last written row address only when EEPROM and redundant
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 33


 570:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * copy writes were successful.
 571:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 572:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->lastWrRowAddr = emEepromRowAddr;
 1235              		.loc 1 572 0
 1236 02fa BA69     		ldr	r2, [r7, #24]
 1237 02fc 3B68     		ldr	r3, [r7]
 1238 02fe 9A60     		str	r2, [r3, #8]
 1239              	.LBE7:
 435:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1240              		.loc 1 435 0
 1241 0300 C423     		movs	r3, #196
 1242 0302 FB18     		adds	r3, r7, r3
 1243 0304 1B68     		ldr	r3, [r3]
 1244 0306 0133     		adds	r3, r3, #1
 1245 0308 C422     		movs	r2, #196
 1246 030a BA18     		adds	r2, r7, r2
 1247 030c 1360     		str	r3, [r2]
 1248              	.L43:
 435:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1249              		.loc 1 435 0 is_stmt 0 discriminator 1
 1250 030e C423     		movs	r3, #196
 1251 0310 FB18     		adds	r3, r7, r3
 1252 0312 1A68     		ldr	r2, [r3]
 1253 0314 B423     		movs	r3, #180
 1254 0316 FB18     		adds	r3, r7, r3
 1255 0318 1B68     		ldr	r3, [r3]
 1256 031a 9A42     		cmp	r2, r3
 1257 031c 00D2     		bcs	.LCB1075
 1258 031e A7E6     		b	.L61	@long jump
 1259              	.LCB1075:
 1260 0320 00E0     		b	.L42
 1261              	.L63:
 1262              	.LBB9:
 573:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 574:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 575:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 576:Generated_Source\PSoC4/cy_em_eeprom.c ****                 break;
 1263              		.loc 1 576 0 is_stmt 1
 1264 0322 C046     		nop
 1265              	.L42:
 1266              	.LBE9:
 1267              	.LBE6:
 577:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 578:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 579:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 580:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 1268              		.loc 1 580 0
 1269 0324 CF23     		movs	r3, #207
 1270 0326 FB18     		adds	r3, r7, r3
 1271 0328 1B78     		ldrb	r3, [r3]
 581:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1272              		.loc 1 581 0
 1273 032a 1800     		movs	r0, r3
 1274 032c BD46     		mov	sp, r7
 1275 032e 34B0     		add	sp, sp, #208
 1276              		@ sp needed
 1277 0330 B0BD     		pop	{r4, r5, r7, pc}
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 34


 1278              		.cfi_endproc
 1279              	.LFE2:
 1280              		.size	Cy_Em_EEPROM_Write, .-Cy_Em_EEPROM_Write
 1281 0332 C046     		.section	.text.Cy_Em_EEPROM_Erase,"ax",%progbits
 1282              		.align	2
 1283              		.global	Cy_Em_EEPROM_Erase
 1284              		.code	16
 1285              		.thumb_func
 1286              		.type	Cy_Em_EEPROM_Erase, %function
 1287              	Cy_Em_EEPROM_Erase:
 1288              	.LFB3:
 582:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 583:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 584:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 585:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Erase
 586:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 587:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 588:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function erases the entire contents of the EEPROM. Erased values are all
 589:Generated_Source\PSoC4/cy_em_eeprom.c **** * zeros. This is a blocking function and it does not return until the write
 590:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation is completed. The user firmware should not enter Hibernate mode until
 591:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase is completed. The erase operation is allowed in Sleep and Deep-Sleep modes.
 592:Generated_Source\PSoC4/cy_em_eeprom.c **** * During the flash operation, the device should not be reset, including the
 593:Generated_Source\PSoC4/cy_em_eeprom.c **** * XRES pin, a software reset, and watchdog reset sources. Also, low-voltage
 594:Generated_Source\PSoC4/cy_em_eeprom.c **** * detect circuits should be configured to generate an interrupt instead of a
 595:Generated_Source\PSoC4/cy_em_eeprom.c **** * reset. Otherwise, portions of flash may undergo unexpected changes.
 596:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 597:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 598:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 599:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 600:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 601:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 602:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 603:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 604:Generated_Source\PSoC4/cy_em_eeprom.c **** * For all non PSoC 6 devices the erase operation is performed by clearing
 605:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM data using flash write. This affects the flash durability.
 606:Generated_Source\PSoC4/cy_em_eeprom.c **** * So it is recommended to use this function in utmost case to prolongate
 607:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash life.
 608:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 609:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 610:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform erase
 611:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 612:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 613:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 614:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 615:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case when blocking write option is used, if this function is called by
 616:Generated_Source\PSoC4/cy_em_eeprom.c **** * the CM4 the user code on CM0P and the user code on CM4 are blocked until erase
 617:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row operation is finished. If this function is called by the CM0P the
 618:Generated_Source\PSoC4/cy_em_eeprom.c **** * user code on CM4 is not blocked and the user code on CM0P is blocked until
 619:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase flash row operation is finished. Plan your task allocation accordingly.
 620:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 621:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 622:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if non-blocking write option is used and when user flash is used as
 623:Generated_Source\PSoC4/cy_em_eeprom.c **** * an EEPROM storage care should be taken to prevent the read while write (RWW)
 624:Generated_Source\PSoC4/cy_em_eeprom.c **** * exception. To prevent the RWW exception the user flash macro that includes
 625:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM storage should not be read while the EEPROM erase is not completed.
 626:Generated_Source\PSoC4/cy_em_eeprom.c **** * The read also means the user code execution from the respective flash macro.
 627:Generated_Source\PSoC4/cy_em_eeprom.c **** *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 35


 628:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 629:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Erase(cy_stc_eeprom_context_t * context)
 630:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1289              		.loc 1 630 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 160
 1292              		@ frame_needed = 1, uses_anonymous_args = 0
 1293 0000 90B5     		push	{r4, r7, lr}
 1294              		.cfi_def_cfa_offset 12
 1295              		.cfi_offset 4, -12
 1296              		.cfi_offset 7, -8
 1297              		.cfi_offset 14, -4
 1298 0002 A9B0     		sub	sp, sp, #164
 1299              		.cfi_def_cfa_offset 176
 1300 0004 00AF     		add	r7, sp, #0
 1301              		.cfi_def_cfa_register 7
 1302 0006 7860     		str	r0, [r7, #4]
 631:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 632:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 seqNum;
 633:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = context->lastWrRowAddr;
 1303              		.loc 1 633 0
 1304 0008 7B68     		ldr	r3, [r7, #4]
 1305 000a 9B68     		ldr	r3, [r3, #8]
 1306 000c 8C22     		movs	r2, #140
 1307 000e BA18     		adds	r2, r7, r2
 1308 0010 1360     		str	r3, [r2]
 634:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowRdAddr;
 635:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 1309              		.loc 1 635 0
 1310 0012 9B23     		movs	r3, #155
 1311 0014 FB18     		adds	r3, r7, r3
 1312 0016 0422     		movs	r2, #4
 1313 0018 1A70     		strb	r2, [r3]
 636:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV] = {0u};
 1314              		.loc 1 636 0
 1315 001a 0823     		movs	r3, #8
 1316 001c FB18     		adds	r3, r7, r3
 1317 001e 1800     		movs	r0, r3
 1318 0020 8023     		movs	r3, #128
 1319 0022 1A00     		movs	r2, r3
 1320 0024 0021     		movs	r1, #0
 1321 0026 FFF7FEFF 		bl	memset
 637:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CY_PSOC6)
 638:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromStoredRowAddr = context->lastWrRowAddr;
 639:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 storedSeqNum;
 640:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (!CY_PSOC6) */
 641:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 642:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Get the sequence number of the last written row */
 643:Generated_Source\PSoC4/cy_em_eeprom.c ****     seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
 1322              		.loc 1 643 0
 1323 002a 8C23     		movs	r3, #140
 1324 002c FB18     		adds	r3, r7, r3
 1325 002e 1B68     		ldr	r3, [r3]
 1326 0030 1B68     		ldr	r3, [r3]
 1327 0032 9422     		movs	r2, #148
 1328 0034 BA18     		adds	r2, r7, r2
 1329 0036 1360     		str	r3, [r2]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 36


 644:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 645:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* If there were no writes to EEPROM - nothing to erase */
 646:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != seqNum)
 1330              		.loc 1 646 0
 1331 0038 9423     		movs	r3, #148
 1332 003a FB18     		adds	r3, r7, r3
 1333 003c 1B68     		ldr	r3, [r3]
 1334 003e 002B     		cmp	r3, #0
 1335 0040 56D0     		beq	.L65
 1336              	.LBB10:
 647:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 648:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Calculate the number of row erase operations required */
 649:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 numWrites = context->numberOfRows * context->wearLevelingFactor;
 1337              		.loc 1 649 0
 1338 0042 7B68     		ldr	r3, [r7, #4]
 1339 0044 5A68     		ldr	r2, [r3, #4]
 1340 0046 7B68     		ldr	r3, [r7, #4]
 1341 0048 1B69     		ldr	r3, [r3, #16]
 1342 004a 5343     		muls	r3, r2
 1343 004c 9022     		movs	r2, #144
 1344 004e BA18     		adds	r2, r7, r2
 1345 0050 1360     		str	r3, [r2]
 650:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 651:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC6)
 652:Generated_Source\PSoC4/cy_em_eeprom.c ****         GetNextRowToWrite(seqNum, &emEepromStoredRowAddr, &emEepromRowRdAddr, context);
 653:Generated_Source\PSoC4/cy_em_eeprom.c ****         storedSeqNum = seqNum + 1u;
 654:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC6) */
 655:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 656:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != context->redundantCopy)
 1346              		.loc 1 656 0
 1347 0052 7B68     		ldr	r3, [r7, #4]
 1348 0054 1B7D     		ldrb	r3, [r3, #20]
 1349 0056 002B     		cmp	r3, #0
 1350 0058 0BD0     		beq	.L66
 657:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 658:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
 659:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1351              		.loc 1 659 0
 1352 005a 0823     		movs	r3, #8
 1353 005c FB18     		adds	r3, r7, r3
 1354 005e 4033     		adds	r3, r3, #64
 1355 0060 4021     		movs	r1, #64
 1356 0062 1800     		movs	r0, r3
 1357 0064 FFF7FEFF 		bl	CalcChecksum
 1358 0068 0300     		movs	r3, r0
 658:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1359              		.loc 1 658 0
 1360 006a 1A00     		movs	r2, r3
 1361 006c 0823     		movs	r3, #8
 1362 006e FB18     		adds	r3, r7, r3
 1363 0070 DA63     		str	r2, [r3, #60]
 1364              	.L66:
 660:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                   CY_EM_EEPROM_EEPROM_DATA_LEN);
 661:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 662:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 663:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(i = 0u; i < numWrites; i++)
 1365              		.loc 1 663 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 37


 1366 0072 0023     		movs	r3, #0
 1367 0074 9C22     		movs	r2, #156
 1368 0076 BA18     		adds	r2, r7, r2
 1369 0078 1360     		str	r3, [r2]
 1370 007a 31E0     		b	.L67
 1371              	.L68:
 664:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 665:Generated_Source\PSoC4/cy_em_eeprom.c ****         #if (CY_PSOC6)
 666:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* For PSoC 6 the erase operation moves backwards. From last written row
 667:Generated_Source\PSoC4/cy_em_eeprom.c ****             * identified by "seqNum" down to "seqNum" - "numWrites". If "emEepromRowAddr"
 668:Generated_Source\PSoC4/cy_em_eeprom.c ****             * is zero this means that the row identified by "seqNum" was previously 
 669:Generated_Source\PSoC4/cy_em_eeprom.c ****             * erased.
 670:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 671:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u != emEepromRowAddr)
 672:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 673:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = EraseRow(emEepromRowAddr, (uint32)writeRamBuffer, context);
 674:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 675:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 676:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum--;
 677:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 678:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u == seqNum)
 679:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 680:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Exit the loop as there is no more row is EEPROM to be erased */
 681:Generated_Source\PSoC4/cy_em_eeprom.c ****                 break;
 682:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 683:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromRowAddr = GetRowAddrBySeqNum(seqNum, context);
 684:Generated_Source\PSoC4/cy_em_eeprom.c ****         #else
 685:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
 1372              		.loc 1 685 0 discriminator 3
 1373 007c 8C23     		movs	r3, #140
 1374 007e FB18     		adds	r3, r7, r3
 1375 0080 1B68     		ldr	r3, [r3]
 1376 0082 1B68     		ldr	r3, [r3]
 1377 0084 9422     		movs	r2, #148
 1378 0086 BA18     		adds	r2, r7, r2
 1379 0088 1360     		str	r3, [r2]
 686:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the address of the row to be erased. "emEepromRowAddr" may be updated
 687:Generated_Source\PSoC4/cy_em_eeprom.c ****             * with the proper address (if wear leveling is used).
 688:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 689:Generated_Source\PSoC4/cy_em_eeprom.c ****             GetNextRowToWrite(seqNum, &emEepromRowAddr, &emEepromRowRdAddr, context);
 1380              		.loc 1 689 0 discriminator 3
 1381 008a 7B68     		ldr	r3, [r7, #4]
 1382 008c 8822     		movs	r2, #136
 1383 008e BA18     		adds	r2, r7, r2
 1384 0090 8C21     		movs	r1, #140
 1385 0092 7918     		adds	r1, r7, r1
 1386 0094 9420     		movs	r0, #148
 1387 0096 3818     		adds	r0, r7, r0
 1388 0098 0068     		ldr	r0, [r0]
 1389 009a FFF7FEFF 		bl	GetNextRowToWrite
 690:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum++;
 1390              		.loc 1 690 0 discriminator 3
 1391 009e 9423     		movs	r3, #148
 1392 00a0 FB18     		adds	r3, r7, r3
 1393 00a2 1B68     		ldr	r3, [r3]
 1394 00a4 0133     		adds	r3, r3, #1
 1395 00a6 9422     		movs	r2, #148
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 38


 1396 00a8 BA18     		adds	r2, r7, r2
 1397 00aa 1360     		str	r3, [r2]
 691:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[0u] = seqNum;
 1398              		.loc 1 691 0 discriminator 3
 1399 00ac 0823     		movs	r3, #8
 1400 00ae FB18     		adds	r3, r7, r3
 1401 00b0 9422     		movs	r2, #148
 1402 00b2 BA18     		adds	r2, r7, r2
 1403 00b4 1268     		ldr	r2, [r2]
 1404 00b6 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = EraseRow(emEepromRowAddr, (uint32)writeRamBuffer, context);
 1405              		.loc 1 692 0 discriminator 3
 1406 00b8 8C23     		movs	r3, #140
 1407 00ba FB18     		adds	r3, r7, r3
 1408 00bc 1B68     		ldr	r3, [r3]
 1409 00be 0822     		movs	r2, #8
 1410 00c0 B918     		adds	r1, r7, r2
 1411 00c2 9B22     		movs	r2, #155
 1412 00c4 BC18     		adds	r4, r7, r2
 1413 00c6 7A68     		ldr	r2, [r7, #4]
 1414 00c8 1800     		movs	r0, r3
 1415 00ca FFF7FEFF 		bl	EraseRow
 1416 00ce 0300     		movs	r3, r0
 1417 00d0 2370     		strb	r3, [r4]
 663:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1418              		.loc 1 663 0 discriminator 3
 1419 00d2 9C23     		movs	r3, #156
 1420 00d4 FB18     		adds	r3, r7, r3
 1421 00d6 1B68     		ldr	r3, [r3]
 1422 00d8 0133     		adds	r3, r3, #1
 1423 00da 9C22     		movs	r2, #156
 1424 00dc BA18     		adds	r2, r7, r2
 1425 00de 1360     		str	r3, [r2]
 1426              	.L67:
 663:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1427              		.loc 1 663 0 is_stmt 0 discriminator 1
 1428 00e0 9C23     		movs	r3, #156
 1429 00e2 FB18     		adds	r3, r7, r3
 1430 00e4 1A68     		ldr	r2, [r3]
 1431 00e6 9023     		movs	r3, #144
 1432 00e8 FB18     		adds	r3, r7, r3
 1433 00ea 1B68     		ldr	r3, [r3]
 1434 00ec 9A42     		cmp	r2, r3
 1435 00ee C5D3     		bcc	.L68
 1436              	.L65:
 1437              	.LBE10:
 693:Generated_Source\PSoC4/cy_em_eeprom.c ****         #endif /* (CY_PSOC6) */
 694:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 695:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 696:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC6)
 697:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
 698:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 699:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[0u] = storedSeqNum;
 700:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 701:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the previously stored sequence number to the flash row which would be
 702:Generated_Source\PSoC4/cy_em_eeprom.c ****             * written next if the erase wouldn't happen. In this case the write to
 703:Generated_Source\PSoC4/cy_em_eeprom.c ****             * redundant copy can be skipped as it does not add any value.
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 39


 704:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 705:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = WriteRow(emEepromStoredRowAddr, writeRamBuffer, context);
 706:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 707:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_EM_EEPROM_SUCCESS == ret)
 708:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 709:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->lastWrRowAddr = emEepromStoredRowAddr;
 710:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 711:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 712:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC6) */
 713:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 714:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 715:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 1438              		.loc 1 715 0 is_stmt 1
 1439 00f0 9B23     		movs	r3, #155
 1440 00f2 FB18     		adds	r3, r7, r3
 1441 00f4 1B78     		ldrb	r3, [r3]
 716:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1442              		.loc 1 716 0
 1443 00f6 1800     		movs	r0, r3
 1444 00f8 BD46     		mov	sp, r7
 1445 00fa 29B0     		add	sp, sp, #164
 1446              		@ sp needed
 1447 00fc 90BD     		pop	{r4, r7, pc}
 1448              		.cfi_endproc
 1449              	.LFE3:
 1450              		.size	Cy_Em_EEPROM_Erase, .-Cy_Em_EEPROM_Erase
 1451 00fe C046     		.section	.text.Cy_Em_EEPROM_NumWrites,"ax",%progbits
 1452              		.align	2
 1453              		.global	Cy_Em_EEPROM_NumWrites
 1454              		.code	16
 1455              		.thumb_func
 1456              		.type	Cy_Em_EEPROM_NumWrites, %function
 1457              	Cy_Em_EEPROM_NumWrites:
 1458              	.LFB4:
 717:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 718:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 719:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_NumWrites
 721:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 722:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 723:Generated_Source\PSoC4/cy_em_eeprom.c **** * Returns the number of the EEPROM writes completed so far.
 724:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 725:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 726:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 727:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 728:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 729:Generated_Source\PSoC4/cy_em_eeprom.c **** * The number of writes performed to the EEPROM.
 730:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 731:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 732:Generated_Source\PSoC4/cy_em_eeprom.c **** uint32 Cy_Em_EEPROM_NumWrites(cy_stc_eeprom_context_t * context)
 733:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1459              		.loc 1 733 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 8
 1462              		@ frame_needed = 1, uses_anonymous_args = 0
 1463 0000 80B5     		push	{r7, lr}
 1464              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 40


 1465              		.cfi_offset 7, -8
 1466              		.cfi_offset 14, -4
 1467 0002 82B0     		sub	sp, sp, #8
 1468              		.cfi_def_cfa_offset 16
 1469 0004 00AF     		add	r7, sp, #0
 1470              		.cfi_def_cfa_register 7
 1471 0006 7860     		str	r0, [r7, #4]
 734:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr));
 1472              		.loc 1 734 0
 1473 0008 7B68     		ldr	r3, [r7, #4]
 1474 000a 9B68     		ldr	r3, [r3, #8]
 1475 000c 1B68     		ldr	r3, [r3]
 735:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1476              		.loc 1 735 0
 1477 000e 1800     		movs	r0, r3
 1478 0010 BD46     		mov	sp, r7
 1479 0012 02B0     		add	sp, sp, #8
 1480              		@ sp needed
 1481 0014 80BD     		pop	{r7, pc}
 1482              		.cfi_endproc
 1483              	.LFE4:
 1484              		.size	Cy_Em_EEPROM_NumWrites, .-Cy_Em_EEPROM_NumWrites
 1485 0016 C046     		.section	.text.FindLastWrittenRow,"ax",%progbits
 1486              		.align	2
 1487              		.code	16
 1488              		.thumb_func
 1489              		.type	FindLastWrittenRow, %function
 1490              	FindLastWrittenRow:
 1491              	.LFB5:
 736:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 737:Generated_Source\PSoC4/cy_em_eeprom.c **** /** \} */
 738:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 739:Generated_Source\PSoC4/cy_em_eeprom.c **** /** \cond INTERNAL */
 740:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 741:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 742:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 743:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: FindLastWrittenRow
 744:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 745:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 746:Generated_Source\PSoC4/cy_em_eeprom.c **** * Performs a search of the last written row address of the EEPROM associated
 747:Generated_Source\PSoC4/cy_em_eeprom.c **** * with the context structure. If there were no writes to the EEPROM the
 748:Generated_Source\PSoC4/cy_em_eeprom.c **** * function returns the start address of the EEPROM. The row address is returned
 749:Generated_Source\PSoC4/cy_em_eeprom.c **** * in the input parameter.
 750:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 751:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param lastWrRowPtr
 752:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a memory where the last written row will be returned.
 753:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 754:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 755:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 756:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 757:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 758:Generated_Source\PSoC4/cy_em_eeprom.c **** static void FindLastWrittenRow(uint32 * lastWrRowPtr, cy_stc_eeprom_context_t * context)
 759:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1492              		.loc 1 759 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 24
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 41


 1496 0000 80B5     		push	{r7, lr}
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 86B0     		sub	sp, sp, #24
 1501              		.cfi_def_cfa_offset 32
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 7860     		str	r0, [r7, #4]
 1505 0008 3960     		str	r1, [r7]
 760:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 seqNum = 0u;
 1506              		.loc 1 760 0
 1507 000a 0023     		movs	r3, #0
 1508 000c BB60     		str	r3, [r7, #8]
 761:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 prevSeqNum = 0u;
 1509              		.loc 1 761 0
 1510 000e 0023     		movs	r3, #0
 1511 0010 7B61     		str	r3, [r7, #20]
 762:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 numRows;
 763:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromAddr = context->userFlashStartAddr;
 1512              		.loc 1 763 0
 1513 0012 3B68     		ldr	r3, [r7]
 1514 0014 9B69     		ldr	r3, [r3, #24]
 1515 0016 FB60     		str	r3, [r7, #12]
 764:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 765:Generated_Source\PSoC4/cy_em_eeprom.c ****     *lastWrRowPtr = emEepromAddr;
 1516              		.loc 1 765 0
 1517 0018 7B68     		ldr	r3, [r7, #4]
 1518 001a FA68     		ldr	r2, [r7, #12]
 1519 001c 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 767:Generated_Source\PSoC4/cy_em_eeprom.c ****     for(numRows = 0u; numRows < (context->numberOfRows * context->wearLevelingFactor); numRows++)
 1520              		.loc 1 767 0
 1521 001e 0023     		movs	r3, #0
 1522 0020 3B61     		str	r3, [r7, #16]
 1523 0022 14E0     		b	.L73
 1524              	.L75:
 768:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 769:Generated_Source\PSoC4/cy_em_eeprom.c ****         seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromAddr);
 1525              		.loc 1 769 0
 1526 0024 FB68     		ldr	r3, [r7, #12]
 1527 0026 1B68     		ldr	r3, [r3]
 1528 0028 BB60     		str	r3, [r7, #8]
 770:Generated_Source\PSoC4/cy_em_eeprom.c ****         if((0u != seqNum) && (seqNum > prevSeqNum))
 1529              		.loc 1 770 0
 1530 002a BB68     		ldr	r3, [r7, #8]
 1531 002c 002B     		cmp	r3, #0
 1532 002e 08D0     		beq	.L74
 1533              		.loc 1 770 0 is_stmt 0 discriminator 1
 1534 0030 BA68     		ldr	r2, [r7, #8]
 1535 0032 7B69     		ldr	r3, [r7, #20]
 1536 0034 9A42     		cmp	r2, r3
 1537 0036 04D9     		bls	.L74
 771:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 772:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Some record in EEPROM was found. Store found sequence
 773:Generated_Source\PSoC4/cy_em_eeprom.c ****             * number and row address.
 774:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 42


 775:Generated_Source\PSoC4/cy_em_eeprom.c ****             prevSeqNum = seqNum;
 1538              		.loc 1 775 0 is_stmt 1
 1539 0038 BB68     		ldr	r3, [r7, #8]
 1540 003a 7B61     		str	r3, [r7, #20]
 776:Generated_Source\PSoC4/cy_em_eeprom.c ****             *lastWrRowPtr = emEepromAddr;
 1541              		.loc 1 776 0
 1542 003c 7B68     		ldr	r3, [r7, #4]
 1543 003e FA68     		ldr	r2, [r7, #12]
 1544 0040 1A60     		str	r2, [r3]
 1545              	.L74:
 777:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 778:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 779:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Switch to the next row */
 780:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromAddr = emEepromAddr + CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 1546              		.loc 1 780 0 discriminator 2
 1547 0042 FB68     		ldr	r3, [r7, #12]
 1548 0044 8033     		adds	r3, r3, #128
 1549 0046 FB60     		str	r3, [r7, #12]
 767:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1550              		.loc 1 767 0 discriminator 2
 1551 0048 3B69     		ldr	r3, [r7, #16]
 1552 004a 0133     		adds	r3, r3, #1
 1553 004c 3B61     		str	r3, [r7, #16]
 1554              	.L73:
 767:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1555              		.loc 1 767 0 is_stmt 0 discriminator 1
 1556 004e 3B68     		ldr	r3, [r7]
 1557 0050 5A68     		ldr	r2, [r3, #4]
 1558 0052 3B68     		ldr	r3, [r7]
 1559 0054 1B69     		ldr	r3, [r3, #16]
 1560 0056 5A43     		muls	r2, r3
 1561 0058 3B69     		ldr	r3, [r7, #16]
 1562 005a 9A42     		cmp	r2, r3
 1563 005c E2D8     		bhi	.L75
 781:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 782:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1564              		.loc 1 782 0 is_stmt 1
 1565 005e C046     		nop
 1566 0060 BD46     		mov	sp, r7
 1567 0062 06B0     		add	sp, sp, #24
 1568              		@ sp needed
 1569 0064 80BD     		pop	{r7, pc}
 1570              		.cfi_endproc
 1571              	.LFE5:
 1572              		.size	FindLastWrittenRow, .-FindLastWrittenRow
 1573 0066 C046     		.section	.text.GetRowAddrBySeqNum,"ax",%progbits
 1574              		.align	2
 1575              		.code	16
 1576              		.thumb_func
 1577              		.type	GetRowAddrBySeqNum, %function
 1578              	GetRowAddrBySeqNum:
 1579              	.LFB6:
 783:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 784:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 785:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 786:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetRowAddrBySeqNum
 787:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 43


 788:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 789:Generated_Source\PSoC4/cy_em_eeprom.c **** * Returns the address of the row in EEPROM using its sequence number.
 790:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 791:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param seqNum
 792:Generated_Source\PSoC4/cy_em_eeprom.c **** * The sequence number of the row.
 793:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 794:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 795:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure.
 796:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 797:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 798:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the row or zero if the row with the sequence number was not
 799:Generated_Source\PSoC4/cy_em_eeprom.c **** * found.
 800:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 801:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 802:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetRowAddrBySeqNum(uint32 seqNum, cy_stc_eeprom_context_t * context)
 803:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1580              		.loc 1 803 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 16
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584 0000 80B5     		push	{r7, lr}
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 7, -8
 1587              		.cfi_offset 14, -4
 1588 0002 84B0     		sub	sp, sp, #16
 1589              		.cfi_def_cfa_offset 24
 1590 0004 00AF     		add	r7, sp, #0
 1591              		.cfi_def_cfa_register 7
 1592 0006 7860     		str	r0, [r7, #4]
 1593 0008 3960     		str	r1, [r7]
 804:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromAddr = context->userFlashStartAddr;
 1594              		.loc 1 804 0
 1595 000a 3B68     		ldr	r3, [r7]
 1596 000c 9B69     		ldr	r3, [r3, #24]
 1597 000e FB60     		str	r3, [r7, #12]
 805:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 806:Generated_Source\PSoC4/cy_em_eeprom.c ****     while(CY_EM_EEPROM_GET_SEQ_NUM(emEepromAddr) != seqNum)
 1598              		.loc 1 806 0
 1599 0010 0AE0     		b	.L77
 1600              	.L79:
 807:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 808:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Switch to the next row */
 809:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromAddr = emEepromAddr + CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 1601              		.loc 1 809 0
 1602 0012 FB68     		ldr	r3, [r7, #12]
 1603 0014 8033     		adds	r3, r3, #128
 1604 0016 FB60     		str	r3, [r7, #12]
 810:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 811:Generated_Source\PSoC4/cy_em_eeprom.c ****         if (CY_EM_EEPROM_ADDR_IN_RANGE !=
 812:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(emEepromAddr, context->wlEndAddr))
 1605              		.loc 1 812 0
 1606 0018 3B68     		ldr	r3, [r7]
 1607 001a 1A68     		ldr	r2, [r3]
 811:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(emEepromAddr, context->wlEndAddr))
 1608              		.loc 1 811 0
 1609 001c FB68     		ldr	r3, [r7, #12]
 1610 001e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 44


 1611 0020 02D8     		bhi	.L77
 813:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 814:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromAddr = 0u;
 1612              		.loc 1 814 0
 1613 0022 0023     		movs	r3, #0
 1614 0024 FB60     		str	r3, [r7, #12]
 815:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Exit the loop as we reached the end of EEPROM */
 816:Generated_Source\PSoC4/cy_em_eeprom.c ****             break;
 1615              		.loc 1 816 0
 1616 0026 04E0     		b	.L78
 1617              	.L77:
 806:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1618              		.loc 1 806 0
 1619 0028 FB68     		ldr	r3, [r7, #12]
 1620 002a 1A68     		ldr	r2, [r3]
 1621 002c 7B68     		ldr	r3, [r7, #4]
 1622 002e 9A42     		cmp	r2, r3
 1623 0030 EFD1     		bne	.L79
 1624              	.L78:
 817:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 818:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 819:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 820:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (emEepromAddr);
 1625              		.loc 1 820 0
 1626 0032 FB68     		ldr	r3, [r7, #12]
 821:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1627              		.loc 1 821 0
 1628 0034 1800     		movs	r0, r3
 1629 0036 BD46     		mov	sp, r7
 1630 0038 04B0     		add	sp, sp, #16
 1631              		@ sp needed
 1632 003a 80BD     		pop	{r7, pc}
 1633              		.cfi_endproc
 1634              	.LFE6:
 1635              		.size	GetRowAddrBySeqNum, .-GetRowAddrBySeqNum
 1636              		.section	.text.GetNextRowToWrite,"ax",%progbits
 1637              		.align	2
 1638              		.code	16
 1639              		.thumb_func
 1640              		.type	GetNextRowToWrite, %function
 1641              	GetNextRowToWrite:
 1642              	.LFB7:
 822:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 823:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 824:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 825:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetNextRowToWrite
 826:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 827:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 828:Generated_Source\PSoC4/cy_em_eeprom.c **** * Performs a range check of the row that should be written and updates the
 829:Generated_Source\PSoC4/cy_em_eeprom.c **** * address to the row respectively. The similar actions are done for the read
 830:Generated_Source\PSoC4/cy_em_eeprom.c **** * address.
 831:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 832:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param seqNum
 833:Generated_Source\PSoC4/cy_em_eeprom.c **** * The sequence number of the last written row.
 834:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 835:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowToWrPtr
 836:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the last written row (input). The address of the row to be 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 45


 837:Generated_Source\PSoC4/cy_em_eeprom.c **** * written (output).
 838:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 839:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowToRdPtr
 840:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the row from which the data should be read into the RAM buffer
 841:Generated_Source\PSoC4/cy_em_eeprom.c **** * in a later write operation. Out parameter.
 842:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 843:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 844:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 845:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 846:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 847:Generated_Source\PSoC4/cy_em_eeprom.c **** static void GetNextRowToWrite(uint32 seqNum,
 848:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToWrPtr,
 849:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToRdPtr,
 850:Generated_Source\PSoC4/cy_em_eeprom.c ****                             cy_stc_eeprom_context_t * context)
 851:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1643              		.loc 1 851 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 16
 1646              		@ frame_needed = 1, uses_anonymous_args = 0
 1647 0000 80B5     		push	{r7, lr}
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 7, -8
 1650              		.cfi_offset 14, -4
 1651 0002 84B0     		sub	sp, sp, #16
 1652              		.cfi_def_cfa_offset 24
 1653 0004 00AF     		add	r7, sp, #0
 1654              		.cfi_def_cfa_register 7
 1655 0006 F860     		str	r0, [r7, #12]
 1656 0008 B960     		str	r1, [r7, #8]
 1657 000a 7A60     		str	r2, [r7, #4]
 1658 000c 3B60     		str	r3, [r7]
 852:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Switch to the next row to be written if the current sequence number is
 853:Generated_Source\PSoC4/cy_em_eeprom.c ****     * not zero.
 854:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 855:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != seqNum)
 1659              		.loc 1 855 0
 1660 000e FB68     		ldr	r3, [r7, #12]
 1661 0010 002B     		cmp	r3, #0
 1662 0012 05D0     		beq	.L82
 856:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 857:Generated_Source\PSoC4/cy_em_eeprom.c ****         *rowToWrPtr = (*rowToWrPtr + CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 1663              		.loc 1 857 0
 1664 0014 BB68     		ldr	r3, [r7, #8]
 1665 0016 1B68     		ldr	r3, [r3]
 1666 0018 8033     		adds	r3, r3, #128
 1667 001a 1A00     		movs	r2, r3
 1668 001c BB68     		ldr	r3, [r7, #8]
 1669 001e 1A60     		str	r2, [r3]
 1670              	.L82:
 858:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 859:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 860:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* If the resulting row address is out of EEPROM, then switch to the base
 861:Generated_Source\PSoC4/cy_em_eeprom.c ****     * EEPROM address (Row#0).
 862:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 863:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CY_EM_EEPROM_ADDR_IN_RANGE !=
 864:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(*rowToWrPtr, context->wlEndAddr))
 1671              		.loc 1 864 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 46


 1672 0020 BB68     		ldr	r3, [r7, #8]
 1673 0022 1A68     		ldr	r2, [r3]
 1674 0024 3B68     		ldr	r3, [r7]
 1675 0026 1B68     		ldr	r3, [r3]
 863:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(*rowToWrPtr, context->wlEndAddr))
 1676              		.loc 1 863 0
 1677 0028 9A42     		cmp	r2, r3
 1678 002a 03D3     		bcc	.L83
 865:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 866:Generated_Source\PSoC4/cy_em_eeprom.c ****         *rowToWrPtr = context->userFlashStartAddr;
 1679              		.loc 1 866 0
 1680 002c 3B68     		ldr	r3, [r7]
 1681 002e 9A69     		ldr	r2, [r3, #24]
 1682 0030 BB68     		ldr	r3, [r7, #8]
 1683 0032 1A60     		str	r2, [r3]
 1684              	.L83:
 867:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 868:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 869:Generated_Source\PSoC4/cy_em_eeprom.c ****     *rowToRdPtr = 0u;
 1685              		.loc 1 869 0
 1686 0034 7B68     		ldr	r3, [r7, #4]
 1687 0036 0022     		movs	r2, #0
 1688 0038 1A60     		str	r2, [r3]
 870:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 871:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check if the sequence number is larger than the number of rows in the EEPROM.
 872:Generated_Source\PSoC4/cy_em_eeprom.c ****     * If not, do not update the row read address because there is no historic
 873:Generated_Source\PSoC4/cy_em_eeprom.c ****     * data to be read.
 874:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 875:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(context->numberOfRows <= seqNum)
 1689              		.loc 1 875 0
 1690 003a 3B68     		ldr	r3, [r7]
 1691 003c 5A68     		ldr	r2, [r3, #4]
 1692 003e FB68     		ldr	r3, [r7, #12]
 1693 0040 9A42     		cmp	r2, r3
 1694 0042 2FD8     		bhi	.L88
 876:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 877:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Check if wear leveling is used in EEPROM */
 878:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(context->wearLevelingFactor > 1u)
 1695              		.loc 1 878 0
 1696 0044 3B68     		ldr	r3, [r7]
 1697 0046 1B69     		ldr	r3, [r3, #16]
 1698 0048 012B     		cmp	r3, #1
 1699 004a 27D9     		bls	.L85
 879:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 880:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* The read row address should be taken from an EEPROM copy that became
 881:Generated_Source\PSoC4/cy_em_eeprom.c ****             * inactive recently. This condition check handles that.
 882:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 883:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((*rowToWrPtr - (context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW)) <
 1700              		.loc 1 883 0
 1701 004c BB68     		ldr	r3, [r7, #8]
 1702 004e 1A68     		ldr	r2, [r3]
 1703 0050 3B68     		ldr	r3, [r7]
 1704 0052 5B68     		ldr	r3, [r3, #4]
 1705 0054 DB01     		lsls	r3, r3, #7
 1706 0056 D21A     		subs	r2, r2, r3
 884:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->userFlashStartAddr)
 1707              		.loc 1 884 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 47


 1708 0058 3B68     		ldr	r3, [r7]
 1709 005a 9B69     		ldr	r3, [r3, #24]
 883:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->userFlashStartAddr)
 1710              		.loc 1 883 0
 1711 005c 9A42     		cmp	r2, r3
 1712 005e 14D2     		bcs	.L86
 885:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 886:Generated_Source\PSoC4/cy_em_eeprom.c ****                 *rowToRdPtr = context->userFlashStartAddr +
 1713              		.loc 1 886 0
 1714 0060 3B68     		ldr	r3, [r7]
 1715 0062 9A69     		ldr	r2, [r3, #24]
 887:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1716              		.loc 1 887 0
 1717 0064 3B68     		ldr	r3, [r7]
 1718 0066 5968     		ldr	r1, [r3, #4]
 1719 0068 3B68     		ldr	r3, [r7]
 1720 006a 1B69     		ldr	r3, [r3, #16]
 1721 006c 0F48     		ldr	r0, .L89
 1722 006e 8446     		mov	ip, r0
 1723 0070 6344     		add	r3, r3, ip
 1724 0072 4B43     		muls	r3, r1
 1725 0074 DB01     		lsls	r3, r3, #7
 886:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1726              		.loc 1 886 0
 1727 0076 D218     		adds	r2, r2, r3
 888:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CY_EM_EEPROM_FLASH_SIZEOF_ROW) + (*rowToWrPtr - context->userFlashStartAddr
 1728              		.loc 1 888 0
 1729 0078 BB68     		ldr	r3, [r7, #8]
 1730 007a 1968     		ldr	r1, [r3]
 1731 007c 3B68     		ldr	r3, [r7]
 1732 007e 9B69     		ldr	r3, [r3, #24]
 1733 0080 CB1A     		subs	r3, r1, r3
 1734 0082 D218     		adds	r2, r2, r3
 886:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1735              		.loc 1 886 0
 1736 0084 7B68     		ldr	r3, [r7, #4]
 1737 0086 1A60     		str	r2, [r3]
 889:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 890:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 891:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 892:Generated_Source\PSoC4/cy_em_eeprom.c ****                 *rowToRdPtr = *rowToWrPtr - (context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW)
 893:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 894:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 895:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
 896:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 897:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* If no wear leveling, always read from the same flash row that
 898:Generated_Source\PSoC4/cy_em_eeprom.c ****             * should be written.
 899:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 900:Generated_Source\PSoC4/cy_em_eeprom.c ****             *rowToRdPtr = *rowToWrPtr;
 901:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 902:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 903:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1738              		.loc 1 903 0
 1739 0088 0CE0     		b	.L88
 1740              	.L86:
 892:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 1741              		.loc 1 892 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 48


 1742 008a BB68     		ldr	r3, [r7, #8]
 1743 008c 1A68     		ldr	r2, [r3]
 1744 008e 3B68     		ldr	r3, [r7]
 1745 0090 5B68     		ldr	r3, [r3, #4]
 1746 0092 DB01     		lsls	r3, r3, #7
 1747 0094 D21A     		subs	r2, r2, r3
 1748 0096 7B68     		ldr	r3, [r7, #4]
 1749 0098 1A60     		str	r2, [r3]
 1750              		.loc 1 903 0
 1751 009a 03E0     		b	.L88
 1752              	.L85:
 900:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 1753              		.loc 1 900 0
 1754 009c BB68     		ldr	r3, [r7, #8]
 1755 009e 1A68     		ldr	r2, [r3]
 1756 00a0 7B68     		ldr	r3, [r7, #4]
 1757 00a2 1A60     		str	r2, [r3]
 1758              	.L88:
 1759              		.loc 1 903 0
 1760 00a4 C046     		nop
 1761 00a6 BD46     		mov	sp, r7
 1762 00a8 04B0     		add	sp, sp, #16
 1763              		@ sp needed
 1764 00aa 80BD     		pop	{r7, pc}
 1765              	.L90:
 1766              		.align	2
 1767              	.L89:
 1768 00ac FFFFFF01 		.word	33554431
 1769              		.cfi_endproc
 1770              	.LFE7:
 1771              		.size	GetNextRowToWrite, .-GetNextRowToWrite
 1772              		.section	.text.CalcChecksum,"ax",%progbits
 1773              		.align	2
 1774              		.code	16
 1775              		.thumb_func
 1776              		.type	CalcChecksum, %function
 1777              	CalcChecksum:
 1778              	.LFB8:
 904:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 905:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 906:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 907:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CalcChecksum
 908:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 909:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 910:Generated_Source\PSoC4/cy_em_eeprom.c **** * Implements CRC-8 that is used in checksum calculation for the redundant copy
 911:Generated_Source\PSoC4/cy_em_eeprom.c **** * algorithm.
 912:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 913:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowData
 914:Generated_Source\PSoC4/cy_em_eeprom.c **** * The row data to be used to calculate the checksum.
 915:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 916:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param len
 917:Generated_Source\PSoC4/cy_em_eeprom.c **** * The length of rowData.
 918:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 919:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 920:Generated_Source\PSoC4/cy_em_eeprom.c **** * The calculated value of CRC-8.
 921:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 922:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 49


 923:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint8 CalcChecksum(uint8 rowData[], uint32 len)
 924:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1779              		.loc 1 924 0
 1780              		.cfi_startproc
 1781              		@ args = 0, pretend = 0, frame = 16
 1782              		@ frame_needed = 1, uses_anonymous_args = 0
 1783 0000 80B5     		push	{r7, lr}
 1784              		.cfi_def_cfa_offset 8
 1785              		.cfi_offset 7, -8
 1786              		.cfi_offset 14, -4
 1787 0002 84B0     		sub	sp, sp, #16
 1788              		.cfi_def_cfa_offset 24
 1789 0004 00AF     		add	r7, sp, #0
 1790              		.cfi_def_cfa_register 7
 1791 0006 7860     		str	r0, [r7, #4]
 1792 0008 3960     		str	r1, [r7]
 925:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint8 crc = CY_EM_EEPROM_CRC8_SEED;
 1793              		.loc 1 925 0
 1794 000a 0F23     		movs	r3, #15
 1795 000c FB18     		adds	r3, r7, r3
 1796 000e FF22     		movs	r2, #255
 1797 0010 1A70     		strb	r2, [r3]
 926:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint8 i;
 927:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint16 cnt = 0u;
 1798              		.loc 1 927 0
 1799 0012 0C23     		movs	r3, #12
 1800 0014 FB18     		adds	r3, r7, r3
 1801 0016 0022     		movs	r2, #0
 1802 0018 1A80     		strh	r2, [r3]
 928:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 929:Generated_Source\PSoC4/cy_em_eeprom.c ****     while(cnt != len)
 1803              		.loc 1 929 0
 1804 001a 3BE0     		b	.L92
 1805              	.L97:
 930:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 931:Generated_Source\PSoC4/cy_em_eeprom.c ****         crc ^= rowData[cnt];
 1806              		.loc 1 931 0
 1807 001c 0C23     		movs	r3, #12
 1808 001e FB18     		adds	r3, r7, r3
 1809 0020 1B88     		ldrh	r3, [r3]
 1810 0022 7A68     		ldr	r2, [r7, #4]
 1811 0024 D318     		adds	r3, r2, r3
 1812 0026 1978     		ldrb	r1, [r3]
 1813 0028 0F23     		movs	r3, #15
 1814 002a FB18     		adds	r3, r7, r3
 1815 002c 0F22     		movs	r2, #15
 1816 002e BA18     		adds	r2, r7, r2
 1817 0030 1278     		ldrb	r2, [r2]
 1818 0032 4A40     		eors	r2, r1
 1819 0034 1A70     		strb	r2, [r3]
 932:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1820              		.loc 1 932 0
 1821 0036 0E23     		movs	r3, #14
 1822 0038 FB18     		adds	r3, r7, r3
 1823 003a 0022     		movs	r2, #0
 1824 003c 1A70     		strb	r2, [r3]
 1825 003e 1DE0     		b	.L93
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 50


 1826              	.L96:
 933:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 934:Generated_Source\PSoC4/cy_em_eeprom.c ****             crc = CY_EM_EEPROM_CALCULATE_CRC8(crc);
 1827              		.loc 1 934 0
 1828 0040 0F23     		movs	r3, #15
 1829 0042 FB18     		adds	r3, r7, r3
 1830 0044 1B78     		ldrb	r3, [r3]
 1831 0046 5BB2     		sxtb	r3, r3
 1832 0048 002B     		cmp	r3, #0
 1833 004a 08DA     		bge	.L94
 1834              		.loc 1 934 0 is_stmt 0 discriminator 1
 1835 004c 0F23     		movs	r3, #15
 1836 004e FB18     		adds	r3, r7, r3
 1837 0050 1B78     		ldrb	r3, [r3]
 1838 0052 DB18     		adds	r3, r3, r3
 1839 0054 DBB2     		uxtb	r3, r3
 1840 0056 3122     		movs	r2, #49
 1841 0058 5340     		eors	r3, r2
 1842 005a DBB2     		uxtb	r3, r3
 1843 005c 04E0     		b	.L95
 1844              	.L94:
 1845              		.loc 1 934 0 discriminator 2
 1846 005e 0F23     		movs	r3, #15
 1847 0060 FB18     		adds	r3, r7, r3
 1848 0062 1B78     		ldrb	r3, [r3]
 1849 0064 DB18     		adds	r3, r3, r3
 1850 0066 DBB2     		uxtb	r3, r3
 1851              	.L95:
 1852              		.loc 1 934 0 discriminator 4
 1853 0068 0F22     		movs	r2, #15
 1854 006a BA18     		adds	r2, r7, r2
 1855 006c 1370     		strb	r3, [r2]
 932:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1856              		.loc 1 932 0 is_stmt 1 discriminator 4
 1857 006e 0E23     		movs	r3, #14
 1858 0070 FB18     		adds	r3, r7, r3
 1859 0072 1A78     		ldrb	r2, [r3]
 1860 0074 0E23     		movs	r3, #14
 1861 0076 FB18     		adds	r3, r7, r3
 1862 0078 0132     		adds	r2, r2, #1
 1863 007a 1A70     		strb	r2, [r3]
 1864              	.L93:
 932:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1865              		.loc 1 932 0 is_stmt 0 discriminator 2
 1866 007c 0E23     		movs	r3, #14
 1867 007e FB18     		adds	r3, r7, r3
 1868 0080 1B78     		ldrb	r3, [r3]
 1869 0082 072B     		cmp	r3, #7
 1870 0084 DCD9     		bls	.L96
 935:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 936:Generated_Source\PSoC4/cy_em_eeprom.c ****         cnt++;
 1871              		.loc 1 936 0 is_stmt 1
 1872 0086 0C23     		movs	r3, #12
 1873 0088 FB18     		adds	r3, r7, r3
 1874 008a 1A88     		ldrh	r2, [r3]
 1875 008c 0C23     		movs	r3, #12
 1876 008e FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 51


 1877 0090 0132     		adds	r2, r2, #1
 1878 0092 1A80     		strh	r2, [r3]
 1879              	.L92:
 929:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1880              		.loc 1 929 0
 1881 0094 0C23     		movs	r3, #12
 1882 0096 FB18     		adds	r3, r7, r3
 1883 0098 1A88     		ldrh	r2, [r3]
 1884 009a 3B68     		ldr	r3, [r7]
 1885 009c 9A42     		cmp	r2, r3
 1886 009e BDD1     		bne	.L97
 937:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 938:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 939:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (crc);
 1887              		.loc 1 939 0
 1888 00a0 0F23     		movs	r3, #15
 1889 00a2 FB18     		adds	r3, r7, r3
 1890 00a4 1B78     		ldrb	r3, [r3]
 940:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1891              		.loc 1 940 0
 1892 00a6 1800     		movs	r0, r3
 1893 00a8 BD46     		mov	sp, r7
 1894 00aa 04B0     		add	sp, sp, #16
 1895              		@ sp needed
 1896 00ac 80BD     		pop	{r7, pc}
 1897              		.cfi_endproc
 1898              	.LFE8:
 1899              		.size	CalcChecksum, .-CalcChecksum
 1900              		.section	.text.CheckRanges,"ax",%progbits
 1901              		.align	2
 1902              		.code	16
 1903              		.thumb_func
 1904              		.type	CheckRanges, %function
 1905              	CheckRanges:
 1906              	.LFB9:
 941:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 942:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 943:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 944:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CheckRanges
 945:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 946:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 947:Generated_Source\PSoC4/cy_em_eeprom.c **** * Checks if the EEPROM of the requested size can be placed in flash.
 948:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 949:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param config
 950:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a configuration structure. See \ref cy_stc_eeprom_config_t.
 951:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 952:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 953:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
 954:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 955:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 956:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckRanges(cy_stc_eeprom_config_t* config)
 957:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1907              		.loc 1 957 0
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 24
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 52


 1912              		.cfi_def_cfa_offset 8
 1913              		.cfi_offset 7, -8
 1914              		.cfi_offset 14, -4
 1915 0002 86B0     		sub	sp, sp, #24
 1916              		.cfi_def_cfa_offset 32
 1917 0004 00AF     		add	r7, sp, #0
 1918              		.cfi_def_cfa_register 7
 1919 0006 7860     		str	r0, [r7, #4]
 958:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_DATA;
 1920              		.loc 1 958 0
 1921 0008 1723     		movs	r3, #23
 1922 000a FB18     		adds	r3, r7, r3
 1923 000c 0322     		movs	r2, #3
 1924 000e 1A70     		strb	r2, [r3]
 959:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startAddr = config->userFlashStartAddr;
 1925              		.loc 1 959 0
 1926 0010 7B68     		ldr	r3, [r7, #4]
 1927 0012 DB68     		ldr	r3, [r3, #12]
 1928 0014 3B61     		str	r3, [r7, #16]
 960:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 endAddr = startAddr + CY_EM_EEPROM_GET_PHYSICAL_SIZE(config->eepromSize,
 1929              		.loc 1 960 0
 1930 0016 7B68     		ldr	r3, [r7, #4]
 1931 0018 1B68     		ldr	r3, [r3]
 1932 001a 9A09     		lsrs	r2, r3, #6
 1933 001c 7B68     		ldr	r3, [r7, #4]
 1934 001e 1B68     		ldr	r3, [r3]
 1935 0020 3F21     		movs	r1, #63
 1936 0022 0B40     		ands	r3, r1
 1937 0024 01D0     		beq	.L100
 1938              		.loc 1 960 0 is_stmt 0 discriminator 1
 1939 0026 0123     		movs	r3, #1
 1940 0028 00E0     		b	.L101
 1941              	.L100:
 1942              		.loc 1 960 0 discriminator 2
 1943 002a 0023     		movs	r3, #0
 1944              	.L101:
 1945              		.loc 1 960 0 discriminator 4
 1946 002c D218     		adds	r2, r2, r3
 1947 002e 7B68     		ldr	r3, [r7, #4]
 1948 0030 5B68     		ldr	r3, [r3, #4]
 1949 0032 5343     		muls	r3, r2
 1950 0034 7A68     		ldr	r2, [r7, #4]
 1951 0036 127A     		ldrb	r2, [r2, #8]
 1952 0038 0132     		adds	r2, r2, #1
 1953 003a 5343     		muls	r3, r2
 1954 003c DA01     		lsls	r2, r3, #7
 1955 003e 3B69     		ldr	r3, [r7, #16]
 1956 0040 D318     		adds	r3, r2, r3
 1957 0042 FB60     		str	r3, [r7, #12]
 961:Generated_Source\PSoC4/cy_em_eeprom.c ****             config->wearLevelingFactor, config->redundantCopy);
 962:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 963:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Range check if there is enough flash for EEPROM */
 964:Generated_Source\PSoC4/cy_em_eeprom.c ****     if (CY_EM_EEPROM_IS_IN_FLASH_RANGE(startAddr, endAddr))
 1958              		.loc 1 964 0 is_stmt 1 discriminator 4
 1959 0044 3B69     		ldr	r3, [r7, #16]
 1960 0046 002B     		cmp	r3, #0
 1961 0048 08D0     		beq	.L102
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 53


 1962              		.loc 1 964 0 is_stmt 0 discriminator 1
 1963 004a FA68     		ldr	r2, [r7, #12]
 1964 004c 8023     		movs	r3, #128
 1965 004e 1B02     		lsls	r3, r3, #8
 1966 0050 9A42     		cmp	r2, r3
 1967 0052 03D8     		bhi	.L102
 965:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 966:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 1968              		.loc 1 966 0 is_stmt 1
 1969 0054 1723     		movs	r3, #23
 1970 0056 FB18     		adds	r3, r7, r3
 1971 0058 0022     		movs	r2, #0
 1972 005a 1A70     		strb	r2, [r3]
 1973              	.L102:
 967:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 968:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (ret);
 1974              		.loc 1 968 0
 1975 005c 1723     		movs	r3, #23
 1976 005e FB18     		adds	r3, r7, r3
 1977 0060 1B78     		ldrb	r3, [r3]
 969:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1978              		.loc 1 969 0
 1979 0062 1800     		movs	r0, r3
 1980 0064 BD46     		mov	sp, r7
 1981 0066 06B0     		add	sp, sp, #24
 1982              		@ sp needed
 1983 0068 80BD     		pop	{r7, pc}
 1984              		.cfi_endproc
 1985              	.LFE9:
 1986              		.size	CheckRanges, .-CheckRanges
 1987 006a C046     		.section	.text.WriteRow,"ax",%progbits
 1988              		.align	2
 1989              		.code	16
 1990              		.thumb_func
 1991              		.type	WriteRow, %function
 1992              	WriteRow:
 1993              	.LFB10:
 970:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 971:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 972:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 973:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: WriteRow
 974:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 975:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 976:Generated_Source\PSoC4/cy_em_eeprom.c **** * Writes one flash row starting from the specified row address.
 977:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 978:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowAdd
 979:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the flash row.
 980:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 981:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowData
 982:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the data to be written to the row.
 983:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 984:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 985:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 986:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 987:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 988:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
 989:Generated_Source\PSoC4/cy_em_eeprom.c **** *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 54


 990:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 991:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t WriteRow(uint32 rowAddr,
 992:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         uint32 *rowData,
 993:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
 994:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1994              		.loc 1 994 0
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 32
 1997              		@ frame_needed = 1, uses_anonymous_args = 0
 1998 0000 80B5     		push	{r7, lr}
 1999              		.cfi_def_cfa_offset 8
 2000              		.cfi_offset 7, -8
 2001              		.cfi_offset 14, -4
 2002 0002 88B0     		sub	sp, sp, #32
 2003              		.cfi_def_cfa_offset 40
 2004 0004 00AF     		add	r7, sp, #0
 2005              		.cfi_def_cfa_register 7
 2006 0006 F860     		str	r0, [r7, #12]
 2007 0008 B960     		str	r1, [r7, #8]
 2008 000a 7A60     		str	r2, [r7, #4]
 995:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 2009              		.loc 1 995 0
 2010 000c 1F23     		movs	r3, #31
 2011 000e FB18     		adds	r3, r7, r3
 2012 0010 0422     		movs	r2, #4
 2013 0012 1A70     		strb	r2, [r3]
 996:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (!CY_PSOC6)
 997:Generated_Source\PSoC4/cy_em_eeprom.c ****     cystatus rc;
 998:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if ((CY_PSOC3) || (CY_PSOC5))
 999:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 arrayId;
1000:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 rowId;
1001:Generated_Source\PSoC4/cy_em_eeprom.c ****     #else
1002:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 rowNum;
1003:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC3) */
1004:Generated_Source\PSoC4/cy_em_eeprom.c ****     
1005:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC3)
1006:Generated_Source\PSoC4/cy_em_eeprom.c ****         rowAddr &= CY_EM_EEPROM_CODE_ADDR_MASK;
1007:Generated_Source\PSoC4/cy_em_eeprom.c ****         context = context;      /* To avoid compiler warning generation */
1008:Generated_Source\PSoC4/cy_em_eeprom.c ****     #else
1009:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)context;          /* To avoid compiler warning generation */
1010:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* ((CY_PSOC3) */
1011:Generated_Source\PSoC4/cy_em_eeprom.c ****     
1012:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Write the flash row */
1013:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC4)
1014:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* For PSoC 4 devices, the array ID is included in the row number */
1015:Generated_Source\PSoC4/cy_em_eeprom.c ****         rowNum = rowAddr / CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 2014              		.loc 1 1015 0
 2015 0014 FB68     		ldr	r3, [r7, #12]
 2016 0016 DB09     		lsrs	r3, r3, #7
 2017 0018 BB61     		str	r3, [r7, #24]
1016:Generated_Source\PSoC4/cy_em_eeprom.c ****         
1017:Generated_Source\PSoC4/cy_em_eeprom.c ****         rc = CySysFlashWriteRow(rowNum, (uint8 *)rowData);
 2018              		.loc 1 1017 0
 2019 001a BA68     		ldr	r2, [r7, #8]
 2020 001c BB69     		ldr	r3, [r7, #24]
 2021 001e 1100     		movs	r1, r2
 2022 0020 1800     		movs	r0, r3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 55


 2023 0022 FFF7FEFF 		bl	CySysFlashWriteRow
 2024 0026 0300     		movs	r3, r0
 2025 0028 7B61     		str	r3, [r7, #20]
1018:Generated_Source\PSoC4/cy_em_eeprom.c ****     #else
1019:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* For PSoC 3/5 devices, the array ID and row ID needed to write the row */
1020:Generated_Source\PSoC4/cy_em_eeprom.c ****         rowId = (rowAddr / CY_EM_EEPROM_FLASH_SIZEOF_ROW) % CY_EM_EEPROM_ROWS_IN_ARRAY;
1021:Generated_Source\PSoC4/cy_em_eeprom.c ****         
1022:Generated_Source\PSoC4/cy_em_eeprom.c ****         #ifndef CY_EM_EEPROM_SKIP_TEMP_MEASUREMENT
1023:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)CySetTemp();
1024:Generated_Source\PSoC4/cy_em_eeprom.c ****         #endif /* (CY_EM_EEPROM_SKIP_TEMP_MEASUREMENT) */
1025:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1026:Generated_Source\PSoC4/cy_em_eeprom.c ****         arrayId = rowAddr / CY_FLASH_SIZEOF_ARRAY;
1027:Generated_Source\PSoC4/cy_em_eeprom.c ****         rc = CyWriteRowData((uint8)arrayId, (uint16)rowId, (uint8 *)rowData);
1028:Generated_Source\PSoC4/cy_em_eeprom.c ****         
1029:Generated_Source\PSoC4/cy_em_eeprom.c ****         #if (CY_PSOC5)
1030:Generated_Source\PSoC4/cy_em_eeprom.c ****             CyFlushCache();
1031:Generated_Source\PSoC4/cy_em_eeprom.c ****         #endif /* (CY_PSOC5) */
1032:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC4) */
1033:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1034:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CYRET_SUCCESS == rc)
 2026              		.loc 1 1034 0
 2027 002a 7B69     		ldr	r3, [r7, #20]
 2028 002c 002B     		cmp	r3, #0
 2029 002e 03D1     		bne	.L105
1035:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1036:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 2030              		.loc 1 1036 0
 2031 0030 1F23     		movs	r3, #31
 2032 0032 FB18     		adds	r3, r7, r3
 2033 0034 0022     		movs	r2, #0
 2034 0036 1A70     		strb	r2, [r3]
 2035              	.L105:
1037:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1038:Generated_Source\PSoC4/cy_em_eeprom.c **** #else /* PSoC 6 */
1039:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != context->blockingWrite)
1040:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1041:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Do blocking write */
1042:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_FLASH_DRV_SUCCESS == Cy_Flash_WriteRow(rowAddr, (const uint32 *)rowData))
1043:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1044:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = CY_EM_EEPROM_SUCCESS;
1045:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1046:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1047:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
1048:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1049:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Initiate write */
1050:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_FLASH_DRV_OPERATION_STARTED == Cy_Flash_StartWrite(rowAddr, (const uint32 *)rowData))
1051:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1052:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 countMs = CY_EM_EEPROM_MAX_WRITE_DURATION_MS;
1053:Generated_Source\PSoC4/cy_em_eeprom.c ****             cy_en_flashdrv_status_t rc;
1054:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1055:Generated_Source\PSoC4/cy_em_eeprom.c ****             do
1056:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1057:Generated_Source\PSoC4/cy_em_eeprom.c ****                 CyDelay(1u);                         /* Wait 1ms */
1058:Generated_Source\PSoC4/cy_em_eeprom.c ****                 rc = Cy_Flash_IsWriteComplete();     /* Check if write completed */
1059:Generated_Source\PSoC4/cy_em_eeprom.c ****                 countMs--;
1060:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1061:Generated_Source\PSoC4/cy_em_eeprom.c ****             while ((rc == CY_FLASH_DRV_OPCODE_BUSY) && (0u != countMs));
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 56


1062:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1063:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_SUCCESS == rc)
1064:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1065:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
1066:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1067:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1068:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1069:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CY_PSOC6) */
1070:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1071:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (ret);
 2036              		.loc 1 1071 0
 2037 0038 1F23     		movs	r3, #31
 2038 003a FB18     		adds	r3, r7, r3
 2039 003c 1B78     		ldrb	r3, [r3]
1072:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2040              		.loc 1 1072 0
 2041 003e 1800     		movs	r0, r3
 2042 0040 BD46     		mov	sp, r7
 2043 0042 08B0     		add	sp, sp, #32
 2044              		@ sp needed
 2045 0044 80BD     		pop	{r7, pc}
 2046              		.cfi_endproc
 2047              	.LFE10:
 2048              		.size	WriteRow, .-WriteRow
 2049 0046 C046     		.section	.text.EraseRow,"ax",%progbits
 2050              		.align	2
 2051              		.code	16
 2052              		.thumb_func
 2053              		.type	EraseRow, %function
 2054              	EraseRow:
 2055              	.LFB11:
1073:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1074:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1075:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1076:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: EraseRow
1077:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1078:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1079:Generated_Source\PSoC4/cy_em_eeprom.c **** * Erases one flash row starting from the specified row address. If the redundant
1080:Generated_Source\PSoC4/cy_em_eeprom.c **** * copy option is enabled the corresponding row in the redundant copy will also
1081:Generated_Source\PSoC4/cy_em_eeprom.c **** * be erased.
1082:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1083:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowAdd
1084:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the flash row.
1085:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1086:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param ramBuffAddr
1087:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the RAM buffer that contains zeroed data (used only for
1088:Generated_Source\PSoC4/cy_em_eeprom.c **** * non-PSoC 6 devices).
1089:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1090:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
1091:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
1092:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1093:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1094:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1095:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1096:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1097:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t EraseRow(uint32 rowAddr,
1098:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         uint32 ramBuffAddr,
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 57


1099:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
1100:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2056              		.loc 1 1100 0
 2057              		.cfi_startproc
 2058              		@ args = 0, pretend = 0, frame = 24
 2059              		@ frame_needed = 1, uses_anonymous_args = 0
 2060 0000 90B5     		push	{r4, r7, lr}
 2061              		.cfi_def_cfa_offset 12
 2062              		.cfi_offset 4, -12
 2063              		.cfi_offset 7, -8
 2064              		.cfi_offset 14, -4
 2065 0002 87B0     		sub	sp, sp, #28
 2066              		.cfi_def_cfa_offset 40
 2067 0004 00AF     		add	r7, sp, #0
 2068              		.cfi_def_cfa_register 7
 2069 0006 F860     		str	r0, [r7, #12]
 2070 0008 B960     		str	r1, [r7, #8]
 2071 000a 7A60     		str	r2, [r7, #4]
1101:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = rowAddr;
 2072              		.loc 1 1101 0
 2073 000c FB68     		ldr	r3, [r7, #12]
 2074 000e 3B61     		str	r3, [r7, #16]
1102:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 2075              		.loc 1 1102 0
 2076 0010 1723     		movs	r3, #23
 2077 0012 FB18     		adds	r3, r7, r3
 2078 0014 0422     		movs	r2, #4
 2079 0016 1A70     		strb	r2, [r3]
1103:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CY_PSOC6)
1104:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i = 1u;
1105:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1106:Generated_Source\PSoC4/cy_em_eeprom.c ****     (void)ramBuffAddr; /* To avoid compiler warning */
1107:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1108:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != context->redundantCopy)
1109:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1110:Generated_Source\PSoC4/cy_em_eeprom.c ****         i++;
1111:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1112:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1113:Generated_Source\PSoC4/cy_em_eeprom.c ****     do
1114:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1115:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != context->blockingWrite)
1116:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1117:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Erase the flash row */
1118:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_SUCCESS == Cy_Flash_EraseRow(emEepromRowAddr))
1119:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1120:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
1121:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1122:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1123:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1124:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1125:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Initiate erase */
1126:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_OPERATION_STARTED == Cy_Flash_StartErase(emEepromRowAddr))
1127:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1128:Generated_Source\PSoC4/cy_em_eeprom.c ****                 uint32 countMs = CY_EM_EEPROM_MAX_WRITE_DURATION_MS;
1129:Generated_Source\PSoC4/cy_em_eeprom.c ****                 cy_en_flashdrv_status_t rc;
1130:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1131:Generated_Source\PSoC4/cy_em_eeprom.c ****                 do
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 58


1132:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
1133:Generated_Source\PSoC4/cy_em_eeprom.c ****                     CyDelay(1u);                         /* Wait 1ms */
1134:Generated_Source\PSoC4/cy_em_eeprom.c ****                     rc = Cy_Flash_IsWriteComplete();     /* Check if erase completed */
1135:Generated_Source\PSoC4/cy_em_eeprom.c ****                     countMs--;
1136:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
1137:Generated_Source\PSoC4/cy_em_eeprom.c ****                 while ((rc == CY_FLASH_DRV_OPCODE_BUSY) && (0u != countMs));
1138:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1139:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(CY_FLASH_DRV_SUCCESS == rc)
1140:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
1141:Generated_Source\PSoC4/cy_em_eeprom.c ****                     ret = CY_EM_EEPROM_SUCCESS;
1142:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
1143:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1144:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1145:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1146:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
1147:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1148:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Update the address to point to the redundant copy row */
1149:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
1150:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1151:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1152:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1153:Generated_Source\PSoC4/cy_em_eeprom.c ****             break;
1154:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1155:Generated_Source\PSoC4/cy_em_eeprom.c ****         i--;
1156:Generated_Source\PSoC4/cy_em_eeprom.c ****     } while (0u != i);
1157:Generated_Source\PSoC4/cy_em_eeprom.c **** #else
1158:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Write the data to the specified flash row */
1159:Generated_Source\PSoC4/cy_em_eeprom.c ****     ret = WriteRow(emEepromRowAddr, (uint32 *)ramBuffAddr, context);
 2080              		.loc 1 1159 0
 2081 0018 B968     		ldr	r1, [r7, #8]
 2082 001a 1723     		movs	r3, #23
 2083 001c FC18     		adds	r4, r7, r3
 2084 001e 7A68     		ldr	r2, [r7, #4]
 2085 0020 3B69     		ldr	r3, [r7, #16]
 2086 0022 1800     		movs	r0, r3
 2087 0024 FFF7FEFF 		bl	WriteRow
 2088 0028 0300     		movs	r3, r0
 2089 002a 2370     		strb	r3, [r4]
1160:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1161:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((CY_EM_EEPROM_SUCCESS == ret) && (0u != context->redundantCopy))
 2090              		.loc 1 1161 0
 2091 002c 1723     		movs	r3, #23
 2092 002e FB18     		adds	r3, r7, r3
 2093 0030 1B78     		ldrb	r3, [r3]
 2094 0032 002B     		cmp	r3, #0
 2095 0034 15D1     		bne	.L108
 2096              		.loc 1 1161 0 is_stmt 0 discriminator 1
 2097 0036 7B68     		ldr	r3, [r7, #4]
 2098 0038 1B7D     		ldrb	r3, [r3, #20]
 2099 003a 002B     		cmp	r3, #0
 2100 003c 11D0     		beq	.L108
1162:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1163:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Update the address to point to the redundant copy row */
1164:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2101              		.loc 1 1164 0 is_stmt 1
 2102 003e 7B68     		ldr	r3, [r7, #4]
 2103 0040 9B69     		ldr	r3, [r3, #24]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 59


 2104 0042 3A69     		ldr	r2, [r7, #16]
 2105 0044 D21A     		subs	r2, r2, r3
 2106 0046 7B68     		ldr	r3, [r7, #4]
 2107 0048 1B68     		ldr	r3, [r3]
 2108 004a D318     		adds	r3, r2, r3
 2109 004c 3B61     		str	r3, [r7, #16]
1165:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(emEepromRowAddr, (uint32 *)ramBuffAddr, context);
 2110              		.loc 1 1165 0
 2111 004e B968     		ldr	r1, [r7, #8]
 2112 0050 1723     		movs	r3, #23
 2113 0052 FC18     		adds	r4, r7, r3
 2114 0054 7A68     		ldr	r2, [r7, #4]
 2115 0056 3B69     		ldr	r3, [r7, #16]
 2116 0058 1800     		movs	r0, r3
 2117 005a FFF7FEFF 		bl	WriteRow
 2118 005e 0300     		movs	r3, r0
 2119 0060 2370     		strb	r3, [r4]
 2120              	.L108:
1166:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1167:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1168:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CY_EM_EEPROM_SUCCESS == ret)
 2121              		.loc 1 1168 0
 2122 0062 1723     		movs	r3, #23
 2123 0064 FB18     		adds	r3, r7, r3
 2124 0066 1B78     		ldrb	r3, [r3]
 2125 0068 002B     		cmp	r3, #0
 2126 006a 02D1     		bne	.L109
1169:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1170:Generated_Source\PSoC4/cy_em_eeprom.c ****         context->lastWrRowAddr = rowAddr;
 2127              		.loc 1 1170 0
 2128 006c 7B68     		ldr	r3, [r7, #4]
 2129 006e FA68     		ldr	r2, [r7, #12]
 2130 0070 9A60     		str	r2, [r3, #8]
 2131              	.L109:
1171:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1172:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CY_PSOC6) */
1173:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1174:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 2132              		.loc 1 1174 0
 2133 0072 1723     		movs	r3, #23
 2134 0074 FB18     		adds	r3, r7, r3
 2135 0076 1B78     		ldrb	r3, [r3]
1175:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2136              		.loc 1 1175 0
 2137 0078 1800     		movs	r0, r3
 2138 007a BD46     		mov	sp, r7
 2139 007c 07B0     		add	sp, sp, #28
 2140              		@ sp needed
 2141 007e 90BD     		pop	{r4, r7, pc}
 2142              		.cfi_endproc
 2143              	.LFE11:
 2144              		.size	EraseRow, .-EraseRow
 2145              		.section	.text.CheckCrcAndCopy,"ax",%progbits
 2146              		.align	2
 2147              		.code	16
 2148              		.thumb_func
 2149              		.type	CheckCrcAndCopy, %function
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 60


 2150              	CheckCrcAndCopy:
 2151              	.LFB12:
1176:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1177:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1178:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1179:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CheckCrcAndCopy
1180:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1181:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1182:Generated_Source\PSoC4/cy_em_eeprom.c **** * Checks the checksum of the specific row in EEPROM. If the CRC matches - copies
1183:Generated_Source\PSoC4/cy_em_eeprom.c **** * the data to the "datAddr" from EEPROM. f the CRC does not match checks the
1184:Generated_Source\PSoC4/cy_em_eeprom.c **** * CRC of the corresponding row in the EEPROM's redundant copy. If the CRC
1185:Generated_Source\PSoC4/cy_em_eeprom.c **** * matches - copies the data to the "datAddr" from EEPROM redundant copy. If the
1186:Generated_Source\PSoC4/cy_em_eeprom.c **** * CRC of the redundant copy does not match - returns bad checksum.
1187:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1188:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param startAddr
1189:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address that points to the start of the specified row.
1190:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1191:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param datAddr
1192:Generated_Source\PSoC4/cy_em_eeprom.c **** * The start address of where the row data will be copied if the CRC check
1193:Generated_Source\PSoC4/cy_em_eeprom.c **** * will succeed.
1194:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1195:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowOffset
1196:Generated_Source\PSoC4/cy_em_eeprom.c **** * The offset in the row from which the data should be copied.
1197:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1198:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param numBytes
1199:Generated_Source\PSoC4/cy_em_eeprom.c **** * The number of bytes to be copied.
1200:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1201:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
1202:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
1203:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1204:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1205:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1206:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1207:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
1208:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
1209:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
1210:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
1211:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1212:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1213:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckCrcAndCopy(uint32 startAddr,
1214:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 dstAddr,
1215:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 rowOffset,
1216:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 numBytes,
1217:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 cy_stc_eeprom_context_t * context)
1218:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2152              		.loc 1 1218 0
 2153              		.cfi_startproc
 2154              		@ args = 4, pretend = 0, frame = 152
 2155              		@ frame_needed = 1, uses_anonymous_args = 0
 2156 0000 90B5     		push	{r4, r7, lr}
 2157              		.cfi_def_cfa_offset 12
 2158              		.cfi_offset 4, -12
 2159              		.cfi_offset 7, -8
 2160              		.cfi_offset 14, -4
 2161 0002 A7B0     		sub	sp, sp, #156
 2162              		.cfi_def_cfa_offset 168
 2163 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 61


 2164              		.cfi_def_cfa_register 7
 2165 0006 F860     		str	r0, [r7, #12]
 2166 0008 B960     		str	r1, [r7, #8]
 2167 000a 7A60     		str	r2, [r7, #4]
 2168 000c 3B60     		str	r3, [r7]
1219:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret;
1220:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
1221:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1222:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Calculate the row address in the EEPROM's redundant copy */
1223:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 rcStartRowAddr = (startAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2169              		.loc 1 1223 0
 2170 000e A823     		movs	r3, #168
 2171 0010 FB18     		adds	r3, r7, r3
 2172 0012 1B68     		ldr	r3, [r3]
 2173 0014 9B69     		ldr	r3, [r3, #24]
 2174 0016 FA68     		ldr	r2, [r7, #12]
 2175 0018 D21A     		subs	r2, r2, r3
 2176 001a A823     		movs	r3, #168
 2177 001c FB18     		adds	r3, r7, r3
 2178 001e 1B68     		ldr	r3, [r3]
 2179 0020 1B68     		ldr	r3, [r3]
 2180 0022 D318     		adds	r3, r2, r3
 2181 0024 9022     		movs	r2, #144
 2182 0026 BA18     		adds	r2, r7, r2
 2183 0028 1360     		str	r3, [r2]
1224:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1225:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check the row data CRC in the EEPROM */
1226:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((*(uint32 *)(startAddr + CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET)) ==
 2184              		.loc 1 1226 0
 2185 002a FB68     		ldr	r3, [r7, #12]
 2186 002c 3C33     		adds	r3, r3, #60
 2187 002e 1C68     		ldr	r4, [r3]
1227:Generated_Source\PSoC4/cy_em_eeprom.c ****         ((uint32) CalcChecksum((uint8 *)(startAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2188              		.loc 1 1227 0
 2189 0030 FB68     		ldr	r3, [r7, #12]
 2190 0032 4033     		adds	r3, r3, #64
 2191 0034 4021     		movs	r1, #64
 2192 0036 1800     		movs	r0, r3
 2193 0038 FFF7FEFF 		bl	CalcChecksum
 2194 003c 0300     		movs	r3, r0
1226:Generated_Source\PSoC4/cy_em_eeprom.c ****         ((uint32) CalcChecksum((uint8 *)(startAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2195              		.loc 1 1226 0
 2196 003e 9C42     		cmp	r4, r3
 2197 0040 0DD1     		bne	.L112
1228:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_EEPROM_DATA_LEN)))
1229:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1230:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)memcpy((void *)(dstAddr), (void *)(startAddr + rowOffset), numBytes);
 2198              		.loc 1 1230 0
 2199 0042 B868     		ldr	r0, [r7, #8]
 2200 0044 FA68     		ldr	r2, [r7, #12]
 2201 0046 7B68     		ldr	r3, [r7, #4]
 2202 0048 D318     		adds	r3, r2, r3
 2203 004a 1900     		movs	r1, r3
 2204 004c 3B68     		ldr	r3, [r7]
 2205 004e 1A00     		movs	r2, r3
 2206 0050 FFF7FEFF 		bl	memcpy
1231:Generated_Source\PSoC4/cy_em_eeprom.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 62


1232:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 2207              		.loc 1 1232 0
 2208 0054 9723     		movs	r3, #151
 2209 0056 FB18     		adds	r3, r7, r3
 2210 0058 0022     		movs	r2, #0
 2211 005a 1A70     		strb	r2, [r3]
 2212 005c 39E0     		b	.L113
 2213              	.L112:
1233:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1234:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check the row data CRC in the EEPROM's redundant copy */
1235:Generated_Source\PSoC4/cy_em_eeprom.c ****     else if((*(uint32 *)(rcStartRowAddr + CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET)) ==
 2214              		.loc 1 1235 0
 2215 005e 9023     		movs	r3, #144
 2216 0060 FB18     		adds	r3, r7, r3
 2217 0062 1B68     		ldr	r3, [r3]
 2218 0064 3C33     		adds	r3, r3, #60
 2219 0066 1C68     		ldr	r4, [r3]
1236:Generated_Source\PSoC4/cy_em_eeprom.c ****             ((uint32) CalcChecksum((uint8 *)(rcStartRowAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2220              		.loc 1 1236 0
 2221 0068 9023     		movs	r3, #144
 2222 006a FB18     		adds	r3, r7, r3
 2223 006c 1B68     		ldr	r3, [r3]
 2224 006e 4033     		adds	r3, r3, #64
 2225 0070 4021     		movs	r1, #64
 2226 0072 1800     		movs	r0, r3
 2227 0074 FFF7FEFF 		bl	CalcChecksum
 2228 0078 0300     		movs	r3, r0
1235:Generated_Source\PSoC4/cy_em_eeprom.c ****             ((uint32) CalcChecksum((uint8 *)(rcStartRowAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2229              		.loc 1 1235 0
 2230 007a 9C42     		cmp	r4, r3
 2231 007c 25D1     		bne	.L114
1237:Generated_Source\PSoC4/cy_em_eeprom.c ****                 CY_EM_EEPROM_EEPROM_DATA_LEN)))
1238:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1239:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Copy the redundant copy row to RAM buffer to avoid read while write (RWW)
1240:Generated_Source\PSoC4/cy_em_eeprom.c ****         * flash exception. The RWW occurs while trying to write and read the data from
1241:Generated_Source\PSoC4/cy_em_eeprom.c ****         * same flash macro.
1242:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
1243:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)memcpy((void *)(writeRamBuffer), (void *)(rcStartRowAddr), CY_EM_EEPROM_FLASH_SIZEOF_
 2232              		.loc 1 1243 0
 2233 007e 9023     		movs	r3, #144
 2234 0080 FB18     		adds	r3, r7, r3
 2235 0082 1968     		ldr	r1, [r3]
 2236 0084 1023     		movs	r3, #16
 2237 0086 FB18     		adds	r3, r7, r3
 2238 0088 8022     		movs	r2, #128
 2239 008a 1800     		movs	r0, r3
 2240 008c FFF7FEFF 		bl	memcpy
1244:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1245:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Restore bad row data from the RAM buffer */
1246:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(startAddr, (uint32 *)writeRamBuffer, context);
 2241              		.loc 1 1246 0
 2242 0090 9723     		movs	r3, #151
 2243 0092 FC18     		adds	r4, r7, r3
 2244 0094 A823     		movs	r3, #168
 2245 0096 FB18     		adds	r3, r7, r3
 2246 0098 1A68     		ldr	r2, [r3]
 2247 009a 1023     		movs	r3, #16
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 63


 2248 009c F918     		adds	r1, r7, r3
 2249 009e FB68     		ldr	r3, [r7, #12]
 2250 00a0 1800     		movs	r0, r3
 2251 00a2 FFF7FEFF 		bl	WriteRow
 2252 00a6 0300     		movs	r3, r0
 2253 00a8 2370     		strb	r3, [r4]
1247:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1248:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
 2254              		.loc 1 1248 0
 2255 00aa 9723     		movs	r3, #151
 2256 00ac FB18     		adds	r3, r7, r3
 2257 00ae 1B78     		ldrb	r3, [r3]
 2258 00b0 002B     		cmp	r3, #0
 2259 00b2 0ED1     		bne	.L113
1249:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1250:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memcpy((void *)(dstAddr), (void *)(writeRamBuffer + rowOffset), numBytes);
 2260              		.loc 1 1250 0
 2261 00b4 B868     		ldr	r0, [r7, #8]
 2262 00b6 7B68     		ldr	r3, [r7, #4]
 2263 00b8 9B00     		lsls	r3, r3, #2
 2264 00ba 1022     		movs	r2, #16
 2265 00bc BA18     		adds	r2, r7, r2
 2266 00be D318     		adds	r3, r2, r3
 2267 00c0 3A68     		ldr	r2, [r7]
 2268 00c2 1900     		movs	r1, r3
 2269 00c4 FFF7FEFF 		bl	memcpy
 2270 00c8 03E0     		b	.L113
 2271              	.L114:
1251:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1252:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1253:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
1254:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1255:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_BAD_CHECKSUM;
 2272              		.loc 1 1255 0
 2273 00ca 9723     		movs	r3, #151
 2274 00cc FB18     		adds	r3, r7, r3
 2275 00ce 0222     		movs	r2, #2
 2276 00d0 1A70     		strb	r2, [r3]
 2277              	.L113:
1256:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1257:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1258:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 2278              		.loc 1 1258 0
 2279 00d2 9723     		movs	r3, #151
 2280 00d4 FB18     		adds	r3, r7, r3
 2281 00d6 1B78     		ldrb	r3, [r3]
1259:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2282              		.loc 1 1259 0
 2283 00d8 1800     		movs	r0, r3
 2284 00da BD46     		mov	sp, r7
 2285 00dc 27B0     		add	sp, sp, #156
 2286              		@ sp needed
 2287 00de 90BD     		pop	{r4, r7, pc}
 2288              		.cfi_endproc
 2289              	.LFE12:
 2290              		.size	CheckCrcAndCopy, .-CheckCrcAndCopy
 2291              		.section	.text.GetAddresses,"ax",%progbits
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 64


 2292              		.align	2
 2293              		.code	16
 2294              		.thumb_func
 2295              		.type	GetAddresses, %function
 2296              	GetAddresses:
 2297              	.LFB13:
1260:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1261:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1262:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1263:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetAddresses
1264:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1265:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1266:Generated_Source\PSoC4/cy_em_eeprom.c **** * Calculates the start and end address of the row's EEPROM data to be updated.
1267:Generated_Source\PSoC4/cy_em_eeprom.c **** * The start and end are not absolute addresses but a relative addresses in a
1268:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row.
1269:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1270:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param startAddr
1271:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the EEPROM data start address will be returned.
1272:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1273:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param endAddr
1274:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the EEPROM data end address will be returned.
1275:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1276:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param offset
1277:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the calculated offset of the EEPROM header data
1278:Generated_Source\PSoC4/cy_em_eeprom.c **** * will be returned.
1279:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1280:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowNum
1281:Generated_Source\PSoC4/cy_em_eeprom.c **** * The row number that is about to be written.
1282:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1283:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
1284:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the EEPROM header data in the currently analyzed row that may
1285:Generated_Source\PSoC4/cy_em_eeprom.c **** * concern to the row about to be written.
1286:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1287:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param len
1288:Generated_Source\PSoC4/cy_em_eeprom.c **** * The length of the EEPROM header data in the currently analyzed row that may
1289:Generated_Source\PSoC4/cy_em_eeprom.c **** * concern to the row about to be written.
1290:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1291:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1292:Generated_Source\PSoC4/cy_em_eeprom.c **** * Zero indicates that the currently analyzed row has the data to be written to
1293:Generated_Source\PSoC4/cy_em_eeprom.c **** * the active EEPROM row data locations. Non zero value indicates that there is
1294:Generated_Source\PSoC4/cy_em_eeprom.c **** * no data to be written
1295:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1296:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1297:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetAddresses(uint32 *startAddr, 
1298:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 *endAddr, 
1299:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 *offset,
1300:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 rowNum,
1301:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 addr,
1302:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 len)
1303:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2298              		.loc 1 1303 0
 2299              		.cfi_startproc
 2300              		@ args = 8, pretend = 0, frame = 24
 2301              		@ frame_needed = 1, uses_anonymous_args = 0
 2302 0000 80B5     		push	{r7, lr}
 2303              		.cfi_def_cfa_offset 8
 2304              		.cfi_offset 7, -8
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 65


 2305              		.cfi_offset 14, -4
 2306 0002 86B0     		sub	sp, sp, #24
 2307              		.cfi_def_cfa_offset 32
 2308 0004 00AF     		add	r7, sp, #0
 2309              		.cfi_def_cfa_register 7
 2310 0006 F860     		str	r0, [r7, #12]
 2311 0008 B960     		str	r1, [r7, #8]
 2312 000a 7A60     		str	r2, [r7, #4]
 2313 000c 3B60     		str	r3, [r7]
1304:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 skip = 0u;
 2314              		.loc 1 1304 0
 2315 000e 0023     		movs	r3, #0
 2316 0010 7B61     		str	r3, [r7, #20]
1305:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1306:Generated_Source\PSoC4/cy_em_eeprom.c ****     *offset =0u;
 2317              		.loc 1 1306 0
 2318 0012 7B68     		ldr	r3, [r7, #4]
 2319 0014 0022     		movs	r2, #0
 2320 0016 1A60     		str	r2, [r3]
1307:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1308:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr, rowNum))
 2321              		.loc 1 1308 0
 2322 0018 3B68     		ldr	r3, [r7]
 2323 001a 9A01     		lsls	r2, r3, #6
 2324 001c 3B6A     		ldr	r3, [r7, #32]
 2325 001e 9A42     		cmp	r2, r3
 2326 0020 08D8     		bhi	.L118
 2327              		.loc 1 1308 0 is_stmt 0 discriminator 1
 2328 0022 3B68     		ldr	r3, [r7]
 2329 0024 0133     		adds	r3, r3, #1
 2330 0026 9B01     		lsls	r3, r3, #6
 2331 0028 5A1E     		subs	r2, r3, #1
 2332 002a 3B6A     		ldr	r3, [r7, #32]
 2333 002c 9A42     		cmp	r2, r3
 2334 002e 01D3     		bcc	.L118
 2335              		.loc 1 1308 0 discriminator 3
 2336 0030 0123     		movs	r3, #1
 2337 0032 00E0     		b	.L119
 2338              	.L118:
 2339              		.loc 1 1308 0 discriminator 4
 2340 0034 0023     		movs	r3, #0
 2341              	.L119:
 2342              		.loc 1 1308 0 discriminator 6
 2343 0036 002B     		cmp	r3, #0
 2344 0038 26D0     		beq	.L120
1309:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1310:Generated_Source\PSoC4/cy_em_eeprom.c ****         *startAddr = CY_EM_EEPROM_EEPROM_DATA_LEN + (addr % CY_EM_EEPROM_EEPROM_DATA_LEN);
 2345              		.loc 1 1310 0 is_stmt 1
 2346 003a 3B6A     		ldr	r3, [r7, #32]
 2347 003c 3F22     		movs	r2, #63
 2348 003e 1340     		ands	r3, r2
 2349 0040 4033     		adds	r3, r3, #64
 2350 0042 1A00     		movs	r2, r3
 2351 0044 FB68     		ldr	r3, [r7, #12]
 2352 0046 1A60     		str	r2, [r3]
1311:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1312:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr + len, rowNum))
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 66


 2353              		.loc 1 1312 0
 2354 0048 3A6A     		ldr	r2, [r7, #32]
 2355 004a 7B6A     		ldr	r3, [r7, #36]
 2356 004c D218     		adds	r2, r2, r3
 2357 004e 3B68     		ldr	r3, [r7]
 2358 0050 9B01     		lsls	r3, r3, #6
 2359 0052 9A42     		cmp	r2, r3
 2360 0054 0AD3     		bcc	.L121
 2361              		.loc 1 1312 0 is_stmt 0 discriminator 1
 2362 0056 3A6A     		ldr	r2, [r7, #32]
 2363 0058 7B6A     		ldr	r3, [r7, #36]
 2364 005a D218     		adds	r2, r2, r3
 2365 005c 3B68     		ldr	r3, [r7]
 2366 005e 0133     		adds	r3, r3, #1
 2367 0060 9B01     		lsls	r3, r3, #6
 2368 0062 013B     		subs	r3, r3, #1
 2369 0064 9A42     		cmp	r2, r3
 2370 0066 01D8     		bhi	.L121
 2371              		.loc 1 1312 0 discriminator 3
 2372 0068 0123     		movs	r3, #1
 2373 006a 00E0     		b	.L122
 2374              	.L121:
 2375              		.loc 1 1312 0 discriminator 4
 2376 006c 0023     		movs	r3, #0
 2377              	.L122:
 2378              		.loc 1 1312 0 discriminator 6
 2379 006e 002B     		cmp	r3, #0
 2380 0070 06D0     		beq	.L123
1313:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1314:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = *startAddr + len;
 2381              		.loc 1 1314 0 is_stmt 1
 2382 0072 FB68     		ldr	r3, [r7, #12]
 2383 0074 1A68     		ldr	r2, [r3]
 2384 0076 7B6A     		ldr	r3, [r7, #36]
 2385 0078 D218     		adds	r2, r2, r3
 2386 007a BB68     		ldr	r3, [r7, #8]
 2387 007c 1A60     		str	r2, [r3]
 2388 007e 35E0     		b	.L125
 2389              	.L123:
1315:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1316:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1317:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1318:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 2390              		.loc 1 1318 0
 2391 0080 BB68     		ldr	r3, [r7, #8]
 2392 0082 8022     		movs	r2, #128
 2393 0084 1A60     		str	r2, [r3]
 2394 0086 31E0     		b	.L125
 2395              	.L120:
1319:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1320:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1321:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
1322:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1323:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1324:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr + len, rowNum))
 2396              		.loc 1 1324 0
 2397 0088 3A6A     		ldr	r2, [r7, #32]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 67


 2398 008a 7B6A     		ldr	r3, [r7, #36]
 2399 008c D218     		adds	r2, r2, r3
 2400 008e 3B68     		ldr	r3, [r7]
 2401 0090 9B01     		lsls	r3, r3, #6
 2402 0092 9A42     		cmp	r2, r3
 2403 0094 0AD3     		bcc	.L126
 2404              		.loc 1 1324 0 is_stmt 0 discriminator 1
 2405 0096 3A6A     		ldr	r2, [r7, #32]
 2406 0098 7B6A     		ldr	r3, [r7, #36]
 2407 009a D218     		adds	r2, r2, r3
 2408 009c 3B68     		ldr	r3, [r7]
 2409 009e 0133     		adds	r3, r3, #1
 2410 00a0 9B01     		lsls	r3, r3, #6
 2411 00a2 013B     		subs	r3, r3, #1
 2412 00a4 9A42     		cmp	r2, r3
 2413 00a6 01D8     		bhi	.L126
 2414              		.loc 1 1324 0 discriminator 3
 2415 00a8 0123     		movs	r3, #1
 2416 00aa 00E0     		b	.L127
 2417              	.L126:
 2418              		.loc 1 1324 0 discriminator 4
 2419 00ac 0023     		movs	r3, #0
 2420              	.L127:
 2421              		.loc 1 1324 0 discriminator 6
 2422 00ae 002B     		cmp	r3, #0
 2423 00b0 19D0     		beq	.L128
1325:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1326:Generated_Source\PSoC4/cy_em_eeprom.c ****             *startAddr = CY_EM_EEPROM_EEPROM_DATA_LEN;
 2424              		.loc 1 1326 0 is_stmt 1
 2425 00b2 FB68     		ldr	r3, [r7, #12]
 2426 00b4 4022     		movs	r2, #64
 2427 00b6 1A60     		str	r2, [r3]
1327:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = (*startAddr + len) - (*startAddr - (addr % CY_EM_EEPROM_EEPROM_DATA_LEN));
 2428              		.loc 1 1327 0
 2429 00b8 FB68     		ldr	r3, [r7, #12]
 2430 00ba 1A68     		ldr	r2, [r3]
 2431 00bc 7B6A     		ldr	r3, [r7, #36]
 2432 00be D218     		adds	r2, r2, r3
 2433 00c0 3B6A     		ldr	r3, [r7, #32]
 2434 00c2 3F21     		movs	r1, #63
 2435 00c4 1940     		ands	r1, r3
 2436 00c6 FB68     		ldr	r3, [r7, #12]
 2437 00c8 1B68     		ldr	r3, [r3]
 2438 00ca CB1A     		subs	r3, r1, r3
 2439 00cc D218     		adds	r2, r2, r3
 2440 00ce BB68     		ldr	r3, [r7, #8]
 2441 00d0 1A60     		str	r2, [r3]
1328:Generated_Source\PSoC4/cy_em_eeprom.c ****             *offset = len - (*endAddr - *startAddr);
 2442              		.loc 1 1328 0
 2443 00d2 FB68     		ldr	r3, [r7, #12]
 2444 00d4 1A68     		ldr	r2, [r3]
 2445 00d6 BB68     		ldr	r3, [r7, #8]
 2446 00d8 1B68     		ldr	r3, [r3]
 2447 00da D21A     		subs	r2, r2, r3
 2448 00dc 7B6A     		ldr	r3, [r7, #36]
 2449 00de D218     		adds	r2, r2, r3
 2450 00e0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 68


 2451 00e2 1A60     		str	r2, [r3]
 2452 00e4 02E0     		b	.L125
 2453              	.L128:
1329:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1330:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1331:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1332:Generated_Source\PSoC4/cy_em_eeprom.c ****             skip++;
 2454              		.loc 1 1332 0
 2455 00e6 7B69     		ldr	r3, [r7, #20]
 2456 00e8 0133     		adds	r3, r3, #1
 2457 00ea 7B61     		str	r3, [r7, #20]
 2458              	.L125:
1333:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1334:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1335:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1336:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (skip);
 2459              		.loc 1 1336 0
 2460 00ec 7B69     		ldr	r3, [r7, #20]
1337:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2461              		.loc 1 1337 0
 2462 00ee 1800     		movs	r0, r3
 2463 00f0 BD46     		mov	sp, r7
 2464 00f2 06B0     		add	sp, sp, #24
 2465              		@ sp needed
 2466 00f4 80BD     		pop	{r7, pc}
 2467              		.cfi_endproc
 2468              	.LFE13:
 2469              		.size	GetAddresses, .-GetAddresses
 2470 00f6 C046     		.section	.text.FillChecksum,"ax",%progbits
 2471              		.align	2
 2472              		.code	16
 2473              		.thumb_func
 2474              		.type	FillChecksum, %function
 2475              	FillChecksum:
 2476              	.LFB14:
1338:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1339:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1340:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1341:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: FillChecksum
1342:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1343:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1344:Generated_Source\PSoC4/cy_em_eeprom.c **** * Performs calculation of the checksum on each row in the Em_EEPROM and fills
1345:Generated_Source\PSoC4/cy_em_eeprom.c **** * the Em_EEPROM headers checksum field with the calculated checksums.
1346:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1347:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
1348:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure.
1349:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1350:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1351:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1352:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1353:Generated_Source\PSoC4/cy_em_eeprom.c **** * \theory 
1354:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if redundant copy option is used the Em_EEPROM would return bad 
1355:Generated_Source\PSoC4/cy_em_eeprom.c **** * checksum while trying to read the EEPROM rows which were not yet written by 
1356:Generated_Source\PSoC4/cy_em_eeprom.c **** * the user. E.g. any read after device reprogramming without previous Write() 
1357:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation to the EEPROM would fail. This would happen because the Em_EEPROM 
1358:Generated_Source\PSoC4/cy_em_eeprom.c **** * headers checksum field values (which is zero at the moment) would not be 
1359:Generated_Source\PSoC4/cy_em_eeprom.c **** * equal to the actual data checksum. This function allows to avoid read failure
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 69


1360:Generated_Source\PSoC4/cy_em_eeprom.c **** * after device reprogramming. 
1361:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1362:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
1363:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
1364:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
1365:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
1366:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1367:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1368:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t FillChecksum(cy_stc_eeprom_context_t * context)
1369:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2477              		.loc 1 1369 0
 2478              		.cfi_startproc
 2479              		@ args = 0, pretend = 0, frame = 160
 2480              		@ frame_needed = 1, uses_anonymous_args = 0
 2481 0000 90B5     		push	{r4, r7, lr}
 2482              		.cfi_def_cfa_offset 12
 2483              		.cfi_offset 4, -12
 2484              		.cfi_offset 7, -8
 2485              		.cfi_offset 14, -4
 2486 0002 A9B0     		sub	sp, sp, #164
 2487              		.cfi_def_cfa_offset 176
 2488 0004 00AF     		add	r7, sp, #0
 2489              		.cfi_def_cfa_register 7
 2490 0006 7860     		str	r0, [r7, #4]
1370:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
1371:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 rdAddr;
1372:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
1373:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 wrAddr = context->lastWrRowAddr;
 2491              		.loc 1 1373 0
 2492 0008 7B68     		ldr	r3, [r7, #4]
 2493 000a 9B68     		ldr	r3, [r3, #8]
 2494 000c BB60     		str	r3, [r7, #8]
1374:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 tmpRowAddr;
1375:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Get the sequence number (number of writes) */
1376:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(wrAddr);
 2495              		.loc 1 1376 0
 2496 000e BB68     		ldr	r3, [r7, #8]
 2497 0010 1B68     		ldr	r3, [r3]
 2498 0012 9822     		movs	r2, #152
 2499 0014 BA18     		adds	r2, r7, r2
 2500 0016 1360     		str	r3, [r2]
1377:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 2501              		.loc 1 1377 0
 2502 0018 9723     		movs	r3, #151
 2503 001a FB18     		adds	r3, r7, r3
 2504 001c 0122     		movs	r2, #1
 2505 001e 1A70     		strb	r2, [r3]
1378:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1379:Generated_Source\PSoC4/cy_em_eeprom.c ****     for(i = 0u; i < (context->numberOfRows * context->wearLevelingFactor); i++)
 2506              		.loc 1 1379 0
 2507 0020 0023     		movs	r3, #0
 2508 0022 9C22     		movs	r2, #156
 2509 0024 BA18     		adds	r2, r7, r2
 2510 0026 1360     		str	r3, [r2]
 2511 0028 53E0     		b	.L131
 2512              	.L132:
1380:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 70


1381:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Copy the EEPROM row from Flash to RAM */
1382:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)memcpy((void *)&writeRamBuffer[0u], (void *)(wrAddr), CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 2513              		.loc 1 1382 0 discriminator 3
 2514 002a BB68     		ldr	r3, [r7, #8]
 2515 002c 1900     		movs	r1, r3
 2516 002e 0C23     		movs	r3, #12
 2517 0030 FB18     		adds	r3, r7, r3
 2518 0032 8022     		movs	r2, #128
 2519 0034 1800     		movs	r0, r3
 2520 0036 FFF7FEFF 		bl	memcpy
1383:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1384:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Increment the sequence number */
1385:Generated_Source\PSoC4/cy_em_eeprom.c ****         seqNum++;
 2521              		.loc 1 1385 0 discriminator 3
 2522 003a 9823     		movs	r3, #152
 2523 003c FB18     		adds	r3, r7, r3
 2524 003e 1B68     		ldr	r3, [r3]
 2525 0040 0133     		adds	r3, r3, #1
 2526 0042 9822     		movs	r2, #152
 2527 0044 BA18     		adds	r2, r7, r2
 2528 0046 1360     		str	r3, [r2]
1386:Generated_Source\PSoC4/cy_em_eeprom.c ****         writeRamBuffer[CY_EM_EEPROM_HEADER_SEQ_NUM_OFFSET_U32] = seqNum;
 2529              		.loc 1 1386 0 discriminator 3
 2530 0048 0C23     		movs	r3, #12
 2531 004a FB18     		adds	r3, r7, r3
 2532 004c 9822     		movs	r2, #152
 2533 004e BA18     		adds	r2, r7, r2
 2534 0050 1268     		ldr	r2, [r2]
 2535 0052 1A60     		str	r2, [r3]
1387:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1388:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Calculate and fill the checksum to the Em_EEPROM header */
1389:Generated_Source\PSoC4/cy_em_eeprom.c ****         writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
1390:Generated_Source\PSoC4/cy_em_eeprom.c ****                     CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 2536              		.loc 1 1390 0 discriminator 3
 2537 0054 0C23     		movs	r3, #12
 2538 0056 FB18     		adds	r3, r7, r3
 2539 0058 4033     		adds	r3, r3, #64
 2540 005a 4021     		movs	r1, #64
 2541 005c 1800     		movs	r0, r3
 2542 005e FFF7FEFF 		bl	CalcChecksum
 2543 0062 0300     		movs	r3, r0
1389:Generated_Source\PSoC4/cy_em_eeprom.c ****                     CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 2544              		.loc 1 1389 0 discriminator 3
 2545 0064 1A00     		movs	r2, r3
 2546 0066 0C23     		movs	r3, #12
 2547 0068 FB18     		adds	r3, r7, r3
 2548 006a DA63     		str	r2, [r3, #60]
1391:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               CY_EM_EEPROM_EEPROM_DATA_LEN);
1392:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1393:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Write the data to the specified flash row */
1394:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(wrAddr, writeRamBuffer, context);
 2549              		.loc 1 1394 0 discriminator 3
 2550 006c BB68     		ldr	r3, [r7, #8]
 2551 006e 9722     		movs	r2, #151
 2552 0070 BC18     		adds	r4, r7, r2
 2553 0072 7A68     		ldr	r2, [r7, #4]
 2554 0074 0C21     		movs	r1, #12
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 71


 2555 0076 7918     		adds	r1, r7, r1
 2556 0078 1800     		movs	r0, r3
 2557 007a FFF7FEFF 		bl	WriteRow
 2558 007e 0300     		movs	r3, r0
 2559 0080 2370     		strb	r3, [r4]
1395:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1396:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Update the row address to point to the relevant row in the redundant 
1397:Generated_Source\PSoC4/cy_em_eeprom.c ****         * EEPROM's copy.
1398:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
1399:Generated_Source\PSoC4/cy_em_eeprom.c ****         tmpRowAddr = (wrAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2560              		.loc 1 1399 0 discriminator 3
 2561 0082 BA68     		ldr	r2, [r7, #8]
 2562 0084 7B68     		ldr	r3, [r7, #4]
 2563 0086 9B69     		ldr	r3, [r3, #24]
 2564 0088 D21A     		subs	r2, r2, r3
 2565 008a 7B68     		ldr	r3, [r7, #4]
 2566 008c 1B68     		ldr	r3, [r3]
 2567 008e D318     		adds	r3, r2, r3
 2568 0090 9022     		movs	r2, #144
 2569 0092 BA18     		adds	r2, r7, r2
 2570 0094 1360     		str	r3, [r2]
1400:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1401:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Write the data to the specified flash row */
1402:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(tmpRowAddr, writeRamBuffer, context);
 2571              		.loc 1 1402 0 discriminator 3
 2572 0096 9723     		movs	r3, #151
 2573 0098 FC18     		adds	r4, r7, r3
 2574 009a 7A68     		ldr	r2, [r7, #4]
 2575 009c 0C23     		movs	r3, #12
 2576 009e F918     		adds	r1, r7, r3
 2577 00a0 9023     		movs	r3, #144
 2578 00a2 FB18     		adds	r3, r7, r3
 2579 00a4 1B68     		ldr	r3, [r3]
 2580 00a6 1800     		movs	r0, r3
 2581 00a8 FFF7FEFF 		bl	WriteRow
 2582 00ac 0300     		movs	r3, r0
 2583 00ae 2370     		strb	r3, [r4]
1403:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1404:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Get the address of the next row to be written. 
1405:Generated_Source\PSoC4/cy_em_eeprom.c ****         * "rdAddr" is not used in this function but provided to prevent NULL 
1406:Generated_Source\PSoC4/cy_em_eeprom.c ****         * pointer exception in GetNextRowToWrite().
1407:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
1408:Generated_Source\PSoC4/cy_em_eeprom.c ****         GetNextRowToWrite(seqNum, &wrAddr, &rdAddr, context);
 2584              		.loc 1 1408 0 discriminator 3
 2585 00b0 7B68     		ldr	r3, [r7, #4]
 2586 00b2 8C22     		movs	r2, #140
 2587 00b4 BA18     		adds	r2, r7, r2
 2588 00b6 0821     		movs	r1, #8
 2589 00b8 7918     		adds	r1, r7, r1
 2590 00ba 9820     		movs	r0, #152
 2591 00bc 3818     		adds	r0, r7, r0
 2592 00be 0068     		ldr	r0, [r0]
 2593 00c0 FFF7FEFF 		bl	GetNextRowToWrite
1379:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 2594              		.loc 1 1379 0 discriminator 3
 2595 00c4 9C23     		movs	r3, #156
 2596 00c6 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 72


 2597 00c8 1B68     		ldr	r3, [r3]
 2598 00ca 0133     		adds	r3, r3, #1
 2599 00cc 9C22     		movs	r2, #156
 2600 00ce BA18     		adds	r2, r7, r2
 2601 00d0 1360     		str	r3, [r2]
 2602              	.L131:
1379:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 2603              		.loc 1 1379 0 is_stmt 0 discriminator 1
 2604 00d2 7B68     		ldr	r3, [r7, #4]
 2605 00d4 5A68     		ldr	r2, [r3, #4]
 2606 00d6 7B68     		ldr	r3, [r7, #4]
 2607 00d8 1B69     		ldr	r3, [r3, #16]
 2608 00da 5A43     		muls	r2, r3
 2609 00dc 9C23     		movs	r3, #156
 2610 00de FB18     		adds	r3, r7, r3
 2611 00e0 1B68     		ldr	r3, [r3]
 2612 00e2 9A42     		cmp	r2, r3
 2613 00e4 A1D8     		bhi	.L132
1409:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1410:Generated_Source\PSoC4/cy_em_eeprom.c ****     
1411:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 2614              		.loc 1 1411 0 is_stmt 1
 2615 00e6 9723     		movs	r3, #151
 2616 00e8 FB18     		adds	r3, r7, r3
 2617 00ea 1B78     		ldrb	r3, [r3]
1412:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2618              		.loc 1 1412 0
 2619 00ec 1800     		movs	r0, r3
 2620 00ee BD46     		mov	sp, r7
 2621 00f0 29B0     		add	sp, sp, #164
 2622              		@ sp needed
 2623 00f2 90BD     		pop	{r4, r7, pc}
 2624              		.cfi_endproc
 2625              	.LFE14:
 2626              		.size	FillChecksum, .-FillChecksum
 2627              		.text
 2628              	.Letext0:
 2629              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2630              		.file 3 "Generated_Source\\PSoC4\\cy_em_eeprom.h"
 2631              		.section	.debug_info,"",%progbits
 2632              	.Ldebug_info0:
 2633 0000 610A0000 		.4byte	0xa61
 2634 0004 0400     		.2byte	0x4
 2635 0006 00000000 		.4byte	.Ldebug_abbrev0
 2636 000a 04       		.byte	0x4
 2637 000b 01       		.uleb128 0x1
 2638 000c B2020000 		.4byte	.LASF100
 2639 0010 0C       		.byte	0xc
 2640 0011 BB000000 		.4byte	.LASF101
 2641 0015 F3010000 		.4byte	.LASF102
 2642 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2643 001d 00000000 		.4byte	0
 2644 0021 00000000 		.4byte	.Ldebug_line0
 2645 0025 02       		.uleb128 0x2
 2646 0026 01       		.byte	0x1
 2647 0027 06       		.byte	0x6
 2648 0028 93000000 		.4byte	.LASF0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 73


 2649 002c 02       		.uleb128 0x2
 2650 002d 01       		.byte	0x1
 2651 002e 08       		.byte	0x8
 2652 002f 5E040000 		.4byte	.LASF1
 2653 0033 02       		.uleb128 0x2
 2654 0034 02       		.byte	0x2
 2655 0035 05       		.byte	0x5
 2656 0036 74040000 		.4byte	.LASF2
 2657 003a 02       		.uleb128 0x2
 2658 003b 02       		.byte	0x2
 2659 003c 07       		.byte	0x7
 2660 003d 50020000 		.4byte	.LASF3
 2661 0041 02       		.uleb128 0x2
 2662 0042 04       		.byte	0x4
 2663 0043 05       		.byte	0x5
 2664 0044 10010000 		.4byte	.LASF4
 2665 0048 02       		.uleb128 0x2
 2666 0049 04       		.byte	0x4
 2667 004a 07       		.byte	0x7
 2668 004b D4010000 		.4byte	.LASF5
 2669 004f 02       		.uleb128 0x2
 2670 0050 08       		.byte	0x8
 2671 0051 05       		.byte	0x5
 2672 0052 85000000 		.4byte	.LASF6
 2673 0056 02       		.uleb128 0x2
 2674 0057 08       		.byte	0x8
 2675 0058 07       		.byte	0x7
 2676 0059 5E000000 		.4byte	.LASF7
 2677 005d 03       		.uleb128 0x3
 2678 005e 04       		.byte	0x4
 2679 005f 05       		.byte	0x5
 2680 0060 696E7400 		.ascii	"int\000"
 2681 0064 02       		.uleb128 0x2
 2682 0065 04       		.byte	0x4
 2683 0066 07       		.byte	0x7
 2684 0067 BE010000 		.4byte	.LASF8
 2685 006b 04       		.uleb128 0x4
 2686 006c 2C010000 		.4byte	.LASF9
 2687 0070 02       		.byte	0x2
 2688 0071 A1       		.byte	0xa1
 2689 0072 2C000000 		.4byte	0x2c
 2690 0076 04       		.uleb128 0x4
 2691 0077 00000000 		.4byte	.LASF10
 2692 007b 02       		.byte	0x2
 2693 007c A2       		.byte	0xa2
 2694 007d 3A000000 		.4byte	0x3a
 2695 0081 04       		.uleb128 0x4
 2696 0082 46010000 		.4byte	.LASF11
 2697 0086 02       		.byte	0x2
 2698 0087 A3       		.byte	0xa3
 2699 0088 48000000 		.4byte	0x48
 2700 008c 02       		.uleb128 0x2
 2701 008d 04       		.byte	0x4
 2702 008e 04       		.byte	0x4
 2703 008f 30040000 		.4byte	.LASF12
 2704 0093 02       		.uleb128 0x2
 2705 0094 08       		.byte	0x8
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 74


 2706 0095 04       		.byte	0x4
 2707 0096 32010000 		.4byte	.LASF13
 2708 009a 02       		.uleb128 0x2
 2709 009b 01       		.byte	0x1
 2710 009c 08       		.byte	0x8
 2711 009d E7040000 		.4byte	.LASF14
 2712 00a1 05       		.uleb128 0x5
 2713 00a2 D0050000 		.4byte	.LASF15
 2714 00a6 02       		.byte	0x2
 2715 00a7 4301     		.2byte	0x143
 2716 00a9 48000000 		.4byte	0x48
 2717 00ad 02       		.uleb128 0x2
 2718 00ae 08       		.byte	0x8
 2719 00af 04       		.byte	0x4
 2720 00b0 A7030000 		.4byte	.LASF16
 2721 00b4 02       		.uleb128 0x2
 2722 00b5 04       		.byte	0x4
 2723 00b6 07       		.byte	0x7
 2724 00b7 9E030000 		.4byte	.LASF17
 2725 00bb 06       		.uleb128 0x6
 2726 00bc 04       		.byte	0x4
 2727 00bd 07       		.uleb128 0x7
 2728 00be 10       		.byte	0x10
 2729 00bf 03       		.byte	0x3
 2730 00c0 FB       		.byte	0xfb
 2731 00c1 06010000 		.4byte	0x106
 2732 00c5 08       		.uleb128 0x8
 2733 00c6 7A000000 		.4byte	.LASF18
 2734 00ca 03       		.byte	0x3
 2735 00cb FE       		.byte	0xfe
 2736 00cc 81000000 		.4byte	0x81
 2737 00d0 00       		.byte	0
 2738 00d1 09       		.uleb128 0x9
 2739 00d2 64050000 		.4byte	.LASF19
 2740 00d6 03       		.byte	0x3
 2741 00d7 0301     		.2byte	0x103
 2742 00d9 81000000 		.4byte	0x81
 2743 00dd 04       		.byte	0x4
 2744 00de 09       		.uleb128 0x9
 2745 00df A7010000 		.4byte	.LASF20
 2746 00e3 03       		.byte	0x3
 2747 00e4 0601     		.2byte	0x106
 2748 00e6 6B000000 		.4byte	0x6b
 2749 00ea 08       		.byte	0x8
 2750 00eb 09       		.uleb128 0x9
 2751 00ec B0050000 		.4byte	.LASF21
 2752 00f0 03       		.byte	0x3
 2753 00f1 0B01     		.2byte	0x10b
 2754 00f3 6B000000 		.4byte	0x6b
 2755 00f7 09       		.byte	0x9
 2756 00f8 09       		.uleb128 0x9
 2757 00f9 19010000 		.4byte	.LASF22
 2758 00fd 03       		.byte	0x3
 2759 00fe 0E01     		.2byte	0x10e
 2760 0100 81000000 		.4byte	0x81
 2761 0104 0C       		.byte	0xc
 2762 0105 00       		.byte	0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 75


 2763 0106 05       		.uleb128 0x5
 2764 0107 46050000 		.4byte	.LASF23
 2765 010b 03       		.byte	0x3
 2766 010c 0F01     		.2byte	0x10f
 2767 010e BD000000 		.4byte	0xbd
 2768 0112 0A       		.uleb128 0xa
 2769 0113 1C       		.byte	0x1c
 2770 0114 03       		.byte	0x3
 2771 0115 1601     		.2byte	0x116
 2772 0117 84010000 		.4byte	0x184
 2773 011b 09       		.uleb128 0x9
 2774 011c 54040000 		.4byte	.LASF24
 2775 0120 03       		.byte	0x3
 2776 0121 1B01     		.2byte	0x11b
 2777 0123 81000000 		.4byte	0x81
 2778 0127 00       		.byte	0
 2779 0128 09       		.uleb128 0x9
 2780 0129 47000000 		.4byte	.LASF25
 2781 012d 03       		.byte	0x3
 2782 012e 2001     		.2byte	0x120
 2783 0130 81000000 		.4byte	0x81
 2784 0134 04       		.byte	0x4
 2785 0135 09       		.uleb128 0x9
 2786 0136 20050000 		.4byte	.LASF26
 2787 013a 03       		.byte	0x3
 2788 013b 2301     		.2byte	0x123
 2789 013d 81000000 		.4byte	0x81
 2790 0141 08       		.byte	0x8
 2791 0142 09       		.uleb128 0x9
 2792 0143 7A000000 		.4byte	.LASF18
 2793 0147 03       		.byte	0x3
 2794 0148 2601     		.2byte	0x126
 2795 014a 81000000 		.4byte	0x81
 2796 014e 0C       		.byte	0xc
 2797 014f 09       		.uleb128 0x9
 2798 0150 64050000 		.4byte	.LASF19
 2799 0154 03       		.byte	0x3
 2800 0155 2B01     		.2byte	0x12b
 2801 0157 81000000 		.4byte	0x81
 2802 015b 10       		.byte	0x10
 2803 015c 09       		.uleb128 0x9
 2804 015d A7010000 		.4byte	.LASF20
 2805 0161 03       		.byte	0x3
 2806 0162 2E01     		.2byte	0x12e
 2807 0164 6B000000 		.4byte	0x6b
 2808 0168 14       		.byte	0x14
 2809 0169 09       		.uleb128 0x9
 2810 016a B0050000 		.4byte	.LASF21
 2811 016e 03       		.byte	0x3
 2812 016f 3301     		.2byte	0x133
 2813 0171 6B000000 		.4byte	0x6b
 2814 0175 15       		.byte	0x15
 2815 0176 09       		.uleb128 0x9
 2816 0177 19010000 		.4byte	.LASF22
 2817 017b 03       		.byte	0x3
 2818 017c 3601     		.2byte	0x136
 2819 017e 81000000 		.4byte	0x81
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 76


 2820 0182 18       		.byte	0x18
 2821 0183 00       		.byte	0
 2822 0184 05       		.uleb128 0x5
 2823 0185 E0030000 		.4byte	.LASF27
 2824 0189 03       		.byte	0x3
 2825 018a 3701     		.2byte	0x137
 2826 018c 12010000 		.4byte	0x112
 2827 0190 0B       		.uleb128 0xb
 2828 0191 01       		.byte	0x1
 2829 0192 2C000000 		.4byte	0x2c
 2830 0196 03       		.byte	0x3
 2831 0197 5401     		.2byte	0x154
 2832 0199 BC010000 		.4byte	0x1bc
 2833 019d 0C       		.uleb128 0xc
 2834 019e 9B050000 		.4byte	.LASF28
 2835 01a2 00       		.byte	0
 2836 01a3 0C       		.uleb128 0xc
 2837 01a4 6D030000 		.4byte	.LASF29
 2838 01a8 01       		.byte	0x1
 2839 01a9 0C       		.uleb128 0xc
 2840 01aa 84030000 		.4byte	.LASF30
 2841 01ae 02       		.byte	0x2
 2842 01af 0C       		.uleb128 0xc
 2843 01b0 3E040000 		.4byte	.LASF31
 2844 01b4 03       		.byte	0x3
 2845 01b5 0C       		.uleb128 0xc
 2846 01b6 E1000000 		.4byte	.LASF32
 2847 01ba 04       		.byte	0x4
 2848 01bb 00       		.byte	0
 2849 01bc 05       		.uleb128 0x5
 2850 01bd 1A000000 		.4byte	.LASF33
 2851 01c1 03       		.byte	0x3
 2852 01c2 5A01     		.2byte	0x15a
 2853 01c4 90010000 		.4byte	0x190
 2854 01c8 0D       		.uleb128 0xd
 2855 01c9 AD040000 		.4byte	.LASF36
 2856 01cd 01       		.byte	0x1
 2857 01ce 5F       		.byte	0x5f
 2858 01cf BC010000 		.4byte	0x1bc
 2859 01d3 00000000 		.4byte	.LFB0
 2860 01d7 F6000000 		.4byte	.LFE0-.LFB0
 2861 01db 01       		.uleb128 0x1
 2862 01dc 9C       		.byte	0x9c
 2863 01dd 0C020000 		.4byte	0x20c
 2864 01e1 0E       		.uleb128 0xe
 2865 01e2 EC040000 		.4byte	.LASF34
 2866 01e6 01       		.byte	0x1
 2867 01e7 5F       		.byte	0x5f
 2868 01e8 0C020000 		.4byte	0x20c
 2869 01ec 02       		.uleb128 0x2
 2870 01ed 91       		.byte	0x91
 2871 01ee 64       		.sleb128 -28
 2872 01ef 0E       		.uleb128 0xe
 2873 01f0 18050000 		.4byte	.LASF35
 2874 01f4 01       		.byte	0x1
 2875 01f5 5F       		.byte	0x5f
 2876 01f6 12020000 		.4byte	0x212
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 77


 2877 01fa 02       		.uleb128 0x2
 2878 01fb 91       		.byte	0x91
 2879 01fc 60       		.sleb128 -32
 2880 01fd 0F       		.uleb128 0xf
 2881 01fe 72657400 		.ascii	"ret\000"
 2882 0202 01       		.byte	0x1
 2883 0203 61       		.byte	0x61
 2884 0204 BC010000 		.4byte	0x1bc
 2885 0208 02       		.uleb128 0x2
 2886 0209 91       		.byte	0x91
 2887 020a 6F       		.sleb128 -17
 2888 020b 00       		.byte	0
 2889 020c 10       		.uleb128 0x10
 2890 020d 04       		.byte	0x4
 2891 020e 06010000 		.4byte	0x106
 2892 0212 10       		.uleb128 0x10
 2893 0213 04       		.byte	0x4
 2894 0214 84010000 		.4byte	0x184
 2895 0218 0D       		.uleb128 0xd
 2896 0219 52030000 		.4byte	.LASF37
 2897 021d 01       		.byte	0x1
 2898 021e A9       		.byte	0xa9
 2899 021f BC010000 		.4byte	0x1bc
 2900 0223 00000000 		.4byte	.LFB1
 2901 0227 2A030000 		.4byte	.LFE1-.LFB1
 2902 022b 01       		.uleb128 0x1
 2903 022c 9C       		.byte	0x9c
 2904 022d BC030000 		.4byte	0x3bc
 2905 0231 0E       		.uleb128 0xe
 2906 0232 75000000 		.4byte	.LASF38
 2907 0236 01       		.byte	0x1
 2908 0237 A9       		.byte	0xa9
 2909 0238 81000000 		.4byte	0x81
 2910 023c 03       		.uleb128 0x3
 2911 023d 91       		.byte	0x91
 2912 023e 9C7F     		.sleb128 -100
 2913 0240 0E       		.uleb128 0xe
 2914 0241 92020000 		.4byte	.LASF39
 2915 0245 01       		.byte	0x1
 2916 0246 AA       		.byte	0xaa
 2917 0247 BB000000 		.4byte	0xbb
 2918 024b 03       		.uleb128 0x3
 2919 024c 91       		.byte	0x91
 2920 024d 987F     		.sleb128 -104
 2921 024f 0E       		.uleb128 0xe
 2922 0250 4B020000 		.4byte	.LASF40
 2923 0254 01       		.byte	0x1
 2924 0255 AB       		.byte	0xab
 2925 0256 81000000 		.4byte	0x81
 2926 025a 03       		.uleb128 0x3
 2927 025b 91       		.byte	0x91
 2928 025c 947F     		.sleb128 -108
 2929 025e 0E       		.uleb128 0xe
 2930 025f 18050000 		.4byte	.LASF35
 2931 0263 01       		.byte	0x1
 2932 0264 AC       		.byte	0xac
 2933 0265 12020000 		.4byte	0x212
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 78


 2934 0269 03       		.uleb128 0x3
 2935 026a 91       		.byte	0x91
 2936 026b 907F     		.sleb128 -112
 2937 026d 0F       		.uleb128 0xf
 2938 026e 72657400 		.ascii	"ret\000"
 2939 0272 01       		.byte	0x1
 2940 0273 AE       		.byte	0xae
 2941 0274 BC010000 		.4byte	0x1bc
 2942 0278 02       		.uleb128 0x2
 2943 0279 91       		.byte	0x91
 2944 027a 6F       		.sleb128 -17
 2945 027b 0F       		.uleb128 0xf
 2946 027c 6900     		.ascii	"i\000"
 2947 027e 01       		.byte	0x1
 2948 027f AF       		.byte	0xaf
 2949 0280 81000000 		.4byte	0x81
 2950 0284 02       		.uleb128 0x2
 2951 0285 91       		.byte	0x91
 2952 0286 68       		.sleb128 -24
 2953 0287 11       		.uleb128 0x11
 2954 0288 F3040000 		.4byte	.LASF41
 2955 028c 01       		.byte	0x1
 2956 028d B0       		.byte	0xb0
 2957 028e 81000000 		.4byte	0x81
 2958 0292 02       		.uleb128 0x2
 2959 0293 91       		.byte	0x91
 2960 0294 64       		.sleb128 -28
 2961 0295 11       		.uleb128 0x11
 2962 0296 40030000 		.4byte	.LASF42
 2963 029a 01       		.byte	0x1
 2964 029b B1       		.byte	0xb1
 2965 029c 81000000 		.4byte	0x81
 2966 02a0 03       		.uleb128 0x3
 2967 02a1 91       		.byte	0x91
 2968 02a2 BC7F     		.sleb128 -68
 2969 02a4 11       		.uleb128 0x11
 2970 02a5 39050000 		.4byte	.LASF43
 2971 02a9 01       		.byte	0x1
 2972 02aa B2       		.byte	0xb2
 2973 02ab 81000000 		.4byte	0x81
 2974 02af 03       		.uleb128 0x3
 2975 02b0 91       		.byte	0x91
 2976 02b1 B07F     		.sleb128 -80
 2977 02b3 11       		.uleb128 0x11
 2978 02b4 A5020000 		.4byte	.LASF44
 2979 02b8 01       		.byte	0x1
 2980 02b9 B3       		.byte	0xb3
 2981 02ba 81000000 		.4byte	0x81
 2982 02be 02       		.uleb128 0x2
 2983 02bf 91       		.byte	0x91
 2984 02c0 60       		.sleb128 -32
 2985 02c1 11       		.uleb128 0x11
 2986 02c2 4D010000 		.4byte	.LASF45
 2987 02c6 01       		.byte	0x1
 2988 02c7 B4       		.byte	0xb4
 2989 02c8 81000000 		.4byte	0x81
 2990 02cc 03       		.uleb128 0x3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 79


 2991 02cd 91       		.byte	0x91
 2992 02ce B87F     		.sleb128 -72
 2993 02d0 11       		.uleb128 0x11
 2994 02d1 BE050000 		.4byte	.LASF46
 2995 02d5 01       		.byte	0x1
 2996 02d6 B5       		.byte	0xb5
 2997 02d7 81000000 		.4byte	0x81
 2998 02db 02       		.uleb128 0x2
 2999 02dc 91       		.byte	0x91
 3000 02dd 5C       		.sleb128 -36
 3001 02de 11       		.uleb128 0x11
 3002 02df 97040000 		.4byte	.LASF47
 3003 02e3 01       		.byte	0x1
 3004 02e4 B6       		.byte	0xb6
 3005 02e5 81000000 		.4byte	0x81
 3006 02e9 02       		.uleb128 0x2
 3007 02ea 91       		.byte	0x91
 3008 02eb 58       		.sleb128 -40
 3009 02ec 11       		.uleb128 0x11
 3010 02ed 0A060000 		.4byte	.LASF48
 3011 02f1 01       		.byte	0x1
 3012 02f2 B7       		.byte	0xb7
 3013 02f3 81000000 		.4byte	0x81
 3014 02f7 02       		.uleb128 0x2
 3015 02f8 91       		.byte	0x91
 3016 02f9 54       		.sleb128 -44
 3017 02fa 12       		.uleb128 0x12
 3018 02fb 42000000 		.4byte	.LBB2
 3019 02ff DA020000 		.4byte	.LBE2-.LBB2
 3020 0303 11       		.uleb128 0x11
 3021 0304 77050000 		.4byte	.LASF49
 3022 0308 01       		.byte	0x1
 3023 0309 BC       		.byte	0xbc
 3024 030a 81000000 		.4byte	0x81
 3025 030e 02       		.uleb128 0x2
 3026 030f 91       		.byte	0x91
 3027 0310 50       		.sleb128 -48
 3028 0311 11       		.uleb128 0x11
 3029 0312 5D050000 		.4byte	.LASF50
 3030 0316 01       		.byte	0x1
 3031 0317 BD       		.byte	0xbd
 3032 0318 81000000 		.4byte	0x81
 3033 031c 02       		.uleb128 0x2
 3034 031d 91       		.byte	0x91
 3035 031e 4C       		.sleb128 -52
 3036 031f 11       		.uleb128 0x11
 3037 0320 D9030000 		.4byte	.LASF51
 3038 0324 01       		.byte	0x1
 3039 0325 BF       		.byte	0xbf
 3040 0326 81000000 		.4byte	0x81
 3041 032a 02       		.uleb128 0x2
 3042 032b 91       		.byte	0x91
 3043 032c 44       		.sleb128 -60
 3044 032d 11       		.uleb128 0x11
 3045 032e 70010000 		.4byte	.LASF52
 3046 0332 01       		.byte	0x1
 3047 0333 C0       		.byte	0xc0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 80


 3048 0334 81000000 		.4byte	0x81
 3049 0338 02       		.uleb128 0x2
 3050 0339 91       		.byte	0x91
 3051 033a 48       		.sleb128 -56
 3052 033b 11       		.uleb128 0x11
 3053 033c EE050000 		.4byte	.LASF53
 3054 0340 01       		.byte	0x1
 3055 0341 C5       		.byte	0xc5
 3056 0342 81000000 		.4byte	0x81
 3057 0346 02       		.uleb128 0x2
 3058 0347 91       		.byte	0x91
 3059 0348 40       		.sleb128 -64
 3060 0349 13       		.uleb128 0x13
 3061 034a EC000000 		.4byte	.LBB3
 3062 034e 26000000 		.4byte	.LBE3-.LBB3
 3063 0352 66030000 		.4byte	0x366
 3064 0356 11       		.uleb128 0x11
 3065 0357 87010000 		.4byte	.LASF54
 3066 035b 01       		.byte	0x1
 3067 035c E2       		.byte	0xe2
 3068 035d 81000000 		.4byte	0x81
 3069 0361 03       		.uleb128 0x3
 3070 0362 91       		.byte	0x91
 3071 0363 B47F     		.sleb128 -76
 3072 0365 00       		.byte	0
 3073 0366 12       		.uleb128 0x12
 3074 0367 3A020000 		.4byte	.LBB4
 3075 036b D4000000 		.4byte	.LBE4-.LBB4
 3076 036f 14       		.uleb128 0x14
 3077 0370 02050000 		.4byte	.LASF55
 3078 0374 01       		.byte	0x1
 3079 0375 3B01     		.2byte	0x13b
 3080 0377 81000000 		.4byte	0x81
 3081 037b 03       		.uleb128 0x3
 3082 037c 91       		.byte	0x91
 3083 037d AC7F     		.sleb128 -84
 3084 037f 14       		.uleb128 0x14
 3085 0380 36040000 		.4byte	.LASF56
 3086 0384 01       		.byte	0x1
 3087 0385 3C01     		.2byte	0x13c
 3088 0387 81000000 		.4byte	0x81
 3089 038b 03       		.uleb128 0x3
 3090 038c 91       		.byte	0x91
 3091 038d A87F     		.sleb128 -88
 3092 038f 12       		.uleb128 0x12
 3093 0390 78020000 		.4byte	.LBB5
 3094 0394 96000000 		.4byte	.LBE5-.LBB5
 3095 0398 14       		.uleb128 0x14
 3096 0399 41020000 		.4byte	.LASF57
 3097 039d 01       		.byte	0x1
 3098 039e 4101     		.2byte	0x141
 3099 03a0 81000000 		.4byte	0x81
 3100 03a4 03       		.uleb128 0x3
 3101 03a5 91       		.byte	0x91
 3102 03a6 A47F     		.sleb128 -92
 3103 03a8 14       		.uleb128 0x14
 3104 03a9 7E050000 		.4byte	.LASF58
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 81


 3105 03ad 01       		.byte	0x1
 3106 03ae 4201     		.2byte	0x142
 3107 03b0 81000000 		.4byte	0x81
 3108 03b4 03       		.uleb128 0x3
 3109 03b5 91       		.byte	0x91
 3110 03b6 A07F     		.sleb128 -96
 3111 03b8 00       		.byte	0
 3112 03b9 00       		.byte	0
 3113 03ba 00       		.byte	0
 3114 03bb 00       		.byte	0
 3115 03bc 15       		.uleb128 0x15
 3116 03bd C6030000 		.4byte	.LASF59
 3117 03c1 01       		.byte	0x1
 3118 03c2 9B01     		.2byte	0x19b
 3119 03c4 BC010000 		.4byte	0x1bc
 3120 03c8 00000000 		.4byte	.LFB2
 3121 03cc 32030000 		.4byte	.LFE2-.LFB2
 3122 03d0 01       		.uleb128 0x1
 3123 03d1 9C       		.byte	0x9c
 3124 03d2 34050000 		.4byte	0x534
 3125 03d6 16       		.uleb128 0x16
 3126 03d7 75000000 		.4byte	.LASF38
 3127 03db 01       		.byte	0x1
 3128 03dc 9B01     		.2byte	0x19b
 3129 03de 81000000 		.4byte	0x81
 3130 03e2 03       		.uleb128 0x3
 3131 03e3 91       		.byte	0x91
 3132 03e4 AC7E     		.sleb128 -212
 3133 03e6 16       		.uleb128 0x16
 3134 03e7 92020000 		.4byte	.LASF39
 3135 03eb 01       		.byte	0x1
 3136 03ec 9C01     		.2byte	0x19c
 3137 03ee BB000000 		.4byte	0xbb
 3138 03f2 03       		.uleb128 0x3
 3139 03f3 91       		.byte	0x91
 3140 03f4 A87E     		.sleb128 -216
 3141 03f6 16       		.uleb128 0x16
 3142 03f7 4B020000 		.4byte	.LASF40
 3143 03fb 01       		.byte	0x1
 3144 03fc 9D01     		.2byte	0x19d
 3145 03fe 81000000 		.4byte	0x81
 3146 0402 03       		.uleb128 0x3
 3147 0403 91       		.byte	0x91
 3148 0404 A47E     		.sleb128 -220
 3149 0406 16       		.uleb128 0x16
 3150 0407 18050000 		.4byte	.LASF35
 3151 040b 01       		.byte	0x1
 3152 040c 9E01     		.2byte	0x19e
 3153 040e 12020000 		.4byte	0x212
 3154 0412 03       		.uleb128 0x3
 3155 0413 91       		.byte	0x91
 3156 0414 A07E     		.sleb128 -224
 3157 0416 17       		.uleb128 0x17
 3158 0417 72657400 		.ascii	"ret\000"
 3159 041b 01       		.byte	0x1
 3160 041c A001     		.2byte	0x1a0
 3161 041e BC010000 		.4byte	0x1bc
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 82


 3162 0422 02       		.uleb128 0x2
 3163 0423 91       		.byte	0x91
 3164 0424 6F       		.sleb128 -17
 3165 0425 17       		.uleb128 0x17
 3166 0426 6900     		.ascii	"i\000"
 3167 0428 01       		.byte	0x1
 3168 0429 A101     		.2byte	0x1a1
 3169 042b 81000000 		.4byte	0x81
 3170 042f 02       		.uleb128 0x2
 3171 0430 91       		.byte	0x91
 3172 0431 68       		.sleb128 -24
 3173 0432 14       		.uleb128 0x14
 3174 0433 2A040000 		.4byte	.LASF60
 3175 0437 01       		.byte	0x1
 3176 0438 A201     		.2byte	0x1a2
 3177 043a 81000000 		.4byte	0x81
 3178 043e 02       		.uleb128 0x2
 3179 043f 91       		.byte	0x91
 3180 0440 64       		.sleb128 -28
 3181 0441 14       		.uleb128 0x14
 3182 0442 63020000 		.4byte	.LASF61
 3183 0446 01       		.byte	0x1
 3184 0447 A301     		.2byte	0x1a3
 3185 0449 81000000 		.4byte	0x81
 3186 044d 02       		.uleb128 0x2
 3187 044e 91       		.byte	0x91
 3188 044f 48       		.sleb128 -56
 3189 0450 14       		.uleb128 0x14
 3190 0451 BF040000 		.4byte	.LASF62
 3191 0455 01       		.byte	0x1
 3192 0456 A401     		.2byte	0x1a4
 3193 0458 34050000 		.4byte	0x534
 3194 045c 03       		.uleb128 0x3
 3195 045d 91       		.byte	0x91
 3196 045e C47E     		.sleb128 -188
 3197 0460 14       		.uleb128 0x14
 3198 0461 02050000 		.4byte	.LASF55
 3199 0465 01       		.byte	0x1
 3200 0466 A501     		.2byte	0x1a5
 3201 0468 81000000 		.4byte	0x81
 3202 046c 03       		.uleb128 0x3
 3203 046d 91       		.byte	0x91
 3204 046e C07E     		.sleb128 -192
 3205 0470 14       		.uleb128 0x14
 3206 0471 36040000 		.4byte	.LASF56
 3207 0475 01       		.byte	0x1
 3208 0476 A601     		.2byte	0x1a6
 3209 0478 81000000 		.4byte	0x81
 3210 047c 03       		.uleb128 0x3
 3211 047d 91       		.byte	0x91
 3212 047e BC7E     		.sleb128 -196
 3213 0480 14       		.uleb128 0x14
 3214 0481 2E050000 		.4byte	.LASF63
 3215 0485 01       		.byte	0x1
 3216 0486 A701     		.2byte	0x1a7
 3217 0488 81000000 		.4byte	0x81
 3218 048c 02       		.uleb128 0x2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 83


 3219 048d 91       		.byte	0x91
 3220 048e 60       		.sleb128 -32
 3221 048f 14       		.uleb128 0x14
 3222 0490 FA050000 		.4byte	.LASF64
 3223 0494 01       		.byte	0x1
 3224 0495 A801     		.2byte	0x1a8
 3225 0497 81000000 		.4byte	0x81
 3226 049b 03       		.uleb128 0x3
 3227 049c 91       		.byte	0x91
 3228 049d B87E     		.sleb128 -200
 3229 049f 14       		.uleb128 0x14
 3230 04a0 80020000 		.4byte	.LASF65
 3231 04a4 01       		.byte	0x1
 3232 04a5 A901     		.2byte	0x1a9
 3233 04a7 81000000 		.4byte	0x81
 3234 04ab 03       		.uleb128 0x3
 3235 04ac 91       		.byte	0x91
 3236 04ad B47E     		.sleb128 -204
 3237 04af 14       		.uleb128 0x14
 3238 04b0 12000000 		.4byte	.LASF66
 3239 04b4 01       		.byte	0x1
 3240 04b5 AA01     		.2byte	0x1aa
 3241 04b7 BB000000 		.4byte	0xbb
 3242 04bb 02       		.uleb128 0x2
 3243 04bc 91       		.byte	0x91
 3244 04bd 4C       		.sleb128 -52
 3245 04be 14       		.uleb128 0x14
 3246 04bf 0A060000 		.4byte	.LASF48
 3247 04c3 01       		.byte	0x1
 3248 04c4 AB01     		.2byte	0x1ab
 3249 04c6 81000000 		.4byte	0x81
 3250 04ca 02       		.uleb128 0x2
 3251 04cb 91       		.byte	0x91
 3252 04cc 5C       		.sleb128 -36
 3253 04cd 12       		.uleb128 0x12
 3254 04ce 4C000000 		.4byte	.LBB6
 3255 04d2 D8020000 		.4byte	.LBE6-.LBB6
 3256 04d6 14       		.uleb128 0x14
 3257 04d7 54000000 		.4byte	.LASF67
 3258 04db 01       		.byte	0x1
 3259 04dc B001     		.2byte	0x1b0
 3260 04de 81000000 		.4byte	0x81
 3261 04e2 02       		.uleb128 0x2
 3262 04e3 91       		.byte	0x91
 3263 04e4 54       		.sleb128 -44
 3264 04e5 14       		.uleb128 0x14
 3265 04e6 5D010000 		.4byte	.LASF68
 3266 04ea 01       		.byte	0x1
 3267 04eb B101     		.2byte	0x1b1
 3268 04ed 81000000 		.4byte	0x81
 3269 04f1 03       		.uleb128 0x3
 3270 04f2 91       		.byte	0x91
 3271 04f3 B07E     		.sleb128 -208
 3272 04f5 18       		.uleb128 0x18
 3273 04f6 00000000 		.4byte	.Ldebug_ranges0+0
 3274 04fa 14       		.uleb128 0x14
 3275 04fb 89040000 		.4byte	.LASF69
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 84


 3276 04ff 01       		.byte	0x1
 3277 0500 B501     		.2byte	0x1b5
 3278 0502 81000000 		.4byte	0x81
 3279 0506 02       		.uleb128 0x2
 3280 0507 91       		.byte	0x91
 3281 0508 58       		.sleb128 -40
 3282 0509 14       		.uleb128 0x14
 3283 050a D9030000 		.4byte	.LASF51
 3284 050e 01       		.byte	0x1
 3285 050f B701     		.2byte	0x1b7
 3286 0511 81000000 		.4byte	0x81
 3287 0515 02       		.uleb128 0x2
 3288 0516 91       		.byte	0x91
 3289 0517 50       		.sleb128 -48
 3290 0518 12       		.uleb128 0x12
 3291 0519 1A020000 		.4byte	.LBB8
 3292 051d 38000000 		.4byte	.LBE8-.LBB8
 3293 0521 14       		.uleb128 0x14
 3294 0522 B5010000 		.4byte	.LASF70
 3295 0526 01       		.byte	0x1
 3296 0527 1702     		.2byte	0x217
 3297 0529 81000000 		.4byte	0x81
 3298 052d 02       		.uleb128 0x2
 3299 052e 91       		.byte	0x91
 3300 052f 44       		.sleb128 -60
 3301 0530 00       		.byte	0
 3302 0531 00       		.byte	0
 3303 0532 00       		.byte	0
 3304 0533 00       		.byte	0
 3305 0534 19       		.uleb128 0x19
 3306 0535 81000000 		.4byte	0x81
 3307 0539 44050000 		.4byte	0x544
 3308 053d 1A       		.uleb128 0x1a
 3309 053e B4000000 		.4byte	0xb4
 3310 0542 1F       		.byte	0x1f
 3311 0543 00       		.byte	0
 3312 0544 15       		.uleb128 0x15
 3313 0545 B3030000 		.4byte	.LASF71
 3314 0549 01       		.byte	0x1
 3315 054a 7502     		.2byte	0x275
 3316 054c BC010000 		.4byte	0x1bc
 3317 0550 00000000 		.4byte	.LFB3
 3318 0554 FE000000 		.4byte	.LFE3-.LFB3
 3319 0558 01       		.uleb128 0x1
 3320 0559 9C       		.byte	0x9c
 3321 055a E1050000 		.4byte	0x5e1
 3322 055e 16       		.uleb128 0x16
 3323 055f 18050000 		.4byte	.LASF35
 3324 0563 01       		.byte	0x1
 3325 0564 7502     		.2byte	0x275
 3326 0566 12020000 		.4byte	0x212
 3327 056a 03       		.uleb128 0x3
 3328 056b 91       		.byte	0x91
 3329 056c D47E     		.sleb128 -172
 3330 056e 17       		.uleb128 0x17
 3331 056f 6900     		.ascii	"i\000"
 3332 0571 01       		.byte	0x1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 85


 3333 0572 7702     		.2byte	0x277
 3334 0574 81000000 		.4byte	0x81
 3335 0578 02       		.uleb128 0x2
 3336 0579 91       		.byte	0x91
 3337 057a 6C       		.sleb128 -20
 3338 057b 14       		.uleb128 0x14
 3339 057c D9030000 		.4byte	.LASF51
 3340 0580 01       		.byte	0x1
 3341 0581 7802     		.2byte	0x278
 3342 0583 81000000 		.4byte	0x81
 3343 0587 02       		.uleb128 0x2
 3344 0588 91       		.byte	0x91
 3345 0589 64       		.sleb128 -28
 3346 058a 14       		.uleb128 0x14
 3347 058b FA050000 		.4byte	.LASF64
 3348 058f 01       		.byte	0x1
 3349 0590 7902     		.2byte	0x279
 3350 0592 81000000 		.4byte	0x81
 3351 0596 02       		.uleb128 0x2
 3352 0597 91       		.byte	0x91
 3353 0598 5C       		.sleb128 -36
 3354 0599 14       		.uleb128 0x14
 3355 059a 80020000 		.4byte	.LASF65
 3356 059e 01       		.byte	0x1
 3357 059f 7A02     		.2byte	0x27a
 3358 05a1 81000000 		.4byte	0x81
 3359 05a5 02       		.uleb128 0x2
 3360 05a6 91       		.byte	0x91
 3361 05a7 58       		.sleb128 -40
 3362 05a8 17       		.uleb128 0x17
 3363 05a9 72657400 		.ascii	"ret\000"
 3364 05ad 01       		.byte	0x1
 3365 05ae 7B02     		.2byte	0x27b
 3366 05b0 BC010000 		.4byte	0x1bc
 3367 05b4 02       		.uleb128 0x2
 3368 05b5 91       		.byte	0x91
 3369 05b6 6B       		.sleb128 -21
 3370 05b7 14       		.uleb128 0x14
 3371 05b8 BF040000 		.4byte	.LASF62
 3372 05bc 01       		.byte	0x1
 3373 05bd 7C02     		.2byte	0x27c
 3374 05bf 34050000 		.4byte	0x534
 3375 05c3 03       		.uleb128 0x3
 3376 05c4 91       		.byte	0x91
 3377 05c5 D87E     		.sleb128 -168
 3378 05c7 12       		.uleb128 0x12
 3379 05c8 42000000 		.4byte	.LBB10
 3380 05cc AE000000 		.4byte	.LBE10-.LBB10
 3381 05d0 14       		.uleb128 0x14
 3382 05d1 54000000 		.4byte	.LASF67
 3383 05d5 01       		.byte	0x1
 3384 05d6 8902     		.2byte	0x289
 3385 05d8 81000000 		.4byte	0x81
 3386 05dc 02       		.uleb128 0x2
 3387 05dd 91       		.byte	0x91
 3388 05de 60       		.sleb128 -32
 3389 05df 00       		.byte	0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 86


 3390 05e0 00       		.byte	0
 3391 05e1 1B       		.uleb128 0x1b
 3392 05e2 F9000000 		.4byte	.LASF72
 3393 05e6 01       		.byte	0x1
 3394 05e7 DC02     		.2byte	0x2dc
 3395 05e9 81000000 		.4byte	0x81
 3396 05ed 00000000 		.4byte	.LFB4
 3397 05f1 16000000 		.4byte	.LFE4-.LFB4
 3398 05f5 01       		.uleb128 0x1
 3399 05f6 9C       		.byte	0x9c
 3400 05f7 0B060000 		.4byte	0x60b
 3401 05fb 16       		.uleb128 0x16
 3402 05fc 18050000 		.4byte	.LASF35
 3403 0600 01       		.byte	0x1
 3404 0601 DC02     		.2byte	0x2dc
 3405 0603 12020000 		.4byte	0x212
 3406 0607 02       		.uleb128 0x2
 3407 0608 91       		.byte	0x91
 3408 0609 74       		.sleb128 -12
 3409 060a 00       		.byte	0
 3410 060b 1C       		.uleb128 0x1c
 3411 060c A8000000 		.4byte	.LASF77
 3412 0610 01       		.byte	0x1
 3413 0611 F602     		.2byte	0x2f6
 3414 0613 00000000 		.4byte	.LFB5
 3415 0617 66000000 		.4byte	.LFE5-.LFB5
 3416 061b 01       		.uleb128 0x1
 3417 061c 9C       		.byte	0x9c
 3418 061d 7C060000 		.4byte	0x67c
 3419 0621 16       		.uleb128 0x16
 3420 0622 39010000 		.4byte	.LASF73
 3421 0626 01       		.byte	0x1
 3422 0627 F602     		.2byte	0x2f6
 3423 0629 7C060000 		.4byte	0x67c
 3424 062d 02       		.uleb128 0x2
 3425 062e 91       		.byte	0x91
 3426 062f 64       		.sleb128 -28
 3427 0630 16       		.uleb128 0x16
 3428 0631 18050000 		.4byte	.LASF35
 3429 0635 01       		.byte	0x1
 3430 0636 F602     		.2byte	0x2f6
 3431 0638 12020000 		.4byte	0x212
 3432 063c 02       		.uleb128 0x2
 3433 063d 91       		.byte	0x91
 3434 063e 60       		.sleb128 -32
 3435 063f 14       		.uleb128 0x14
 3436 0640 D9030000 		.4byte	.LASF51
 3437 0644 01       		.byte	0x1
 3438 0645 F802     		.2byte	0x2f8
 3439 0647 81000000 		.4byte	0x81
 3440 064b 02       		.uleb128 0x2
 3441 064c 91       		.byte	0x91
 3442 064d 68       		.sleb128 -24
 3443 064e 14       		.uleb128 0x14
 3444 064f 7E040000 		.4byte	.LASF74
 3445 0653 01       		.byte	0x1
 3446 0654 F902     		.2byte	0x2f9
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 87


 3447 0656 81000000 		.4byte	0x81
 3448 065a 02       		.uleb128 0x2
 3449 065b 91       		.byte	0x91
 3450 065c 74       		.sleb128 -12
 3451 065d 14       		.uleb128 0x14
 3452 065e 7F010000 		.4byte	.LASF75
 3453 0662 01       		.byte	0x1
 3454 0663 FA02     		.2byte	0x2fa
 3455 0665 81000000 		.4byte	0x81
 3456 0669 02       		.uleb128 0x2
 3457 066a 91       		.byte	0x91
 3458 066b 70       		.sleb128 -16
 3459 066c 14       		.uleb128 0x14
 3460 066d 33000000 		.4byte	.LASF76
 3461 0671 01       		.byte	0x1
 3462 0672 FB02     		.2byte	0x2fb
 3463 0674 81000000 		.4byte	0x81
 3464 0678 02       		.uleb128 0x2
 3465 0679 91       		.byte	0x91
 3466 067a 6C       		.sleb128 -20
 3467 067b 00       		.byte	0
 3468 067c 10       		.uleb128 0x10
 3469 067d 04       		.byte	0x4
 3470 067e 81000000 		.4byte	0x81
 3471 0682 1D       		.uleb128 0x1d
 3472 0683 88050000 		.4byte	.LASF81
 3473 0687 01       		.byte	0x1
 3474 0688 2203     		.2byte	0x322
 3475 068a 81000000 		.4byte	0x81
 3476 068e 00000000 		.4byte	.LFB6
 3477 0692 3C000000 		.4byte	.LFE6-.LFB6
 3478 0696 01       		.uleb128 0x1
 3479 0697 9C       		.byte	0x9c
 3480 0698 CA060000 		.4byte	0x6ca
 3481 069c 16       		.uleb128 0x16
 3482 069d D9030000 		.4byte	.LASF51
 3483 06a1 01       		.byte	0x1
 3484 06a2 2203     		.2byte	0x322
 3485 06a4 81000000 		.4byte	0x81
 3486 06a8 02       		.uleb128 0x2
 3487 06a9 91       		.byte	0x91
 3488 06aa 6C       		.sleb128 -20
 3489 06ab 16       		.uleb128 0x16
 3490 06ac 18050000 		.4byte	.LASF35
 3491 06b0 01       		.byte	0x1
 3492 06b1 2203     		.2byte	0x322
 3493 06b3 12020000 		.4byte	0x212
 3494 06b7 02       		.uleb128 0x2
 3495 06b8 91       		.byte	0x91
 3496 06b9 68       		.sleb128 -24
 3497 06ba 14       		.uleb128 0x14
 3498 06bb 33000000 		.4byte	.LASF76
 3499 06bf 01       		.byte	0x1
 3500 06c0 2403     		.2byte	0x324
 3501 06c2 81000000 		.4byte	0x81
 3502 06c6 02       		.uleb128 0x2
 3503 06c7 91       		.byte	0x91
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 88


 3504 06c8 74       		.sleb128 -12
 3505 06c9 00       		.byte	0
 3506 06ca 1C       		.uleb128 0x1c
 3507 06cb F8030000 		.4byte	.LASF78
 3508 06cf 01       		.byte	0x1
 3509 06d0 4F03     		.2byte	0x34f
 3510 06d2 00000000 		.4byte	.LFB7
 3511 06d6 B0000000 		.4byte	.LFE7-.LFB7
 3512 06da 01       		.uleb128 0x1
 3513 06db 9C       		.byte	0x9c
 3514 06dc 1D070000 		.4byte	0x71d
 3515 06e0 16       		.uleb128 0x16
 3516 06e1 D9030000 		.4byte	.LASF51
 3517 06e5 01       		.byte	0x1
 3518 06e6 4F03     		.2byte	0x34f
 3519 06e8 81000000 		.4byte	0x81
 3520 06ec 02       		.uleb128 0x2
 3521 06ed 91       		.byte	0x91
 3522 06ee 74       		.sleb128 -12
 3523 06ef 16       		.uleb128 0x16
 3524 06f0 07000000 		.4byte	.LASF79
 3525 06f4 01       		.byte	0x1
 3526 06f5 5003     		.2byte	0x350
 3527 06f7 7C060000 		.4byte	0x67c
 3528 06fb 02       		.uleb128 0x2
 3529 06fc 91       		.byte	0x91
 3530 06fd 70       		.sleb128 -16
 3531 06fe 16       		.uleb128 0x16
 3532 06ff 75020000 		.4byte	.LASF80
 3533 0703 01       		.byte	0x1
 3534 0704 5103     		.2byte	0x351
 3535 0706 7C060000 		.4byte	0x67c
 3536 070a 02       		.uleb128 0x2
 3537 070b 91       		.byte	0x91
 3538 070c 6C       		.sleb128 -20
 3539 070d 16       		.uleb128 0x16
 3540 070e 18050000 		.4byte	.LASF35
 3541 0712 01       		.byte	0x1
 3542 0713 5203     		.2byte	0x352
 3543 0715 12020000 		.4byte	0x212
 3544 0719 02       		.uleb128 0x2
 3545 071a 91       		.byte	0x91
 3546 071b 68       		.sleb128 -24
 3547 071c 00       		.byte	0
 3548 071d 1D       		.uleb128 0x1d
 3549 071e D9050000 		.4byte	.LASF82
 3550 0722 01       		.byte	0x1
 3551 0723 9B03     		.2byte	0x39b
 3552 0725 6B000000 		.4byte	0x6b
 3553 0729 00000000 		.4byte	.LFB8
 3554 072d AE000000 		.4byte	.LFE8-.LFB8
 3555 0731 01       		.uleb128 0x1
 3556 0732 9C       		.byte	0x9c
 3557 0733 81070000 		.4byte	0x781
 3558 0737 16       		.uleb128 0x16
 3559 0738 E6050000 		.4byte	.LASF83
 3560 073c 01       		.byte	0x1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 89


 3561 073d 9B03     		.2byte	0x39b
 3562 073f 81070000 		.4byte	0x781
 3563 0743 02       		.uleb128 0x2
 3564 0744 91       		.byte	0x91
 3565 0745 6C       		.sleb128 -20
 3566 0746 1E       		.uleb128 0x1e
 3567 0747 6C656E00 		.ascii	"len\000"
 3568 074b 01       		.byte	0x1
 3569 074c 9B03     		.2byte	0x39b
 3570 074e 81000000 		.4byte	0x81
 3571 0752 02       		.uleb128 0x2
 3572 0753 91       		.byte	0x91
 3573 0754 68       		.sleb128 -24
 3574 0755 17       		.uleb128 0x17
 3575 0756 63726300 		.ascii	"crc\000"
 3576 075a 01       		.byte	0x1
 3577 075b 9D03     		.2byte	0x39d
 3578 075d 6B000000 		.4byte	0x6b
 3579 0761 02       		.uleb128 0x2
 3580 0762 91       		.byte	0x91
 3581 0763 77       		.sleb128 -9
 3582 0764 17       		.uleb128 0x17
 3583 0765 6900     		.ascii	"i\000"
 3584 0767 01       		.byte	0x1
 3585 0768 9E03     		.2byte	0x39e
 3586 076a 6B000000 		.4byte	0x6b
 3587 076e 02       		.uleb128 0x2
 3588 076f 91       		.byte	0x91
 3589 0770 76       		.sleb128 -10
 3590 0771 17       		.uleb128 0x17
 3591 0772 636E7400 		.ascii	"cnt\000"
 3592 0776 01       		.byte	0x1
 3593 0777 9F03     		.2byte	0x39f
 3594 0779 76000000 		.4byte	0x76
 3595 077d 02       		.uleb128 0x2
 3596 077e 91       		.byte	0x91
 3597 077f 74       		.sleb128 -12
 3598 0780 00       		.byte	0
 3599 0781 10       		.uleb128 0x10
 3600 0782 04       		.byte	0x4
 3601 0783 6B000000 		.4byte	0x6b
 3602 0787 1D       		.uleb128 0x1d
 3603 0788 17040000 		.4byte	.LASF84
 3604 078c 01       		.byte	0x1
 3605 078d BC03     		.2byte	0x3bc
 3606 078f BC010000 		.4byte	0x1bc
 3607 0793 00000000 		.4byte	.LFB9
 3608 0797 6A000000 		.4byte	.LFE9-.LFB9
 3609 079b 01       		.uleb128 0x1
 3610 079c 9C       		.byte	0x9c
 3611 079d DE070000 		.4byte	0x7de
 3612 07a1 16       		.uleb128 0x16
 3613 07a2 EC040000 		.4byte	.LASF34
 3614 07a6 01       		.byte	0x1
 3615 07a7 BC03     		.2byte	0x3bc
 3616 07a9 0C020000 		.4byte	0x20c
 3617 07ad 02       		.uleb128 0x2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 90


 3618 07ae 91       		.byte	0x91
 3619 07af 64       		.sleb128 -28
 3620 07b0 17       		.uleb128 0x17
 3621 07b1 72657400 		.ascii	"ret\000"
 3622 07b5 01       		.byte	0x1
 3623 07b6 BE03     		.2byte	0x3be
 3624 07b8 BC010000 		.4byte	0x1bc
 3625 07bc 02       		.uleb128 0x2
 3626 07bd 91       		.byte	0x91
 3627 07be 77       		.sleb128 -9
 3628 07bf 14       		.uleb128 0x14
 3629 07c0 02050000 		.4byte	.LASF55
 3630 07c4 01       		.byte	0x1
 3631 07c5 BF03     		.2byte	0x3bf
 3632 07c7 81000000 		.4byte	0x81
 3633 07cb 02       		.uleb128 0x2
 3634 07cc 91       		.byte	0x91
 3635 07cd 70       		.sleb128 -16
 3636 07ce 14       		.uleb128 0x14
 3637 07cf 36040000 		.4byte	.LASF56
 3638 07d3 01       		.byte	0x1
 3639 07d4 C003     		.2byte	0x3c0
 3640 07d6 81000000 		.4byte	0x81
 3641 07da 02       		.uleb128 0x2
 3642 07db 91       		.byte	0x91
 3643 07dc 6C       		.sleb128 -20
 3644 07dd 00       		.byte	0
 3645 07de 1F       		.uleb128 0x1f
 3646 07df 9F000000 		.4byte	.LASF85
 3647 07e3 01       		.byte	0x1
 3648 07e4 DF03     		.2byte	0x3df
 3649 07e6 BC010000 		.4byte	0x1bc
 3650 07ea 00000000 		.4byte	.LFB10
 3651 07ee 46000000 		.4byte	.LFE10-.LFB10
 3652 07f2 01       		.uleb128 0x1
 3653 07f3 9C       		.byte	0x9c
 3654 07f4 52080000 		.4byte	0x852
 3655 07f8 16       		.uleb128 0x16
 3656 07f9 6C040000 		.4byte	.LASF86
 3657 07fd 01       		.byte	0x1
 3658 07fe DF03     		.2byte	0x3df
 3659 0800 81000000 		.4byte	0x81
 3660 0804 02       		.uleb128 0x2
 3661 0805 91       		.byte	0x91
 3662 0806 64       		.sleb128 -28
 3663 0807 16       		.uleb128 0x16
 3664 0808 E6050000 		.4byte	.LASF83
 3665 080c 01       		.byte	0x1
 3666 080d E003     		.2byte	0x3e0
 3667 080f 7C060000 		.4byte	0x67c
 3668 0813 02       		.uleb128 0x2
 3669 0814 91       		.byte	0x91
 3670 0815 60       		.sleb128 -32
 3671 0816 16       		.uleb128 0x16
 3672 0817 18050000 		.4byte	.LASF35
 3673 081b 01       		.byte	0x1
 3674 081c E103     		.2byte	0x3e1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 91


 3675 081e 12020000 		.4byte	0x212
 3676 0822 02       		.uleb128 0x2
 3677 0823 91       		.byte	0x91
 3678 0824 5C       		.sleb128 -36
 3679 0825 17       		.uleb128 0x17
 3680 0826 72657400 		.ascii	"ret\000"
 3681 082a 01       		.byte	0x1
 3682 082b E303     		.2byte	0x3e3
 3683 082d BC010000 		.4byte	0x1bc
 3684 0831 02       		.uleb128 0x2
 3685 0832 91       		.byte	0x91
 3686 0833 77       		.sleb128 -9
 3687 0834 17       		.uleb128 0x17
 3688 0835 726300   		.ascii	"rc\000"
 3689 0838 01       		.byte	0x1
 3690 0839 E503     		.2byte	0x3e5
 3691 083b A1000000 		.4byte	0xa1
 3692 083f 02       		.uleb128 0x2
 3693 0840 91       		.byte	0x91
 3694 0841 6C       		.sleb128 -20
 3695 0842 14       		.uleb128 0x14
 3696 0843 40000000 		.4byte	.LASF87
 3697 0847 01       		.byte	0x1
 3698 0848 EA03     		.2byte	0x3ea
 3699 084a 81000000 		.4byte	0x81
 3700 084e 02       		.uleb128 0x2
 3701 084f 91       		.byte	0x91
 3702 0850 70       		.sleb128 -16
 3703 0851 00       		.byte	0
 3704 0852 1F       		.uleb128 0x1f
 3705 0853 64030000 		.4byte	.LASF88
 3706 0857 01       		.byte	0x1
 3707 0858 4904     		.2byte	0x449
 3708 085a BC010000 		.4byte	0x1bc
 3709 085e 00000000 		.4byte	.LFB11
 3710 0862 80000000 		.4byte	.LFE11-.LFB11
 3711 0866 01       		.uleb128 0x1
 3712 0867 9C       		.byte	0x9c
 3713 0868 B8080000 		.4byte	0x8b8
 3714 086c 16       		.uleb128 0x16
 3715 086d 6C040000 		.4byte	.LASF86
 3716 0871 01       		.byte	0x1
 3717 0872 4904     		.2byte	0x449
 3718 0874 81000000 		.4byte	0x81
 3719 0878 02       		.uleb128 0x2
 3720 0879 91       		.byte	0x91
 3721 087a 64       		.sleb128 -28
 3722 087b 16       		.uleb128 0x16
 3723 087c 9B010000 		.4byte	.LASF89
 3724 0880 01       		.byte	0x1
 3725 0881 4A04     		.2byte	0x44a
 3726 0883 81000000 		.4byte	0x81
 3727 0887 02       		.uleb128 0x2
 3728 0888 91       		.byte	0x91
 3729 0889 60       		.sleb128 -32
 3730 088a 16       		.uleb128 0x16
 3731 088b 18050000 		.4byte	.LASF35
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 92


 3732 088f 01       		.byte	0x1
 3733 0890 4B04     		.2byte	0x44b
 3734 0892 12020000 		.4byte	0x212
 3735 0896 02       		.uleb128 0x2
 3736 0897 91       		.byte	0x91
 3737 0898 5C       		.sleb128 -36
 3738 0899 14       		.uleb128 0x14
 3739 089a FA050000 		.4byte	.LASF64
 3740 089e 01       		.byte	0x1
 3741 089f 4D04     		.2byte	0x44d
 3742 08a1 81000000 		.4byte	0x81
 3743 08a5 02       		.uleb128 0x2
 3744 08a6 91       		.byte	0x91
 3745 08a7 68       		.sleb128 -24
 3746 08a8 17       		.uleb128 0x17
 3747 08a9 72657400 		.ascii	"ret\000"
 3748 08ad 01       		.byte	0x1
 3749 08ae 4E04     		.2byte	0x44e
 3750 08b0 BC010000 		.4byte	0x1bc
 3751 08b4 02       		.uleb128 0x2
 3752 08b5 91       		.byte	0x91
 3753 08b6 6F       		.sleb128 -17
 3754 08b7 00       		.byte	0
 3755 08b8 1F       		.uleb128 0x1f
 3756 08b9 31020000 		.4byte	.LASF90
 3757 08bd 01       		.byte	0x1
 3758 08be BD04     		.2byte	0x4bd
 3759 08c0 BC010000 		.4byte	0x1bc
 3760 08c4 00000000 		.4byte	.LFB12
 3761 08c8 E0000000 		.4byte	.LFE12-.LFB12
 3762 08cc 01       		.uleb128 0x1
 3763 08cd 9C       		.byte	0x9c
 3764 08ce 50090000 		.4byte	0x950
 3765 08d2 16       		.uleb128 0x16
 3766 08d3 02050000 		.4byte	.LASF55
 3767 08d7 01       		.byte	0x1
 3768 08d8 BD04     		.2byte	0x4bd
 3769 08da 81000000 		.4byte	0x81
 3770 08de 03       		.uleb128 0x3
 3771 08df 91       		.byte	0x91
 3772 08e0 E47E     		.sleb128 -156
 3773 08e2 16       		.uleb128 0x16
 3774 08e3 9D020000 		.4byte	.LASF91
 3775 08e7 01       		.byte	0x1
 3776 08e8 BE04     		.2byte	0x4be
 3777 08ea 81000000 		.4byte	0x81
 3778 08ee 03       		.uleb128 0x3
 3779 08ef 91       		.byte	0x91
 3780 08f0 E07E     		.sleb128 -160
 3781 08f2 16       		.uleb128 0x16
 3782 08f3 CE040000 		.4byte	.LASF92
 3783 08f7 01       		.byte	0x1
 3784 08f8 BF04     		.2byte	0x4bf
 3785 08fa 81000000 		.4byte	0x81
 3786 08fe 03       		.uleb128 0x3
 3787 08ff 91       		.byte	0x91
 3788 0900 DC7E     		.sleb128 -164
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 93


 3789 0902 16       		.uleb128 0x16
 3790 0903 CB010000 		.4byte	.LASF93
 3791 0907 01       		.byte	0x1
 3792 0908 C004     		.2byte	0x4c0
 3793 090a 81000000 		.4byte	0x81
 3794 090e 03       		.uleb128 0x3
 3795 090f 91       		.byte	0x91
 3796 0910 D87E     		.sleb128 -168
 3797 0912 16       		.uleb128 0x16
 3798 0913 18050000 		.4byte	.LASF35
 3799 0917 01       		.byte	0x1
 3800 0918 C104     		.2byte	0x4c1
 3801 091a 12020000 		.4byte	0x212
 3802 091e 02       		.uleb128 0x2
 3803 091f 91       		.byte	0x91
 3804 0920 00       		.sleb128 0
 3805 0921 17       		.uleb128 0x17
 3806 0922 72657400 		.ascii	"ret\000"
 3807 0926 01       		.byte	0x1
 3808 0927 C304     		.2byte	0x4c3
 3809 0929 BC010000 		.4byte	0x1bc
 3810 092d 02       		.uleb128 0x2
 3811 092e 91       		.byte	0x91
 3812 092f 6F       		.sleb128 -17
 3813 0930 14       		.uleb128 0x14
 3814 0931 BF040000 		.4byte	.LASF62
 3815 0935 01       		.byte	0x1
 3816 0936 C404     		.2byte	0x4c4
 3817 0938 34050000 		.4byte	0x534
 3818 093c 03       		.uleb128 0x3
 3819 093d 91       		.byte	0x91
 3820 093e E87E     		.sleb128 -152
 3821 0940 14       		.uleb128 0x14
 3822 0941 D8040000 		.4byte	.LASF94
 3823 0945 01       		.byte	0x1
 3824 0946 C704     		.2byte	0x4c7
 3825 0948 81000000 		.4byte	0x81
 3826 094c 02       		.uleb128 0x2
 3827 094d 91       		.byte	0x91
 3828 094e 68       		.sleb128 -24
 3829 094f 00       		.byte	0
 3830 0950 1D       		.uleb128 0x1d
 3831 0951 E6010000 		.4byte	.LASF95
 3832 0955 01       		.byte	0x1
 3833 0956 1105     		.2byte	0x511
 3834 0958 81000000 		.4byte	0x81
 3835 095c 00000000 		.4byte	.LFB13
 3836 0960 F6000000 		.4byte	.LFE13-.LFB13
 3837 0964 01       		.uleb128 0x1
 3838 0965 9C       		.byte	0x9c
 3839 0966 D4090000 		.4byte	0x9d4
 3840 096a 16       		.uleb128 0x16
 3841 096b 02050000 		.4byte	.LASF55
 3842 096f 01       		.byte	0x1
 3843 0970 1105     		.2byte	0x511
 3844 0972 7C060000 		.4byte	0x67c
 3845 0976 02       		.uleb128 0x2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 94


 3846 0977 91       		.byte	0x91
 3847 0978 6C       		.sleb128 -20
 3848 0979 16       		.uleb128 0x16
 3849 097a 36040000 		.4byte	.LASF56
 3850 097e 01       		.byte	0x1
 3851 097f 1205     		.2byte	0x512
 3852 0981 7C060000 		.4byte	0x67c
 3853 0985 02       		.uleb128 0x2
 3854 0986 91       		.byte	0x91
 3855 0987 68       		.sleb128 -24
 3856 0988 16       		.uleb128 0x16
 3857 0989 11050000 		.4byte	.LASF96
 3858 098d 01       		.byte	0x1
 3859 098e 1305     		.2byte	0x513
 3860 0990 7C060000 		.4byte	0x67c
 3861 0994 02       		.uleb128 0x2
 3862 0995 91       		.byte	0x91
 3863 0996 64       		.sleb128 -28
 3864 0997 16       		.uleb128 0x16
 3865 0998 40000000 		.4byte	.LASF87
 3866 099c 01       		.byte	0x1
 3867 099d 1405     		.2byte	0x514
 3868 099f 81000000 		.4byte	0x81
 3869 09a3 02       		.uleb128 0x2
 3870 09a4 91       		.byte	0x91
 3871 09a5 60       		.sleb128 -32
 3872 09a6 16       		.uleb128 0x16
 3873 09a7 75000000 		.4byte	.LASF38
 3874 09ab 01       		.byte	0x1
 3875 09ac 1505     		.2byte	0x515
 3876 09ae 81000000 		.4byte	0x81
 3877 09b2 02       		.uleb128 0x2
 3878 09b3 91       		.byte	0x91
 3879 09b4 00       		.sleb128 0
 3880 09b5 1E       		.uleb128 0x1e
 3881 09b6 6C656E00 		.ascii	"len\000"
 3882 09ba 01       		.byte	0x1
 3883 09bb 1605     		.2byte	0x516
 3884 09bd 81000000 		.4byte	0x81
 3885 09c1 02       		.uleb128 0x2
 3886 09c2 91       		.byte	0x91
 3887 09c3 04       		.sleb128 4
 3888 09c4 14       		.uleb128 0x14
 3889 09c5 0C050000 		.4byte	.LASF97
 3890 09c9 01       		.byte	0x1
 3891 09ca 1805     		.2byte	0x518
 3892 09cc 81000000 		.4byte	0x81
 3893 09d0 02       		.uleb128 0x2
 3894 09d1 91       		.byte	0x91
 3895 09d2 74       		.sleb128 -12
 3896 09d3 00       		.byte	0
 3897 09d4 20       		.uleb128 0x20
 3898 09d5 0A040000 		.4byte	.LASF98
 3899 09d9 01       		.byte	0x1
 3900 09da 5805     		.2byte	0x558
 3901 09dc BC010000 		.4byte	0x1bc
 3902 09e0 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 95


 3903 09e4 F4000000 		.4byte	.LFE14-.LFB14
 3904 09e8 01       		.uleb128 0x1
 3905 09e9 9C       		.byte	0x9c
 3906 09ea 16       		.uleb128 0x16
 3907 09eb 18050000 		.4byte	.LASF35
 3908 09ef 01       		.byte	0x1
 3909 09f0 5805     		.2byte	0x558
 3910 09f2 12020000 		.4byte	0x212
 3911 09f6 03       		.uleb128 0x3
 3912 09f7 91       		.byte	0x91
 3913 09f8 D47E     		.sleb128 -172
 3914 09fa 17       		.uleb128 0x17
 3915 09fb 6900     		.ascii	"i\000"
 3916 09fd 01       		.byte	0x1
 3917 09fe 5A05     		.2byte	0x55a
 3918 0a00 81000000 		.4byte	0x81
 3919 0a04 02       		.uleb128 0x2
 3920 0a05 91       		.byte	0x91
 3921 0a06 6C       		.sleb128 -20
 3922 0a07 14       		.uleb128 0x14
 3923 0a08 77050000 		.4byte	.LASF49
 3924 0a0c 01       		.byte	0x1
 3925 0a0d 5B05     		.2byte	0x55b
 3926 0a0f 81000000 		.4byte	0x81
 3927 0a13 02       		.uleb128 0x2
 3928 0a14 91       		.byte	0x91
 3929 0a15 5C       		.sleb128 -36
 3930 0a16 14       		.uleb128 0x14
 3931 0a17 BF040000 		.4byte	.LASF62
 3932 0a1b 01       		.byte	0x1
 3933 0a1c 5C05     		.2byte	0x55c
 3934 0a1e 34050000 		.4byte	0x534
 3935 0a22 03       		.uleb128 0x3
 3936 0a23 91       		.byte	0x91
 3937 0a24 DC7E     		.sleb128 -164
 3938 0a26 14       		.uleb128 0x14
 3939 0a27 23040000 		.4byte	.LASF99
 3940 0a2b 01       		.byte	0x1
 3941 0a2c 5D05     		.2byte	0x55d
 3942 0a2e 81000000 		.4byte	0x81
 3943 0a32 03       		.uleb128 0x3
 3944 0a33 91       		.byte	0x91
 3945 0a34 D87E     		.sleb128 -168
 3946 0a36 14       		.uleb128 0x14
 3947 0a37 2E050000 		.4byte	.LASF63
 3948 0a3b 01       		.byte	0x1
 3949 0a3c 5E05     		.2byte	0x55e
 3950 0a3e 81000000 		.4byte	0x81
 3951 0a42 02       		.uleb128 0x2
 3952 0a43 91       		.byte	0x91
 3953 0a44 60       		.sleb128 -32
 3954 0a45 14       		.uleb128 0x14
 3955 0a46 D9030000 		.4byte	.LASF51
 3956 0a4a 01       		.byte	0x1
 3957 0a4b 6005     		.2byte	0x560
 3958 0a4d 81000000 		.4byte	0x81
 3959 0a51 02       		.uleb128 0x2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 96


 3960 0a52 91       		.byte	0x91
 3961 0a53 68       		.sleb128 -24
 3962 0a54 17       		.uleb128 0x17
 3963 0a55 72657400 		.ascii	"ret\000"
 3964 0a59 01       		.byte	0x1
 3965 0a5a 6105     		.2byte	0x561
 3966 0a5c BC010000 		.4byte	0x1bc
 3967 0a60 02       		.uleb128 0x2
 3968 0a61 91       		.byte	0x91
 3969 0a62 67       		.sleb128 -25
 3970 0a63 00       		.byte	0
 3971 0a64 00       		.byte	0
 3972              		.section	.debug_abbrev,"",%progbits
 3973              	.Ldebug_abbrev0:
 3974 0000 01       		.uleb128 0x1
 3975 0001 11       		.uleb128 0x11
 3976 0002 01       		.byte	0x1
 3977 0003 25       		.uleb128 0x25
 3978 0004 0E       		.uleb128 0xe
 3979 0005 13       		.uleb128 0x13
 3980 0006 0B       		.uleb128 0xb
 3981 0007 03       		.uleb128 0x3
 3982 0008 0E       		.uleb128 0xe
 3983 0009 1B       		.uleb128 0x1b
 3984 000a 0E       		.uleb128 0xe
 3985 000b 55       		.uleb128 0x55
 3986 000c 17       		.uleb128 0x17
 3987 000d 11       		.uleb128 0x11
 3988 000e 01       		.uleb128 0x1
 3989 000f 10       		.uleb128 0x10
 3990 0010 17       		.uleb128 0x17
 3991 0011 00       		.byte	0
 3992 0012 00       		.byte	0
 3993 0013 02       		.uleb128 0x2
 3994 0014 24       		.uleb128 0x24
 3995 0015 00       		.byte	0
 3996 0016 0B       		.uleb128 0xb
 3997 0017 0B       		.uleb128 0xb
 3998 0018 3E       		.uleb128 0x3e
 3999 0019 0B       		.uleb128 0xb
 4000 001a 03       		.uleb128 0x3
 4001 001b 0E       		.uleb128 0xe
 4002 001c 00       		.byte	0
 4003 001d 00       		.byte	0
 4004 001e 03       		.uleb128 0x3
 4005 001f 24       		.uleb128 0x24
 4006 0020 00       		.byte	0
 4007 0021 0B       		.uleb128 0xb
 4008 0022 0B       		.uleb128 0xb
 4009 0023 3E       		.uleb128 0x3e
 4010 0024 0B       		.uleb128 0xb
 4011 0025 03       		.uleb128 0x3
 4012 0026 08       		.uleb128 0x8
 4013 0027 00       		.byte	0
 4014 0028 00       		.byte	0
 4015 0029 04       		.uleb128 0x4
 4016 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 97


 4017 002b 00       		.byte	0
 4018 002c 03       		.uleb128 0x3
 4019 002d 0E       		.uleb128 0xe
 4020 002e 3A       		.uleb128 0x3a
 4021 002f 0B       		.uleb128 0xb
 4022 0030 3B       		.uleb128 0x3b
 4023 0031 0B       		.uleb128 0xb
 4024 0032 49       		.uleb128 0x49
 4025 0033 13       		.uleb128 0x13
 4026 0034 00       		.byte	0
 4027 0035 00       		.byte	0
 4028 0036 05       		.uleb128 0x5
 4029 0037 16       		.uleb128 0x16
 4030 0038 00       		.byte	0
 4031 0039 03       		.uleb128 0x3
 4032 003a 0E       		.uleb128 0xe
 4033 003b 3A       		.uleb128 0x3a
 4034 003c 0B       		.uleb128 0xb
 4035 003d 3B       		.uleb128 0x3b
 4036 003e 05       		.uleb128 0x5
 4037 003f 49       		.uleb128 0x49
 4038 0040 13       		.uleb128 0x13
 4039 0041 00       		.byte	0
 4040 0042 00       		.byte	0
 4041 0043 06       		.uleb128 0x6
 4042 0044 0F       		.uleb128 0xf
 4043 0045 00       		.byte	0
 4044 0046 0B       		.uleb128 0xb
 4045 0047 0B       		.uleb128 0xb
 4046 0048 00       		.byte	0
 4047 0049 00       		.byte	0
 4048 004a 07       		.uleb128 0x7
 4049 004b 13       		.uleb128 0x13
 4050 004c 01       		.byte	0x1
 4051 004d 0B       		.uleb128 0xb
 4052 004e 0B       		.uleb128 0xb
 4053 004f 3A       		.uleb128 0x3a
 4054 0050 0B       		.uleb128 0xb
 4055 0051 3B       		.uleb128 0x3b
 4056 0052 0B       		.uleb128 0xb
 4057 0053 01       		.uleb128 0x1
 4058 0054 13       		.uleb128 0x13
 4059 0055 00       		.byte	0
 4060 0056 00       		.byte	0
 4061 0057 08       		.uleb128 0x8
 4062 0058 0D       		.uleb128 0xd
 4063 0059 00       		.byte	0
 4064 005a 03       		.uleb128 0x3
 4065 005b 0E       		.uleb128 0xe
 4066 005c 3A       		.uleb128 0x3a
 4067 005d 0B       		.uleb128 0xb
 4068 005e 3B       		.uleb128 0x3b
 4069 005f 0B       		.uleb128 0xb
 4070 0060 49       		.uleb128 0x49
 4071 0061 13       		.uleb128 0x13
 4072 0062 38       		.uleb128 0x38
 4073 0063 0B       		.uleb128 0xb
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 98


 4074 0064 00       		.byte	0
 4075 0065 00       		.byte	0
 4076 0066 09       		.uleb128 0x9
 4077 0067 0D       		.uleb128 0xd
 4078 0068 00       		.byte	0
 4079 0069 03       		.uleb128 0x3
 4080 006a 0E       		.uleb128 0xe
 4081 006b 3A       		.uleb128 0x3a
 4082 006c 0B       		.uleb128 0xb
 4083 006d 3B       		.uleb128 0x3b
 4084 006e 05       		.uleb128 0x5
 4085 006f 49       		.uleb128 0x49
 4086 0070 13       		.uleb128 0x13
 4087 0071 38       		.uleb128 0x38
 4088 0072 0B       		.uleb128 0xb
 4089 0073 00       		.byte	0
 4090 0074 00       		.byte	0
 4091 0075 0A       		.uleb128 0xa
 4092 0076 13       		.uleb128 0x13
 4093 0077 01       		.byte	0x1
 4094 0078 0B       		.uleb128 0xb
 4095 0079 0B       		.uleb128 0xb
 4096 007a 3A       		.uleb128 0x3a
 4097 007b 0B       		.uleb128 0xb
 4098 007c 3B       		.uleb128 0x3b
 4099 007d 05       		.uleb128 0x5
 4100 007e 01       		.uleb128 0x1
 4101 007f 13       		.uleb128 0x13
 4102 0080 00       		.byte	0
 4103 0081 00       		.byte	0
 4104 0082 0B       		.uleb128 0xb
 4105 0083 04       		.uleb128 0x4
 4106 0084 01       		.byte	0x1
 4107 0085 0B       		.uleb128 0xb
 4108 0086 0B       		.uleb128 0xb
 4109 0087 49       		.uleb128 0x49
 4110 0088 13       		.uleb128 0x13
 4111 0089 3A       		.uleb128 0x3a
 4112 008a 0B       		.uleb128 0xb
 4113 008b 3B       		.uleb128 0x3b
 4114 008c 05       		.uleb128 0x5
 4115 008d 01       		.uleb128 0x1
 4116 008e 13       		.uleb128 0x13
 4117 008f 00       		.byte	0
 4118 0090 00       		.byte	0
 4119 0091 0C       		.uleb128 0xc
 4120 0092 28       		.uleb128 0x28
 4121 0093 00       		.byte	0
 4122 0094 03       		.uleb128 0x3
 4123 0095 0E       		.uleb128 0xe
 4124 0096 1C       		.uleb128 0x1c
 4125 0097 0B       		.uleb128 0xb
 4126 0098 00       		.byte	0
 4127 0099 00       		.byte	0
 4128 009a 0D       		.uleb128 0xd
 4129 009b 2E       		.uleb128 0x2e
 4130 009c 01       		.byte	0x1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 99


 4131 009d 3F       		.uleb128 0x3f
 4132 009e 19       		.uleb128 0x19
 4133 009f 03       		.uleb128 0x3
 4134 00a0 0E       		.uleb128 0xe
 4135 00a1 3A       		.uleb128 0x3a
 4136 00a2 0B       		.uleb128 0xb
 4137 00a3 3B       		.uleb128 0x3b
 4138 00a4 0B       		.uleb128 0xb
 4139 00a5 27       		.uleb128 0x27
 4140 00a6 19       		.uleb128 0x19
 4141 00a7 49       		.uleb128 0x49
 4142 00a8 13       		.uleb128 0x13
 4143 00a9 11       		.uleb128 0x11
 4144 00aa 01       		.uleb128 0x1
 4145 00ab 12       		.uleb128 0x12
 4146 00ac 06       		.uleb128 0x6
 4147 00ad 40       		.uleb128 0x40
 4148 00ae 18       		.uleb128 0x18
 4149 00af 9642     		.uleb128 0x2116
 4150 00b1 19       		.uleb128 0x19
 4151 00b2 01       		.uleb128 0x1
 4152 00b3 13       		.uleb128 0x13
 4153 00b4 00       		.byte	0
 4154 00b5 00       		.byte	0
 4155 00b6 0E       		.uleb128 0xe
 4156 00b7 05       		.uleb128 0x5
 4157 00b8 00       		.byte	0
 4158 00b9 03       		.uleb128 0x3
 4159 00ba 0E       		.uleb128 0xe
 4160 00bb 3A       		.uleb128 0x3a
 4161 00bc 0B       		.uleb128 0xb
 4162 00bd 3B       		.uleb128 0x3b
 4163 00be 0B       		.uleb128 0xb
 4164 00bf 49       		.uleb128 0x49
 4165 00c0 13       		.uleb128 0x13
 4166 00c1 02       		.uleb128 0x2
 4167 00c2 18       		.uleb128 0x18
 4168 00c3 00       		.byte	0
 4169 00c4 00       		.byte	0
 4170 00c5 0F       		.uleb128 0xf
 4171 00c6 34       		.uleb128 0x34
 4172 00c7 00       		.byte	0
 4173 00c8 03       		.uleb128 0x3
 4174 00c9 08       		.uleb128 0x8
 4175 00ca 3A       		.uleb128 0x3a
 4176 00cb 0B       		.uleb128 0xb
 4177 00cc 3B       		.uleb128 0x3b
 4178 00cd 0B       		.uleb128 0xb
 4179 00ce 49       		.uleb128 0x49
 4180 00cf 13       		.uleb128 0x13
 4181 00d0 02       		.uleb128 0x2
 4182 00d1 18       		.uleb128 0x18
 4183 00d2 00       		.byte	0
 4184 00d3 00       		.byte	0
 4185 00d4 10       		.uleb128 0x10
 4186 00d5 0F       		.uleb128 0xf
 4187 00d6 00       		.byte	0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 100


 4188 00d7 0B       		.uleb128 0xb
 4189 00d8 0B       		.uleb128 0xb
 4190 00d9 49       		.uleb128 0x49
 4191 00da 13       		.uleb128 0x13
 4192 00db 00       		.byte	0
 4193 00dc 00       		.byte	0
 4194 00dd 11       		.uleb128 0x11
 4195 00de 34       		.uleb128 0x34
 4196 00df 00       		.byte	0
 4197 00e0 03       		.uleb128 0x3
 4198 00e1 0E       		.uleb128 0xe
 4199 00e2 3A       		.uleb128 0x3a
 4200 00e3 0B       		.uleb128 0xb
 4201 00e4 3B       		.uleb128 0x3b
 4202 00e5 0B       		.uleb128 0xb
 4203 00e6 49       		.uleb128 0x49
 4204 00e7 13       		.uleb128 0x13
 4205 00e8 02       		.uleb128 0x2
 4206 00e9 18       		.uleb128 0x18
 4207 00ea 00       		.byte	0
 4208 00eb 00       		.byte	0
 4209 00ec 12       		.uleb128 0x12
 4210 00ed 0B       		.uleb128 0xb
 4211 00ee 01       		.byte	0x1
 4212 00ef 11       		.uleb128 0x11
 4213 00f0 01       		.uleb128 0x1
 4214 00f1 12       		.uleb128 0x12
 4215 00f2 06       		.uleb128 0x6
 4216 00f3 00       		.byte	0
 4217 00f4 00       		.byte	0
 4218 00f5 13       		.uleb128 0x13
 4219 00f6 0B       		.uleb128 0xb
 4220 00f7 01       		.byte	0x1
 4221 00f8 11       		.uleb128 0x11
 4222 00f9 01       		.uleb128 0x1
 4223 00fa 12       		.uleb128 0x12
 4224 00fb 06       		.uleb128 0x6
 4225 00fc 01       		.uleb128 0x1
 4226 00fd 13       		.uleb128 0x13
 4227 00fe 00       		.byte	0
 4228 00ff 00       		.byte	0
 4229 0100 14       		.uleb128 0x14
 4230 0101 34       		.uleb128 0x34
 4231 0102 00       		.byte	0
 4232 0103 03       		.uleb128 0x3
 4233 0104 0E       		.uleb128 0xe
 4234 0105 3A       		.uleb128 0x3a
 4235 0106 0B       		.uleb128 0xb
 4236 0107 3B       		.uleb128 0x3b
 4237 0108 05       		.uleb128 0x5
 4238 0109 49       		.uleb128 0x49
 4239 010a 13       		.uleb128 0x13
 4240 010b 02       		.uleb128 0x2
 4241 010c 18       		.uleb128 0x18
 4242 010d 00       		.byte	0
 4243 010e 00       		.byte	0
 4244 010f 15       		.uleb128 0x15
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 101


 4245 0110 2E       		.uleb128 0x2e
 4246 0111 01       		.byte	0x1
 4247 0112 3F       		.uleb128 0x3f
 4248 0113 19       		.uleb128 0x19
 4249 0114 03       		.uleb128 0x3
 4250 0115 0E       		.uleb128 0xe
 4251 0116 3A       		.uleb128 0x3a
 4252 0117 0B       		.uleb128 0xb
 4253 0118 3B       		.uleb128 0x3b
 4254 0119 05       		.uleb128 0x5
 4255 011a 27       		.uleb128 0x27
 4256 011b 19       		.uleb128 0x19
 4257 011c 49       		.uleb128 0x49
 4258 011d 13       		.uleb128 0x13
 4259 011e 11       		.uleb128 0x11
 4260 011f 01       		.uleb128 0x1
 4261 0120 12       		.uleb128 0x12
 4262 0121 06       		.uleb128 0x6
 4263 0122 40       		.uleb128 0x40
 4264 0123 18       		.uleb128 0x18
 4265 0124 9642     		.uleb128 0x2116
 4266 0126 19       		.uleb128 0x19
 4267 0127 01       		.uleb128 0x1
 4268 0128 13       		.uleb128 0x13
 4269 0129 00       		.byte	0
 4270 012a 00       		.byte	0
 4271 012b 16       		.uleb128 0x16
 4272 012c 05       		.uleb128 0x5
 4273 012d 00       		.byte	0
 4274 012e 03       		.uleb128 0x3
 4275 012f 0E       		.uleb128 0xe
 4276 0130 3A       		.uleb128 0x3a
 4277 0131 0B       		.uleb128 0xb
 4278 0132 3B       		.uleb128 0x3b
 4279 0133 05       		.uleb128 0x5
 4280 0134 49       		.uleb128 0x49
 4281 0135 13       		.uleb128 0x13
 4282 0136 02       		.uleb128 0x2
 4283 0137 18       		.uleb128 0x18
 4284 0138 00       		.byte	0
 4285 0139 00       		.byte	0
 4286 013a 17       		.uleb128 0x17
 4287 013b 34       		.uleb128 0x34
 4288 013c 00       		.byte	0
 4289 013d 03       		.uleb128 0x3
 4290 013e 08       		.uleb128 0x8
 4291 013f 3A       		.uleb128 0x3a
 4292 0140 0B       		.uleb128 0xb
 4293 0141 3B       		.uleb128 0x3b
 4294 0142 05       		.uleb128 0x5
 4295 0143 49       		.uleb128 0x49
 4296 0144 13       		.uleb128 0x13
 4297 0145 02       		.uleb128 0x2
 4298 0146 18       		.uleb128 0x18
 4299 0147 00       		.byte	0
 4300 0148 00       		.byte	0
 4301 0149 18       		.uleb128 0x18
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 102


 4302 014a 0B       		.uleb128 0xb
 4303 014b 01       		.byte	0x1
 4304 014c 55       		.uleb128 0x55
 4305 014d 17       		.uleb128 0x17
 4306 014e 00       		.byte	0
 4307 014f 00       		.byte	0
 4308 0150 19       		.uleb128 0x19
 4309 0151 01       		.uleb128 0x1
 4310 0152 01       		.byte	0x1
 4311 0153 49       		.uleb128 0x49
 4312 0154 13       		.uleb128 0x13
 4313 0155 01       		.uleb128 0x1
 4314 0156 13       		.uleb128 0x13
 4315 0157 00       		.byte	0
 4316 0158 00       		.byte	0
 4317 0159 1A       		.uleb128 0x1a
 4318 015a 21       		.uleb128 0x21
 4319 015b 00       		.byte	0
 4320 015c 49       		.uleb128 0x49
 4321 015d 13       		.uleb128 0x13
 4322 015e 2F       		.uleb128 0x2f
 4323 015f 0B       		.uleb128 0xb
 4324 0160 00       		.byte	0
 4325 0161 00       		.byte	0
 4326 0162 1B       		.uleb128 0x1b
 4327 0163 2E       		.uleb128 0x2e
 4328 0164 01       		.byte	0x1
 4329 0165 3F       		.uleb128 0x3f
 4330 0166 19       		.uleb128 0x19
 4331 0167 03       		.uleb128 0x3
 4332 0168 0E       		.uleb128 0xe
 4333 0169 3A       		.uleb128 0x3a
 4334 016a 0B       		.uleb128 0xb
 4335 016b 3B       		.uleb128 0x3b
 4336 016c 05       		.uleb128 0x5
 4337 016d 27       		.uleb128 0x27
 4338 016e 19       		.uleb128 0x19
 4339 016f 49       		.uleb128 0x49
 4340 0170 13       		.uleb128 0x13
 4341 0171 11       		.uleb128 0x11
 4342 0172 01       		.uleb128 0x1
 4343 0173 12       		.uleb128 0x12
 4344 0174 06       		.uleb128 0x6
 4345 0175 40       		.uleb128 0x40
 4346 0176 18       		.uleb128 0x18
 4347 0177 9742     		.uleb128 0x2117
 4348 0179 19       		.uleb128 0x19
 4349 017a 01       		.uleb128 0x1
 4350 017b 13       		.uleb128 0x13
 4351 017c 00       		.byte	0
 4352 017d 00       		.byte	0
 4353 017e 1C       		.uleb128 0x1c
 4354 017f 2E       		.uleb128 0x2e
 4355 0180 01       		.byte	0x1
 4356 0181 03       		.uleb128 0x3
 4357 0182 0E       		.uleb128 0xe
 4358 0183 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 103


 4359 0184 0B       		.uleb128 0xb
 4360 0185 3B       		.uleb128 0x3b
 4361 0186 05       		.uleb128 0x5
 4362 0187 27       		.uleb128 0x27
 4363 0188 19       		.uleb128 0x19
 4364 0189 11       		.uleb128 0x11
 4365 018a 01       		.uleb128 0x1
 4366 018b 12       		.uleb128 0x12
 4367 018c 06       		.uleb128 0x6
 4368 018d 40       		.uleb128 0x40
 4369 018e 18       		.uleb128 0x18
 4370 018f 9742     		.uleb128 0x2117
 4371 0191 19       		.uleb128 0x19
 4372 0192 01       		.uleb128 0x1
 4373 0193 13       		.uleb128 0x13
 4374 0194 00       		.byte	0
 4375 0195 00       		.byte	0
 4376 0196 1D       		.uleb128 0x1d
 4377 0197 2E       		.uleb128 0x2e
 4378 0198 01       		.byte	0x1
 4379 0199 03       		.uleb128 0x3
 4380 019a 0E       		.uleb128 0xe
 4381 019b 3A       		.uleb128 0x3a
 4382 019c 0B       		.uleb128 0xb
 4383 019d 3B       		.uleb128 0x3b
 4384 019e 05       		.uleb128 0x5
 4385 019f 27       		.uleb128 0x27
 4386 01a0 19       		.uleb128 0x19
 4387 01a1 49       		.uleb128 0x49
 4388 01a2 13       		.uleb128 0x13
 4389 01a3 11       		.uleb128 0x11
 4390 01a4 01       		.uleb128 0x1
 4391 01a5 12       		.uleb128 0x12
 4392 01a6 06       		.uleb128 0x6
 4393 01a7 40       		.uleb128 0x40
 4394 01a8 18       		.uleb128 0x18
 4395 01a9 9742     		.uleb128 0x2117
 4396 01ab 19       		.uleb128 0x19
 4397 01ac 01       		.uleb128 0x1
 4398 01ad 13       		.uleb128 0x13
 4399 01ae 00       		.byte	0
 4400 01af 00       		.byte	0
 4401 01b0 1E       		.uleb128 0x1e
 4402 01b1 05       		.uleb128 0x5
 4403 01b2 00       		.byte	0
 4404 01b3 03       		.uleb128 0x3
 4405 01b4 08       		.uleb128 0x8
 4406 01b5 3A       		.uleb128 0x3a
 4407 01b6 0B       		.uleb128 0xb
 4408 01b7 3B       		.uleb128 0x3b
 4409 01b8 05       		.uleb128 0x5
 4410 01b9 49       		.uleb128 0x49
 4411 01ba 13       		.uleb128 0x13
 4412 01bb 02       		.uleb128 0x2
 4413 01bc 18       		.uleb128 0x18
 4414 01bd 00       		.byte	0
 4415 01be 00       		.byte	0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 104


 4416 01bf 1F       		.uleb128 0x1f
 4417 01c0 2E       		.uleb128 0x2e
 4418 01c1 01       		.byte	0x1
 4419 01c2 03       		.uleb128 0x3
 4420 01c3 0E       		.uleb128 0xe
 4421 01c4 3A       		.uleb128 0x3a
 4422 01c5 0B       		.uleb128 0xb
 4423 01c6 3B       		.uleb128 0x3b
 4424 01c7 05       		.uleb128 0x5
 4425 01c8 27       		.uleb128 0x27
 4426 01c9 19       		.uleb128 0x19
 4427 01ca 49       		.uleb128 0x49
 4428 01cb 13       		.uleb128 0x13
 4429 01cc 11       		.uleb128 0x11
 4430 01cd 01       		.uleb128 0x1
 4431 01ce 12       		.uleb128 0x12
 4432 01cf 06       		.uleb128 0x6
 4433 01d0 40       		.uleb128 0x40
 4434 01d1 18       		.uleb128 0x18
 4435 01d2 9642     		.uleb128 0x2116
 4436 01d4 19       		.uleb128 0x19
 4437 01d5 01       		.uleb128 0x1
 4438 01d6 13       		.uleb128 0x13
 4439 01d7 00       		.byte	0
 4440 01d8 00       		.byte	0
 4441 01d9 20       		.uleb128 0x20
 4442 01da 2E       		.uleb128 0x2e
 4443 01db 01       		.byte	0x1
 4444 01dc 03       		.uleb128 0x3
 4445 01dd 0E       		.uleb128 0xe
 4446 01de 3A       		.uleb128 0x3a
 4447 01df 0B       		.uleb128 0xb
 4448 01e0 3B       		.uleb128 0x3b
 4449 01e1 05       		.uleb128 0x5
 4450 01e2 27       		.uleb128 0x27
 4451 01e3 19       		.uleb128 0x19
 4452 01e4 49       		.uleb128 0x49
 4453 01e5 13       		.uleb128 0x13
 4454 01e6 11       		.uleb128 0x11
 4455 01e7 01       		.uleb128 0x1
 4456 01e8 12       		.uleb128 0x12
 4457 01e9 06       		.uleb128 0x6
 4458 01ea 40       		.uleb128 0x40
 4459 01eb 18       		.uleb128 0x18
 4460 01ec 9642     		.uleb128 0x2116
 4461 01ee 19       		.uleb128 0x19
 4462 01ef 00       		.byte	0
 4463 01f0 00       		.byte	0
 4464 01f1 00       		.byte	0
 4465              		.section	.debug_aranges,"",%progbits
 4466 0000 8C000000 		.4byte	0x8c
 4467 0004 0200     		.2byte	0x2
 4468 0006 00000000 		.4byte	.Ldebug_info0
 4469 000a 04       		.byte	0x4
 4470 000b 00       		.byte	0
 4471 000c 0000     		.2byte	0
 4472 000e 0000     		.2byte	0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 105


 4473 0010 00000000 		.4byte	.LFB0
 4474 0014 F6000000 		.4byte	.LFE0-.LFB0
 4475 0018 00000000 		.4byte	.LFB1
 4476 001c 2A030000 		.4byte	.LFE1-.LFB1
 4477 0020 00000000 		.4byte	.LFB2
 4478 0024 32030000 		.4byte	.LFE2-.LFB2
 4479 0028 00000000 		.4byte	.LFB3
 4480 002c FE000000 		.4byte	.LFE3-.LFB3
 4481 0030 00000000 		.4byte	.LFB4
 4482 0034 16000000 		.4byte	.LFE4-.LFB4
 4483 0038 00000000 		.4byte	.LFB5
 4484 003c 66000000 		.4byte	.LFE5-.LFB5
 4485 0040 00000000 		.4byte	.LFB6
 4486 0044 3C000000 		.4byte	.LFE6-.LFB6
 4487 0048 00000000 		.4byte	.LFB7
 4488 004c B0000000 		.4byte	.LFE7-.LFB7
 4489 0050 00000000 		.4byte	.LFB8
 4490 0054 AE000000 		.4byte	.LFE8-.LFB8
 4491 0058 00000000 		.4byte	.LFB9
 4492 005c 6A000000 		.4byte	.LFE9-.LFB9
 4493 0060 00000000 		.4byte	.LFB10
 4494 0064 46000000 		.4byte	.LFE10-.LFB10
 4495 0068 00000000 		.4byte	.LFB11
 4496 006c 80000000 		.4byte	.LFE11-.LFB11
 4497 0070 00000000 		.4byte	.LFB12
 4498 0074 E0000000 		.4byte	.LFE12-.LFB12
 4499 0078 00000000 		.4byte	.LFB13
 4500 007c F6000000 		.4byte	.LFE13-.LFB13
 4501 0080 00000000 		.4byte	.LFB14
 4502 0084 F4000000 		.4byte	.LFE14-.LFB14
 4503 0088 00000000 		.4byte	0
 4504 008c 00000000 		.4byte	0
 4505              		.section	.debug_ranges,"",%progbits
 4506              	.Ldebug_ranges0:
 4507 0000 70000000 		.4byte	.LBB7
 4508 0004 00030000 		.4byte	.LBE7
 4509 0008 22030000 		.4byte	.LBB9
 4510 000c 24030000 		.4byte	.LBE9
 4511 0010 00000000 		.4byte	0
 4512 0014 00000000 		.4byte	0
 4513 0018 00000000 		.4byte	.LFB0
 4514 001c F6000000 		.4byte	.LFE0
 4515 0020 00000000 		.4byte	.LFB1
 4516 0024 2A030000 		.4byte	.LFE1
 4517 0028 00000000 		.4byte	.LFB2
 4518 002c 32030000 		.4byte	.LFE2
 4519 0030 00000000 		.4byte	.LFB3
 4520 0034 FE000000 		.4byte	.LFE3
 4521 0038 00000000 		.4byte	.LFB4
 4522 003c 16000000 		.4byte	.LFE4
 4523 0040 00000000 		.4byte	.LFB5
 4524 0044 66000000 		.4byte	.LFE5
 4525 0048 00000000 		.4byte	.LFB6
 4526 004c 3C000000 		.4byte	.LFE6
 4527 0050 00000000 		.4byte	.LFB7
 4528 0054 B0000000 		.4byte	.LFE7
 4529 0058 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 106


 4530 005c AE000000 		.4byte	.LFE8
 4531 0060 00000000 		.4byte	.LFB9
 4532 0064 6A000000 		.4byte	.LFE9
 4533 0068 00000000 		.4byte	.LFB10
 4534 006c 46000000 		.4byte	.LFE10
 4535 0070 00000000 		.4byte	.LFB11
 4536 0074 80000000 		.4byte	.LFE11
 4537 0078 00000000 		.4byte	.LFB12
 4538 007c E0000000 		.4byte	.LFE12
 4539 0080 00000000 		.4byte	.LFB13
 4540 0084 F6000000 		.4byte	.LFE13
 4541 0088 00000000 		.4byte	.LFB14
 4542 008c F4000000 		.4byte	.LFE14
 4543 0090 00000000 		.4byte	0
 4544 0094 00000000 		.4byte	0
 4545              		.section	.debug_line,"",%progbits
 4546              	.Ldebug_line0:
 4547 0000 E3040000 		.section	.debug_str,"MS",%progbits,1
 4547      02005B00 
 4547      00000201 
 4547      FB0E0D00 
 4547      01010101 
 4548              	.LASF10:
 4549 0000 75696E74 		.ascii	"uint16\000"
 4549      313600
 4550              	.LASF79:
 4551 0007 726F7754 		.ascii	"rowToWrPtr\000"
 4551      6F577250 
 4551      747200
 4552              	.LASF66:
 4553 0012 746D7044 		.ascii	"tmpData\000"
 4553      61746100 
 4554              	.LASF33:
 4555 001a 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 4555      6E5F656D 
 4555      5F656570 
 4555      726F6D5F 
 4555      73746174 
 4556              	.LASF76:
 4557 0033 656D4565 		.ascii	"emEepromAddr\000"
 4557      70726F6D 
 4557      41646472 
 4557      00
 4558              	.LASF87:
 4559 0040 726F774E 		.ascii	"rowNum\000"
 4559      756D00
 4560              	.LASF25:
 4561 0047 6E756D62 		.ascii	"numberOfRows\000"
 4561      65724F66 
 4561      526F7773 
 4561      00
 4562              	.LASF67:
 4563 0054 6E756D57 		.ascii	"numWrites\000"
 4563      72697465 
 4563      7300
 4564              	.LASF7:
 4565 005e 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 107


 4565      206C6F6E 
 4565      6720756E 
 4565      7369676E 
 4565      65642069 
 4566              	.LASF38:
 4567 0075 61646472 		.ascii	"addr\000"
 4567      00
 4568              	.LASF18:
 4569 007a 65657072 		.ascii	"eepromSize\000"
 4569      6F6D5369 
 4569      7A6500
 4570              	.LASF6:
 4571 0085 6C6F6E67 		.ascii	"long long int\000"
 4571      206C6F6E 
 4571      6720696E 
 4571      7400
 4572              	.LASF0:
 4573 0093 7369676E 		.ascii	"signed char\000"
 4573      65642063 
 4573      68617200 
 4574              	.LASF85:
 4575 009f 57726974 		.ascii	"WriteRow\000"
 4575      65526F77 
 4575      00
 4576              	.LASF77:
 4577 00a8 46696E64 		.ascii	"FindLastWrittenRow\000"
 4577      4C617374 
 4577      57726974 
 4577      74656E52 
 4577      6F7700
 4578              	.LASF101:
 4579 00bb 47656E65 		.ascii	"Generated_Source\\PSoC4\\cy_em_eeprom.c\000"
 4579      72617465 
 4579      645F536F 
 4579      75726365 
 4579      5C50536F 
 4580              	.LASF32:
 4581 00e1 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 4581      4D5F4545 
 4581      50524F4D 
 4581      5F575249 
 4581      54455F46 
 4582              	.LASF72:
 4583 00f9 43795F45 		.ascii	"Cy_Em_EEPROM_NumWrites\000"
 4583      6D5F4545 
 4583      50524F4D 
 4583      5F4E756D 
 4583      57726974 
 4584              	.LASF4:
 4585 0110 6C6F6E67 		.ascii	"long int\000"
 4585      20696E74 
 4585      00
 4586              	.LASF22:
 4587 0119 75736572 		.ascii	"userFlashStartAddr\000"
 4587      466C6173 
 4587      68537461 
 4587      72744164 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 108


 4587      647200
 4588              	.LASF9:
 4589 012c 75696E74 		.ascii	"uint8\000"
 4589      3800
 4590              	.LASF13:
 4591 0132 646F7562 		.ascii	"double\000"
 4591      6C6500
 4592              	.LASF73:
 4593 0139 6C617374 		.ascii	"lastWrRowPtr\000"
 4593      5772526F 
 4593      77507472 
 4593      00
 4594              	.LASF11:
 4595 0146 75696E74 		.ascii	"uint32\000"
 4595      333200
 4596              	.LASF45:
 4597 014d 61637445 		.ascii	"actEepromRowNum\000"
 4597      6570726F 
 4597      6D526F77 
 4597      4E756D00 
 4598              	.LASF68:
 4599 015d 65654865 		.ascii	"eeHeaderDataOffset\000"
 4599      61646572 
 4599      44617461 
 4599      4F666673 
 4599      657400
 4600              	.LASF52:
 4601 0170 75706461 		.ascii	"updateAddrFlag\000"
 4601      74654164 
 4601      6472466C 
 4601      616700
 4602              	.LASF75:
 4603 017f 6E756D52 		.ascii	"numRows\000"
 4603      6F777300 
 4604              	.LASF54:
 4605 0187 64617461 		.ascii	"dataEndEepromRowNum\000"
 4605      456E6445 
 4605      6570726F 
 4605      6D526F77 
 4605      4E756D00 
 4606              	.LASF89:
 4607 019b 72616D42 		.ascii	"ramBuffAddr\000"
 4607      75666641 
 4607      64647200 
 4608              	.LASF20:
 4609 01a7 72656475 		.ascii	"redundantCopy\000"
 4609      6E64616E 
 4609      74436F70 
 4609      7900
 4610              	.LASF70:
 4611 01b5 64617461 		.ascii	"dataAddr\000"
 4611      41646472 
 4611      00
 4612              	.LASF8:
 4613 01be 756E7369 		.ascii	"unsigned int\000"
 4613      676E6564 
 4613      20696E74 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 109


 4613      00
 4614              	.LASF93:
 4615 01cb 6E756D42 		.ascii	"numBytes\000"
 4615      79746573 
 4615      00
 4616              	.LASF5:
 4617 01d4 6C6F6E67 		.ascii	"long unsigned int\000"
 4617      20756E73 
 4617      69676E65 
 4617      6420696E 
 4617      7400
 4618              	.LASF95:
 4619 01e6 47657441 		.ascii	"GetAddresses\000"
 4619      64647265 
 4619      73736573 
 4619      00
 4620              	.LASF102:
 4621 01f3 443A5C4E 		.ascii	"D:\\Nico\\Archivos\\lib_psoc\\Cypress-PSOC-OLED-mas"
 4621      69636F5C 
 4621      41726368 
 4621      69766F73 
 4621      5C6C6962 
 4622 0222 7465725C 		.ascii	"ter\\OLED.cydsn\000"
 4622      4F4C4544 
 4622      2E637964 
 4622      736E00
 4623              	.LASF90:
 4624 0231 43686563 		.ascii	"CheckCrcAndCopy\000"
 4624      6B437263 
 4624      416E6443 
 4624      6F707900 
 4625              	.LASF57:
 4626 0241 7372634F 		.ascii	"srcOffset\000"
 4626      66667365 
 4626      7400
 4627              	.LASF40:
 4628 024b 73697A65 		.ascii	"size\000"
 4628      00
 4629              	.LASF3:
 4630 0250 73686F72 		.ascii	"short unsigned int\000"
 4630      7420756E 
 4630      7369676E 
 4630      65642069 
 4630      6E7400
 4631              	.LASF61:
 4632 0263 61637445 		.ascii	"actEmEepromRowNum\000"
 4632      6D456570 
 4632      726F6D52 
 4632      6F774E75 
 4632      6D00
 4633              	.LASF80:
 4634 0275 726F7754 		.ascii	"rowToRdPtr\000"
 4634      6F526450 
 4634      747200
 4635              	.LASF65:
 4636 0280 656D4565 		.ascii	"emEepromRowRdAddr\000"
 4636      70726F6D 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 110


 4636      526F7752 
 4636      64416464 
 4636      7200
 4637              	.LASF39:
 4638 0292 65657072 		.ascii	"eepromData\000"
 4638      6F6D4461 
 4638      746100
 4639              	.LASF91:
 4640 029d 64737441 		.ascii	"dstAddr\000"
 4640      64647200 
 4641              	.LASF44:
 4642 02a5 73746172 		.ascii	"startRowAddr\000"
 4642      74526F77 
 4642      41646472 
 4642      00
 4643              	.LASF100:
 4644 02b2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4644      43313120 
 4644      352E342E 
 4644      31203230 
 4644      31363036 
 4645 02e5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4645      20726576 
 4645      6973696F 
 4645      6E203233 
 4645      37373135 
 4646 0318 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4646      66756E63 
 4646      74696F6E 
 4646      2D736563 
 4646      74696F6E 
 4647              	.LASF42:
 4648 0340 63757245 		.ascii	"curEepromBaseAddr\000"
 4648      6570726F 
 4648      6D426173 
 4648      65416464 
 4648      7200
 4649              	.LASF37:
 4650 0352 43795F45 		.ascii	"Cy_Em_EEPROM_Read\000"
 4650      6D5F4545 
 4650      50524F4D 
 4650      5F526561 
 4650      6400
 4651              	.LASF88:
 4652 0364 45726173 		.ascii	"EraseRow\000"
 4652      65526F77 
 4652      00
 4653              	.LASF29:
 4654 036d 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 4654      4D5F4545 
 4654      50524F4D 
 4654      5F424144 
 4654      5F504152 
 4655              	.LASF30:
 4656 0384 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 4656      4D5F4545 
 4656      50524F4D 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 111


 4656      5F424144 
 4656      5F434845 
 4657              	.LASF17:
 4658 039e 73697A65 		.ascii	"sizetype\000"
 4658      74797065 
 4658      00
 4659              	.LASF16:
 4660 03a7 6C6F6E67 		.ascii	"long double\000"
 4660      20646F75 
 4660      626C6500 
 4661              	.LASF71:
 4662 03b3 43795F45 		.ascii	"Cy_Em_EEPROM_Erase\000"
 4662      6D5F4545 
 4662      50524F4D 
 4662      5F457261 
 4662      736500
 4663              	.LASF59:
 4664 03c6 43795F45 		.ascii	"Cy_Em_EEPROM_Write\000"
 4664      6D5F4545 
 4664      50524F4D 
 4664      5F577269 
 4664      746500
 4665              	.LASF51:
 4666 03d9 7365714E 		.ascii	"seqNum\000"
 4666      756D00
 4667              	.LASF27:
 4668 03e0 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 4668      74635F65 
 4668      6570726F 
 4668      6D5F636F 
 4668      6E746578 
 4669              	.LASF78:
 4670 03f8 4765744E 		.ascii	"GetNextRowToWrite\000"
 4670      65787452 
 4670      6F77546F 
 4670      57726974 
 4670      6500
 4671              	.LASF98:
 4672 040a 46696C6C 		.ascii	"FillChecksum\000"
 4672      43686563 
 4672      6B73756D 
 4672      00
 4673              	.LASF84:
 4674 0417 43686563 		.ascii	"CheckRanges\000"
 4674      6B52616E 
 4674      67657300 
 4675              	.LASF99:
 4676 0423 77724164 		.ascii	"wrAddr\000"
 4676      647200
 4677              	.LASF60:
 4678 042a 7772436E 		.ascii	"wrCnt\000"
 4678      7400
 4679              	.LASF12:
 4680 0430 666C6F61 		.ascii	"float\000"
 4680      7400
 4681              	.LASF56:
 4682 0436 656E6441 		.ascii	"endAddr\000"
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 112


 4682      64647200 
 4683              	.LASF31:
 4684 043e 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 4684      4D5F4545 
 4684      50524F4D 
 4684      5F424144 
 4684      5F444154 
 4685              	.LASF24:
 4686 0454 776C456E 		.ascii	"wlEndAddr\000"
 4686      64416464 
 4686      7200
 4687              	.LASF1:
 4688 045e 756E7369 		.ascii	"unsigned char\000"
 4688      676E6564 
 4688      20636861 
 4688      7200
 4689              	.LASF86:
 4690 046c 726F7741 		.ascii	"rowAddr\000"
 4690      64647200 
 4691              	.LASF2:
 4692 0474 73686F72 		.ascii	"short int\000"
 4692      7420696E 
 4692      7400
 4693              	.LASF74:
 4694 047e 70726576 		.ascii	"prevSeqNum\000"
 4694      5365714E 
 4694      756D00
 4695              	.LASF69:
 4696 0489 736B6970 		.ascii	"skipOperation\000"
 4696      4F706572 
 4696      6174696F 
 4696      6E00
 4697              	.LASF47:
 4698 0497 64617461 		.ascii	"dataStartEepromRowNum\000"
 4698      53746172 
 4698      74456570 
 4698      726F6D52 
 4698      6F774E75 
 4699              	.LASF36:
 4700 04ad 43795F45 		.ascii	"Cy_Em_EEPROM_Init\000"
 4700      6D5F4545 
 4700      50524F4D 
 4700      5F496E69 
 4700      7400
 4701              	.LASF62:
 4702 04bf 77726974 		.ascii	"writeRamBuffer\000"
 4702      6552616D 
 4702      42756666 
 4702      657200
 4703              	.LASF92:
 4704 04ce 726F774F 		.ascii	"rowOffset\000"
 4704      66667365 
 4704      7400
 4705              	.LASF94:
 4706 04d8 72635374 		.ascii	"rcStartRowAddr\000"
 4706      61727452 
 4706      6F774164 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 113


 4706      647200
 4707              	.LASF14:
 4708 04e7 63686172 		.ascii	"char\000"
 4708      00
 4709              	.LASF34:
 4710 04ec 636F6E66 		.ascii	"config\000"
 4710      696700
 4711              	.LASF41:
 4712 04f3 6E756D42 		.ascii	"numBytesToRead\000"
 4712      79746573 
 4712      546F5265 
 4712      616400
 4713              	.LASF55:
 4714 0502 73746172 		.ascii	"startAddr\000"
 4714      74416464 
 4714      7200
 4715              	.LASF97:
 4716 050c 736B6970 		.ascii	"skip\000"
 4716      00
 4717              	.LASF96:
 4718 0511 6F666673 		.ascii	"offset\000"
 4718      657400
 4719              	.LASF35:
 4720 0518 636F6E74 		.ascii	"context\000"
 4720      65787400 
 4721              	.LASF26:
 4722 0520 6C617374 		.ascii	"lastWrRowAddr\000"
 4722      5772526F 
 4722      77416464 
 4722      7200
 4723              	.LASF63:
 4724 052e 746D7052 		.ascii	"tmpRowAddr\000"
 4724      6F774164 
 4724      647200
 4725              	.LASF43:
 4726 0539 63757252 		.ascii	"curRowOffset\000"
 4726      6F774F66 
 4726      66736574 
 4726      00
 4727              	.LASF23:
 4728 0546 63795F73 		.ascii	"cy_stc_eeprom_config_t\000"
 4728      74635F65 
 4728      6570726F 
 4728      6D5F636F 
 4728      6E666967 
 4729              	.LASF50:
 4730 055d 72645369 		.ascii	"rdSize\000"
 4730      7A6500
 4731              	.LASF19:
 4732 0564 77656172 		.ascii	"wearLevelingFactor\000"
 4732      4C657665 
 4732      6C696E67 
 4732      46616374 
 4732      6F7200
 4733              	.LASF49:
 4734 0577 72644164 		.ascii	"rdAddr\000"
 4734      647200
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccq1zlyX.s 			page 114


 4735              	.LASF58:
 4736 057e 6473744F 		.ascii	"dstOffset\000"
 4736      66667365 
 4736      7400
 4737              	.LASF81:
 4738 0588 47657452 		.ascii	"GetRowAddrBySeqNum\000"
 4738      6F774164 
 4738      64724279 
 4738      5365714E 
 4738      756D00
 4739              	.LASF28:
 4740 059b 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 4740      4D5F4545 
 4740      50524F4D 
 4740      5F535543 
 4740      43455353 
 4741              	.LASF21:
 4742 05b0 626C6F63 		.ascii	"blockingWrite\000"
 4742      6B696E67 
 4742      57726974 
 4742      6500
 4743              	.LASF46:
 4744 05be 63757252 		.ascii	"curRdEepromRowNum\000"
 4744      64456570 
 4744      726F6D52 
 4744      6F774E75 
 4744      6D00
 4745              	.LASF15:
 4746 05d0 63797374 		.ascii	"cystatus\000"
 4746      61747573 
 4746      00
 4747              	.LASF82:
 4748 05d9 43616C63 		.ascii	"CalcChecksum\000"
 4748      43686563 
 4748      6B73756D 
 4748      00
 4749              	.LASF83:
 4750 05e6 726F7744 		.ascii	"rowData\000"
 4750      61746100 
 4751              	.LASF53:
 4752 05ee 6E756D52 		.ascii	"numRowReads\000"
 4752      6F775265 
 4752      61647300 
 4753              	.LASF64:
 4754 05fa 656D4565 		.ascii	"emEepromRowAddr\000"
 4754      70726F6D 
 4754      526F7741 
 4754      64647200 
 4755              	.LASF48:
 4756 060a 65654461 		.ascii	"eeData\000"
 4756      746100
 4757              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
