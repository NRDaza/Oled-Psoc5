ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cyPm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysPmSleep,"ax",%progbits
  20              		.align	2
  21              		.global	CySysPmSleep
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysPmSleep, %function
  25              	CySysPmSleep:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\cyPm.c"
   1:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/cyPm.c **** * File Name: cyPm.c
   3:Generated_Source\PSoC4/cyPm.c **** * Version 4.20
   4:Generated_Source\PSoC4/cyPm.c **** *
   5:Generated_Source\PSoC4/cyPm.c **** *  Description:
   6:Generated_Source\PSoC4/cyPm.c **** *   Provides an API for the power management.
   7:Generated_Source\PSoC4/cyPm.c **** *
   8:Generated_Source\PSoC4/cyPm.c **** *  Note:
   9:Generated_Source\PSoC4/cyPm.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/cyPm.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/cyPm.c **** *
  12:Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  13:Generated_Source\PSoC4/cyPm.c **** * Copyright 2011-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/cyPm.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/cyPm.c **** 
  19:Generated_Source\PSoC4/cyPm.c **** #include "cyPm.h"
  20:Generated_Source\PSoC4/cyPm.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/cyPm.c **** 
  22:Generated_Source\PSoC4/cyPm.c **** 
  23:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmSleep
  25:Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  26:Generated_Source\PSoC4/cyPm.c **** *
  27:Generated_Source\PSoC4/cyPm.c **** * Summary:
  28:Generated_Source\PSoC4/cyPm.c **** *  Puts the part into the Sleep state. This is a CPU-centric power mode.
  29:Generated_Source\PSoC4/cyPm.c **** *  It means that the CPU has indicated that it is in the sleep mode and
  30:Generated_Source\PSoC4/cyPm.c **** *  its main clock can be removed. It is identical to Active from a peripheral
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 2


  31:Generated_Source\PSoC4/cyPm.c **** *  point of view. Any enabled interrupts can cause wakeup from the  Sleep mode.
  32:Generated_Source\PSoC4/cyPm.c **** *
  33:Generated_Source\PSoC4/cyPm.c **** * Parameters:
  34:Generated_Source\PSoC4/cyPm.c **** *  None
  35:Generated_Source\PSoC4/cyPm.c **** *
  36:Generated_Source\PSoC4/cyPm.c **** * Return:
  37:Generated_Source\PSoC4/cyPm.c **** *  None
  38:Generated_Source\PSoC4/cyPm.c **** *
  39:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  40:Generated_Source\PSoC4/cyPm.c **** void CySysPmSleep(void)
  41:Generated_Source\PSoC4/cyPm.c **** {
  28              		.loc 1 41 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  42:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  43:Generated_Source\PSoC4/cyPm.c **** 
  44:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  41              		.loc 1 44 0
  42 0006 FC1D     		adds	r4, r7, #7
  43 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  44 000c 0300     		movs	r3, r0
  45 000e 2370     		strb	r3, [r4]
  45:Generated_Source\PSoC4/cyPm.c **** 
  46:Generated_Source\PSoC4/cyPm.c ****     /* CM0 enters Sleep mode upon execution of WFI */
  47:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CM0_SCR_REG &= (uint32) (~CY_PM_CM0_SCR_SLEEPDEEP);
  46              		.loc 1 47 0
  47 0010 074B     		ldr	r3, .L2
  48 0012 074A     		ldr	r2, .L2
  49 0014 1268     		ldr	r2, [r2]
  50 0016 0421     		movs	r1, #4
  51 0018 8A43     		bics	r2, r1
  52 001a 1A60     		str	r2, [r3]
  48:Generated_Source\PSoC4/cyPm.c **** 
  49:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  50:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
  53              		.loc 1 50 0
  54              		.syntax divided
  55              	@ 50 "Generated_Source\PSoC4\cyPm.c" 1
  56 001c 30BF     		WFI 
  57              	
  58              	@ 0 "" 2
  51:Generated_Source\PSoC4/cyPm.c **** 
  52:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
  59              		.loc 1 52 0
  60              		.thumb
  61              		.syntax unified
  62 001e FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 3


  63 0020 1B78     		ldrb	r3, [r3]
  64 0022 1800     		movs	r0, r3
  65 0024 FFF7FEFF 		bl	CyExitCriticalSection
  53:Generated_Source\PSoC4/cyPm.c **** }
  66              		.loc 1 53 0
  67 0028 C046     		nop
  68 002a BD46     		mov	sp, r7
  69 002c 03B0     		add	sp, sp, #12
  70              		@ sp needed
  71 002e 90BD     		pop	{r4, r7, pc}
  72              	.L3:
  73              		.align	2
  74              	.L2:
  75 0030 10ED00E0 		.word	-536810224
  76              		.cfi_endproc
  77              	.LFE0:
  78              		.size	CySysPmSleep, .-CySysPmSleep
  79              		.section	.text.CySysPmDeepSleep,"ax",%progbits
  80              		.align	2
  81              		.global	CySysPmDeepSleep
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysPmDeepSleep, %function
  85              	CySysPmDeepSleep:
  86              	.LFB1:
  54:Generated_Source\PSoC4/cyPm.c **** 
  55:Generated_Source\PSoC4/cyPm.c **** 
  56:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  57:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmDeepSleep
  58:Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  59:Generated_Source\PSoC4/cyPm.c **** *
  60:Generated_Source\PSoC4/cyPm.c **** * Summary:
  61:Generated_Source\PSoC4/cyPm.c **** *  Puts the part into the Deep Sleep state. If the firmware attempts to enter
  62:Generated_Source\PSoC4/cyPm.c **** *  this mode before the system is ready (that is, when
  63:Generated_Source\PSoC4/cyPm.c **** *  PWR_CONTROL.LPM_READY = 0), then the device will go into the Sleep mode
  64:Generated_Source\PSoC4/cyPm.c **** *  instead and automatically enter the originally intended mode when the
  65:Generated_Source\PSoC4/cyPm.c **** *  holdoff expires.
  66:Generated_Source\PSoC4/cyPm.c **** *
  67:Generated_Source\PSoC4/cyPm.c **** *  The wakeup occurs when an interrupt is received from a DeepSleep or
  68:Generated_Source\PSoC4/cyPm.c **** *  Hibernate peripheral. For more details, see a corresponding
  69:Generated_Source\PSoC4/cyPm.c **** *  peripheral's datasheet.
  70:Generated_Source\PSoC4/cyPm.c **** *
  71:Generated_Source\PSoC4/cyPm.c **** * Parameters:
  72:Generated_Source\PSoC4/cyPm.c **** *  None
  73:Generated_Source\PSoC4/cyPm.c **** *
  74:Generated_Source\PSoC4/cyPm.c **** * Return:
  75:Generated_Source\PSoC4/cyPm.c **** *  None
  76:Generated_Source\PSoC4/cyPm.c **** *
  77:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  78:Generated_Source\PSoC4/cyPm.c **** void CySysPmDeepSleep(void)
  79:Generated_Source\PSoC4/cyPm.c **** {
  87              		.loc 1 79 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 8
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 90B5     		push	{r4, r7, lr}
  92              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 4


  93              		.cfi_offset 4, -12
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 83B0     		sub	sp, sp, #12
  97              		.cfi_def_cfa_offset 24
  98 0004 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
  80:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  81:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  82:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 clkSelectReg;
  83:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  84:Generated_Source\PSoC4/cyPm.c **** 
  85:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
 100              		.loc 1 85 0
 101 0006 FC1D     		adds	r4, r7, #7
 102 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 103 000c 0300     		movs	r3, r0
 104 000e 2370     		strb	r3, [r4]
  86:Generated_Source\PSoC4/cyPm.c **** 
  87:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  88:Generated_Source\PSoC4/cyPm.c ****         /* Device enters DeepSleep mode when CPU asserts SLEEPDEEP signal */
  89:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG &= (uint32) (~CY_PM_PWR_CONTROL_HIBERNATE);
 105              		.loc 1 89 0
 106 0010 194B     		ldr	r3, .L5
 107 0012 194A     		ldr	r2, .L5
 108 0014 1268     		ldr	r2, [r2]
 109 0016 5200     		lsls	r2, r2, #1
 110 0018 5208     		lsrs	r2, r2, #1
 111 001a 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  91:Generated_Source\PSoC4/cyPm.c **** 
  92:Generated_Source\PSoC4/cyPm.c ****     #if (CY_PSOC4_4100 || CY_PSOC4_4200)
  93:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG |= CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS;
 112              		.loc 1 93 0
 113 001c 8023     		movs	r3, #128
 114 001e DB05     		lsls	r3, r3, #23
 115 0020 8022     		movs	r2, #128
 116 0022 D205     		lsls	r2, r2, #23
 117 0024 1268     		ldr	r2, [r2]
 118 0026 0221     		movs	r1, #2
 119 0028 0A43     		orrs	r2, r1
 120 002a 1A60     		str	r2, [r3]
  94:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200) */
  95:Generated_Source\PSoC4/cyPm.c **** 
  96:Generated_Source\PSoC4/cyPm.c ****     /* Adjust delay to wait for references to settle on wakeup from Deep Sleep */
  97:Generated_Source\PSoC4/cyPm.c ****     CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_DPSLP_KEY_DELAY_REG;
 121              		.loc 1 97 0
 122 002c 134B     		ldr	r3, .L5+4
 123 002e 144A     		ldr	r2, .L5+8
 124 0030 1288     		ldrh	r2, [r2]
 125 0032 92B2     		uxth	r2, r2
 126 0034 1A60     		str	r2, [r3]
  98:Generated_Source\PSoC4/cyPm.c **** 
  99:Generated_Source\PSoC4/cyPm.c ****     /* CM0 enters DeepSleep/Hibernate mode upon execution of WFI */
 100:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CM0_SCR_REG |= CY_PM_CM0_SCR_SLEEPDEEP;
 127              		.loc 1 100 0
 128 0036 134B     		ldr	r3, .L5+12
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 5


 129 0038 124A     		ldr	r2, .L5+12
 130 003a 1268     		ldr	r2, [r2]
 131 003c 0421     		movs	r1, #4
 132 003e 0A43     		orrs	r2, r1
 133 0040 1A60     		str	r2, [r3]
 101:Generated_Source\PSoC4/cyPm.c **** 
 102:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
 103:Generated_Source\PSoC4/cyPm.c ****         /* Preserve system clock configuration and
 104:Generated_Source\PSoC4/cyPm.c ****         * reduce sysclk to <=12 MHz (Cypress ID #158710, #179888).
 105:Generated_Source\PSoC4/cyPm.c ****         */
 106:Generated_Source\PSoC4/cyPm.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
 134              		.loc 1 106 0
 135 0042 114B     		ldr	r3, .L5+16
 136 0044 1B68     		ldr	r3, [r3]
 137 0046 3B60     		str	r3, [r7]
 107:Generated_Source\PSoC4/cyPm.c ****         CySysClkWriteSysclkDiv(CY_SYS_CLK_SYSCLK_DIV4);
 138              		.loc 1 107 0
 139 0048 0220     		movs	r0, #2
 140 004a FFF7FEFF 		bl	CySysClkWriteSysclkDiv
 108:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 109:Generated_Source\PSoC4/cyPm.c **** 
 110:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
 111:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
 141              		.loc 1 111 0
 142              		.syntax divided
 143              	@ 111 "Generated_Source\PSoC4\cyPm.c" 1
 144 004e 30BF     		WFI 
 145              	
 146              	@ 0 "" 2
 112:Generated_Source\PSoC4/cyPm.c **** 
 113:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
 114:Generated_Source\PSoC4/cyPm.c ****         /* Restore system clock configuration */
 115:Generated_Source\PSoC4/cyPm.c ****         CY_SYS_CLK_SELECT_REG = clkSelectReg;
 147              		.loc 1 115 0
 148              		.thumb
 149              		.syntax unified
 150 0050 0D4B     		ldr	r3, .L5+16
 151 0052 3A68     		ldr	r2, [r7]
 152 0054 1A60     		str	r2, [r3]
 116:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 117:Generated_Source\PSoC4/cyPm.c **** 
 118:Generated_Source\PSoC4/cyPm.c ****     #if (CY_PSOC4_4100 || CY_PSOC4_4200)
 119:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG &= (uint32) (~CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS);
 153              		.loc 1 119 0
 154 0056 8023     		movs	r3, #128
 155 0058 DB05     		lsls	r3, r3, #23
 156 005a 8022     		movs	r2, #128
 157 005c D205     		lsls	r2, r2, #23
 158 005e 1268     		ldr	r2, [r2]
 159 0060 0221     		movs	r1, #2
 160 0062 8A43     		bics	r2, r1
 161 0064 1A60     		str	r2, [r3]
 120:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200) */
 121:Generated_Source\PSoC4/cyPm.c **** 
 122:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
 162              		.loc 1 122 0
 163 0066 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 6


 164 0068 1B78     		ldrb	r3, [r3]
 165 006a 1800     		movs	r0, r3
 166 006c FFF7FEFF 		bl	CyExitCriticalSection
 123:Generated_Source\PSoC4/cyPm.c **** }
 167              		.loc 1 123 0
 168 0070 C046     		nop
 169 0072 BD46     		mov	sp, r7
 170 0074 03B0     		add	sp, sp, #12
 171              		@ sp needed
 172 0076 90BD     		pop	{r4, r7, pc}
 173              	.L6:
 174              		.align	2
 175              	.L5:
 176 0078 00000B40 		.word	1074462720
 177 007c 0C000B40 		.word	1074462732
 178 0080 52F1FF0F 		.word	268431698
 179 0084 10ED00E0 		.word	-536810224
 180 0088 00010B40 		.word	1074462976
 181              		.cfi_endproc
 182              	.LFE1:
 183              		.size	CySysPmDeepSleep, .-CySysPmDeepSleep
 184              		.section	.text.CySysPmHibernate,"ax",%progbits
 185              		.align	2
 186              		.global	CySysPmHibernate
 187              		.code	16
 188              		.thumb_func
 189              		.type	CySysPmHibernate, %function
 190              	CySysPmHibernate:
 191              	.LFB2:
 124:Generated_Source\PSoC4/cyPm.c **** 
 125:Generated_Source\PSoC4/cyPm.c **** 
 126:Generated_Source\PSoC4/cyPm.c **** #if(CY_IP_SRSSV2)
 127:Generated_Source\PSoC4/cyPm.c **** 
 128:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 129:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmHibernate
 130:Generated_Source\PSoC4/cyPm.c ****     ********************************************************************************
 131:Generated_Source\PSoC4/cyPm.c ****     *
 132:Generated_Source\PSoC4/cyPm.c ****     * Summary:
 133:Generated_Source\PSoC4/cyPm.c ****     *  Puts the part into the Hibernate state. Only SRAM and UDBs are retained;
 134:Generated_Source\PSoC4/cyPm.c ****     *  most internal supplies are off. Wakeup is possible from a pin or a hibernate
 135:Generated_Source\PSoC4/cyPm.c ****     *  comparator only.
 136:Generated_Source\PSoC4/cyPm.c ****     *
 137:Generated_Source\PSoC4/cyPm.c ****     *  It is expected that the firmware has already frozen the IO-Cells using
 138:Generated_Source\PSoC4/cyPm.c ****     *  CySysPmFreezeIo() function before the call to this function. If this is
 139:Generated_Source\PSoC4/cyPm.c ****     *  omitted, the IO-cells will be frozen in the same way as they are
 140:Generated_Source\PSoC4/cyPm.c ****     *  in the Active to Deep Sleep transition, but will lose their state on wake up
 141:Generated_Source\PSoC4/cyPm.c ****     *  (because of the reset occurring at that time).
 142:Generated_Source\PSoC4/cyPm.c ****     *
 143:Generated_Source\PSoC4/cyPm.c ****     *  Because all the CPU state is lost, the CPU will start up at the reset vector.
 144:Generated_Source\PSoC4/cyPm.c ****     *  To save the firmware state through the Hibernate low power mode, a
 145:Generated_Source\PSoC4/cyPm.c ****     *  corresponding variable should be defined with CY_NOINIT attribute. It
 146:Generated_Source\PSoC4/cyPm.c ****     *  prevents data from being initialized to zero on startup. The interrupt
 147:Generated_Source\PSoC4/cyPm.c ****     *  cause of the hibernate peripheral is retained, such that it can be either
 148:Generated_Source\PSoC4/cyPm.c ****     *  read by the firmware or cause an interrupt after the firmware has booted and
 149:Generated_Source\PSoC4/cyPm.c ****     *  enabled the corresponding interrupt. To distinguish the wakeup from
 150:Generated_Source\PSoC4/cyPm.c ****     *  the Hibernate mode and the general Reset event, the CySysPmGetResetReason()
 151:Generated_Source\PSoC4/cyPm.c ****     *  function could be used.
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 7


 152:Generated_Source\PSoC4/cyPm.c ****     *
 153:Generated_Source\PSoC4/cyPm.c ****     * Parameters:
 154:Generated_Source\PSoC4/cyPm.c ****     *  None
 155:Generated_Source\PSoC4/cyPm.c ****     *
 156:Generated_Source\PSoC4/cyPm.c ****     * Return:
 157:Generated_Source\PSoC4/cyPm.c ****     *  None
 158:Generated_Source\PSoC4/cyPm.c ****     *
 159:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 160:Generated_Source\PSoC4/cyPm.c ****     void CySysPmHibernate(void)
 161:Generated_Source\PSoC4/cyPm.c ****     {
 192              		.loc 1 161 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 8
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196 0000 90B5     		push	{r4, r7, lr}
 197              		.cfi_def_cfa_offset 12
 198              		.cfi_offset 4, -12
 199              		.cfi_offset 7, -8
 200              		.cfi_offset 14, -4
 201 0002 83B0     		sub	sp, sp, #12
 202              		.cfi_def_cfa_offset 24
 203 0004 00AF     		add	r7, sp, #0
 204              		.cfi_def_cfa_register 7
 162:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 163:Generated_Source\PSoC4/cyPm.c **** 
 164:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 205              		.loc 1 164 0
 206 0006 FC1D     		adds	r4, r7, #7
 207 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 208 000c 0300     		movs	r3, r0
 209 000e 2370     		strb	r3, [r4]
 165:Generated_Source\PSoC4/cyPm.c **** 
 166:Generated_Source\PSoC4/cyPm.c ****         /* Device enters Hibernate mode when CPU asserts SLEEPDEEP signal */
 167:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG |= CY_PM_PWR_CONTROL_HIBERNATE;
 210              		.loc 1 167 0
 211 0010 114B     		ldr	r3, .L8
 212 0012 114A     		ldr	r2, .L8
 213 0014 1268     		ldr	r2, [r2]
 214 0016 8021     		movs	r1, #128
 215 0018 0906     		lsls	r1, r1, #24
 216 001a 0A43     		orrs	r2, r1
 217 001c 1A60     		str	r2, [r3]
 168:Generated_Source\PSoC4/cyPm.c **** 
 169:Generated_Source\PSoC4/cyPm.c ****         /* Adjust delay to wait for references to settle on wakeup from hibernate */
 170:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_HIB_KEY_DELAY_REG;
 218              		.loc 1 170 0
 219 001e 0F4B     		ldr	r3, .L8+4
 220 0020 0F4A     		ldr	r2, .L8+8
 221 0022 1288     		ldrh	r2, [r2]
 222 0024 92B2     		uxth	r2, r2
 223 0026 1A60     		str	r2, [r3]
 171:Generated_Source\PSoC4/cyPm.c **** 
 172:Generated_Source\PSoC4/cyPm.c ****         /* CM0 enters DeepSleep/Hibernate mode upon execution of WFI */
 173:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CM0_SCR_REG |= CY_PM_CM0_SCR_SLEEPDEEP;
 224              		.loc 1 173 0
 225 0028 0E4B     		ldr	r3, .L8+12
 226 002a 0E4A     		ldr	r2, .L8+12
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 8


 227 002c 1268     		ldr	r2, [r2]
 228 002e 0421     		movs	r1, #4
 229 0030 0A43     		orrs	r2, r1
 230 0032 1A60     		str	r2, [r3]
 174:Generated_Source\PSoC4/cyPm.c **** 
 175:Generated_Source\PSoC4/cyPm.c ****         /* Save token that will retain through a STOP/WAKEUP sequence
 176:Generated_Source\PSoC4/cyPm.c ****          * thus could be used by CySysPmGetResetReason() to differentiate
 177:Generated_Source\PSoC4/cyPm.c ****          * WAKEUP from a general RESET event.
 178:Generated_Source\PSoC4/cyPm.c ****          */
 179:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & (uint32)(~CY_PM_PWR_STOP_TOKEN_MASK)) | CY_PM_PW
 231              		.loc 1 179 0
 232 0034 0C4B     		ldr	r3, .L8+16
 233 0036 0C4A     		ldr	r2, .L8+16
 234 0038 1268     		ldr	r2, [r2]
 235 003a FF21     		movs	r1, #255
 236 003c 8A43     		bics	r2, r1
 237 003e F121     		movs	r1, #241
 238 0040 0A43     		orrs	r2, r1
 239 0042 1A60     		str	r2, [r3]
 180:Generated_Source\PSoC4/cyPm.c **** 
 181:Generated_Source\PSoC4/cyPm.c ****         /* Sleep and wait for interrupt. Wakeup from Hibernate is performed
 182:Generated_Source\PSoC4/cyPm.c ****          * through RESET state, causing a normal Boot procedure to occur.
 183:Generated_Source\PSoC4/cyPm.c ****          * The WFI instruction doesn't put the core to sleep if its wake condition
 184:Generated_Source\PSoC4/cyPm.c ****          * is true when the instruction is executed.
 185:Generated_Source\PSoC4/cyPm.c ****          */
 186:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 240              		.loc 1 186 0
 241              		.syntax divided
 242              	@ 186 "Generated_Source\PSoC4\cyPm.c" 1
 243 0044 30BF     		WFI 
 244              	
 245              	@ 0 "" 2
 187:Generated_Source\PSoC4/cyPm.c **** 
 188:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 246              		.loc 1 188 0
 247              		.thumb
 248              		.syntax unified
 249 0046 FB1D     		adds	r3, r7, #7
 250 0048 1B78     		ldrb	r3, [r3]
 251 004a 1800     		movs	r0, r3
 252 004c FFF7FEFF 		bl	CyExitCriticalSection
 189:Generated_Source\PSoC4/cyPm.c ****     }
 253              		.loc 1 189 0
 254 0050 C046     		nop
 255 0052 BD46     		mov	sp, r7
 256 0054 03B0     		add	sp, sp, #12
 257              		@ sp needed
 258 0056 90BD     		pop	{r4, r7, pc}
 259              	.L9:
 260              		.align	2
 261              	.L8:
 262 0058 00000B40 		.word	1074462720
 263 005c 0C000B40 		.word	1074462732
 264 0060 50F1FF0F 		.word	268431696
 265 0064 10ED00E0 		.word	-536810224
 266 0068 2C000B40 		.word	1074462764
 267              		.cfi_endproc
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 9


 268              	.LFE2:
 269              		.size	CySysPmHibernate, .-CySysPmHibernate
 270              		.section	.text.CySysPmStop,"ax",%progbits
 271              		.align	2
 272              		.global	CySysPmStop
 273              		.code	16
 274              		.thumb_func
 275              		.type	CySysPmStop, %function
 276              	CySysPmStop:
 277              	.LFB3:
 190:Generated_Source\PSoC4/cyPm.c **** 
 191:Generated_Source\PSoC4/cyPm.c **** 
 192:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 193:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmStop
 194:Generated_Source\PSoC4/cyPm.c ****     ********************************************************************************
 195:Generated_Source\PSoC4/cyPm.c ****     *
 196:Generated_Source\PSoC4/cyPm.c ****     * Summary:
 197:Generated_Source\PSoC4/cyPm.c ****     *  Puts the part into the Stop state. All internal supplies are off;
 198:Generated_Source\PSoC4/cyPm.c ****     *  no state is retained.
 199:Generated_Source\PSoC4/cyPm.c ****     *
 200:Generated_Source\PSoC4/cyPm.c ****     *  Wakeup from Stop is performed by toggling the wakeup pin, causing
 201:Generated_Source\PSoC4/cyPm.c ****     *  a normal boot procedure to occur. To configure the wakeup pin,
 202:Generated_Source\PSoC4/cyPm.c ****     *  the Digital Input Pin component should be placed on the schematic,
 203:Generated_Source\PSoC4/cyPm.c ****     *  assigned to the wakeup pin, and resistively pulled up or down to the inverse
 204:Generated_Source\PSoC4/cyPm.c ****     *  state of the wakeup polarity. To distinguish the wakeup from the Stop mode
 205:Generated_Source\PSoC4/cyPm.c ****     *  and the general Reset event, CySysPmGetResetReason() function could be used.
 206:Generated_Source\PSoC4/cyPm.c ****     *  The wakeup pin is active low by default. The wakeup pin polarity
 207:Generated_Source\PSoC4/cyPm.c ****     *  could be changed with the CySysPmSetWakeupPolarity() function.
 208:Generated_Source\PSoC4/cyPm.c ****     *
 209:Generated_Source\PSoC4/cyPm.c ****     *  This function freezes IO cells implicitly. It is not possible to enter
 210:Generated_Source\PSoC4/cyPm.c ****     *  the STOP mode before freezing the IO cells. The IO cells remain frozen after
 211:Generated_Source\PSoC4/cyPm.c ****     *  awake from the Stop mode until the firmware unfreezes them after booting
 212:Generated_Source\PSoC4/cyPm.c ****     *  explicitly with CySysPmUnfreezeIo() function call.
 213:Generated_Source\PSoC4/cyPm.c ****     *
 214:Generated_Source\PSoC4/cyPm.c ****     * Parameters:
 215:Generated_Source\PSoC4/cyPm.c ****     *  None
 216:Generated_Source\PSoC4/cyPm.c ****     *
 217:Generated_Source\PSoC4/cyPm.c ****     * Return:
 218:Generated_Source\PSoC4/cyPm.c ****     *  None
 219:Generated_Source\PSoC4/cyPm.c ****     *
 220:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 221:Generated_Source\PSoC4/cyPm.c ****     void CySysPmStop(void)
 222:Generated_Source\PSoC4/cyPm.c ****     {
 278              		.loc 1 222 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 223:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 288              		.loc 1 223 0
 289 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 224:Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 10


 225:Generated_Source\PSoC4/cyPm.c ****         /* Update token to indicate Stop mode transition. Preserve only polarity. */
 226:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_POLARITY) | CY_PM_PWR_STOP_TOKEN_
 290              		.loc 1 226 0
 291 0008 0B4B     		ldr	r3, .L11
 292 000a 0B4A     		ldr	r2, .L11
 293 000c 1168     		ldr	r1, [r2]
 294 000e 8022     		movs	r2, #128
 295 0010 5202     		lsls	r2, r2, #9
 296 0012 0A40     		ands	r2, r1
 297 0014 F221     		movs	r1, #242
 298 0016 0A43     		orrs	r2, r1
 299 0018 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/cyPm.c **** 
 228:Generated_Source\PSoC4/cyPm.c ****         /* Freeze IO-Cells to save IO-Cell state */
 229:Generated_Source\PSoC4/cyPm.c ****         CySysPmFreezeIo();
 300              		.loc 1 229 0
 301 001a FFF7FEFF 		bl	CySysPmFreezeIo
 230:Generated_Source\PSoC4/cyPm.c **** 
 231:Generated_Source\PSoC4/cyPm.c ****         /* Initiates transition to Stop state */
 232:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_STOP;
 302              		.loc 1 232 0
 303 001e 064B     		ldr	r3, .L11
 304 0020 054A     		ldr	r2, .L11
 305 0022 1268     		ldr	r2, [r2]
 306 0024 8021     		movs	r1, #128
 307 0026 0906     		lsls	r1, r1, #24
 308 0028 0A43     		orrs	r2, r1
 309 002a 1A60     		str	r2, [r3]
 233:Generated_Source\PSoC4/cyPm.c **** 
 234:Generated_Source\PSoC4/cyPm.c ****         /* Depending on the clock frequency and internal timing delays,
 235:Generated_Source\PSoC4/cyPm.c ****          * the final AHB transaction may or may not complete. To guard against
 236:Generated_Source\PSoC4/cyPm.c ****          * accidentally executing an unintended instruction, it is recommended
 237:Generated_Source\PSoC4/cyPm.c ****          * to add 2 NOP cycles after the final write to the STOP register.
 238:Generated_Source\PSoC4/cyPm.c ****          */
 239:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 310              		.loc 1 239 0
 311              		.syntax divided
 312              	@ 239 "Generated_Source\PSoC4\cyPm.c" 1
 313 002c C046     		NOP
 314              	
 315              	@ 0 "" 2
 240:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 316              		.loc 1 240 0
 317              	@ 240 "Generated_Source\PSoC4\cyPm.c" 1
 318 002e C046     		NOP
 319              	
 320              	@ 0 "" 2
 241:Generated_Source\PSoC4/cyPm.c **** 
 242:Generated_Source\PSoC4/cyPm.c ****         /* Should never get to this WFI instruction */
 243:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 321              		.loc 1 243 0
 322              	@ 243 "Generated_Source\PSoC4\cyPm.c" 1
 323 0030 30BF     		WFI 
 324              	
 325              	@ 0 "" 2
 244:Generated_Source\PSoC4/cyPm.c **** 
 245:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop is performed by toggling of Wakeup pin,
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 11


 246:Generated_Source\PSoC4/cyPm.c ****          * causing a normal Boot procedure to occur. No need to exit
 247:Generated_Source\PSoC4/cyPm.c ****          * from the critical section.
 248:Generated_Source\PSoC4/cyPm.c ****          */
 249:Generated_Source\PSoC4/cyPm.c ****     }
 326              		.loc 1 249 0
 327              		.thumb
 328              		.syntax unified
 329 0032 C046     		nop
 330 0034 BD46     		mov	sp, r7
 331              		@ sp needed
 332 0036 80BD     		pop	{r7, pc}
 333              	.L12:
 334              		.align	2
 335              	.L11:
 336 0038 2C000B40 		.word	1074462764
 337              		.cfi_endproc
 338              	.LFE3:
 339              		.size	CySysPmStop, .-CySysPmStop
 340              		.section	.text.CySysPmSetWakeupPolarity,"ax",%progbits
 341              		.align	2
 342              		.global	CySysPmSetWakeupPolarity
 343              		.code	16
 344              		.thumb_func
 345              		.type	CySysPmSetWakeupPolarity, %function
 346              	CySysPmSetWakeupPolarity:
 347              	.LFB4:
 250:Generated_Source\PSoC4/cyPm.c **** 
 251:Generated_Source\PSoC4/cyPm.c **** 
 252:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 253:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupPolarity
 254:Generated_Source\PSoC4/cyPm.c ****     ********************************************************************************
 255:Generated_Source\PSoC4/cyPm.c ****     *
 256:Generated_Source\PSoC4/cyPm.c ****     * Summary:
 257:Generated_Source\PSoC4/cyPm.c ****     *  Wake up from the stop mode is performed by toggling the wakeup pin,
 258:Generated_Source\PSoC4/cyPm.c ****     *  causing a normal boot procedure to occur. This function assigns
 259:Generated_Source\PSoC4/cyPm.c ****     *  the wakeup pin active level. Setting the wakeup pin to this level will cause
 260:Generated_Source\PSoC4/cyPm.c ****     *  the wakeup from stop mode. The wakeup pin is active low by default.
 261:Generated_Source\PSoC4/cyPm.c ****     *
 262:Generated_Source\PSoC4/cyPm.c ****     * Parameters:
 263:Generated_Source\PSoC4/cyPm.c ****     *  polarity: Wakeup pin active level:
 264:Generated_Source\PSoC4/cyPm.c ****     *   Value    Define                          Level
 265:Generated_Source\PSoC4/cyPm.c ****     *    0        CY_PM_STOP_WAKEUP_ACTIVE_LOW    Logical zero will wakeup the chip
 266:Generated_Source\PSoC4/cyPm.c ****     *    1        CY_PM_STOP_WAKEUP_ACTIVE_HIGH   Logical one will wakeup the chip
 267:Generated_Source\PSoC4/cyPm.c ****     *
 268:Generated_Source\PSoC4/cyPm.c ****     * Return:
 269:Generated_Source\PSoC4/cyPm.c ****     *  None
 270:Generated_Source\PSoC4/cyPm.c ****     *
 271:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 272:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupPolarity(uint32 polarity)
 273:Generated_Source\PSoC4/cyPm.c ****     {
 348              		.loc 1 273 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 16
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 90B5     		push	{r4, r7, lr}
 353              		.cfi_def_cfa_offset 12
 354              		.cfi_offset 4, -12
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 12


 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 85B0     		sub	sp, sp, #20
 358              		.cfi_def_cfa_offset 32
 359 0004 00AF     		add	r7, sp, #0
 360              		.cfi_def_cfa_register 7
 361 0006 7860     		str	r0, [r7, #4]
 274:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 275:Generated_Source\PSoC4/cyPm.c **** 
 276:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 362              		.loc 1 276 0
 363 0008 0F23     		movs	r3, #15
 364 000a FC18     		adds	r4, r7, r3
 365 000c FFF7FEFF 		bl	CyEnterCriticalSection
 366 0010 0300     		movs	r3, r0
 367 0012 2370     		strb	r3, [r4]
 277:Generated_Source\PSoC4/cyPm.c **** 
 278:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_STOP_WAKEUP_ACTIVE_LOW != polarity) ?
 368              		.loc 1 278 0
 369 0014 0C4A     		ldr	r2, .L16
 279:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 370              		.loc 1 279 0
 371 0016 7B68     		ldr	r3, [r7, #4]
 372 0018 002B     		cmp	r3, #0
 373 001a 05D0     		beq	.L14
 374              		.loc 1 279 0 is_stmt 0 discriminator 1
 375 001c 0A4B     		ldr	r3, .L16
 376 001e 1B68     		ldr	r3, [r3]
 377 0020 8021     		movs	r1, #128
 378 0022 4902     		lsls	r1, r1, #9
 379 0024 0B43     		orrs	r3, r1
 380 0026 03E0     		b	.L15
 381              	.L14:
 280:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 382              		.loc 1 280 0 is_stmt 1 discriminator 2
 383 0028 074B     		ldr	r3, .L16
 384 002a 1B68     		ldr	r3, [r3]
 279:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 385              		.loc 1 279 0 discriminator 2
 386 002c 0749     		ldr	r1, .L16+4
 387 002e 0B40     		ands	r3, r1
 388              	.L15:
 278:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 389              		.loc 1 278 0
 390 0030 1360     		str	r3, [r2]
 281:Generated_Source\PSoC4/cyPm.c **** 
 282:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 391              		.loc 1 282 0
 392 0032 0F23     		movs	r3, #15
 393 0034 FB18     		adds	r3, r7, r3
 394 0036 1B78     		ldrb	r3, [r3]
 395 0038 1800     		movs	r0, r3
 396 003a FFF7FEFF 		bl	CyExitCriticalSection
 283:Generated_Source\PSoC4/cyPm.c ****     }
 397              		.loc 1 283 0
 398 003e C046     		nop
 399 0040 BD46     		mov	sp, r7
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 13


 400 0042 05B0     		add	sp, sp, #20
 401              		@ sp needed
 402 0044 90BD     		pop	{r4, r7, pc}
 403              	.L17:
 404 0046 C046     		.align	2
 405              	.L16:
 406 0048 2C000B40 		.word	1074462764
 407 004c FFFFFEFF 		.word	-65537
 408              		.cfi_endproc
 409              	.LFE4:
 410              		.size	CySysPmSetWakeupPolarity, .-CySysPmSetWakeupPolarity
 411              		.section	.text.CySysPmGetResetReason,"ax",%progbits
 412              		.align	2
 413              		.global	CySysPmGetResetReason
 414              		.code	16
 415              		.thumb_func
 416              		.type	CySysPmGetResetReason, %function
 417              	CySysPmGetResetReason:
 418              	.LFB5:
 284:Generated_Source\PSoC4/cyPm.c **** 
 285:Generated_Source\PSoC4/cyPm.c **** 
 286:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 287:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmGetResetReason
 288:Generated_Source\PSoC4/cyPm.c ****     ********************************************************************************
 289:Generated_Source\PSoC4/cyPm.c ****     *
 290:Generated_Source\PSoC4/cyPm.c ****     * Summary:
 291:Generated_Source\PSoC4/cyPm.c ****     *  Retrieves the last reset reason - transition from OFF/XRES/STOP/HIBERNATE to
 292:Generated_Source\PSoC4/cyPm.c ****     *  the RESET state. Note that waking up from STOP using XRES will be perceived
 293:Generated_Source\PSoC4/cyPm.c ****     *  as a general RESET.
 294:Generated_Source\PSoC4/cyPm.c ****     *
 295:Generated_Source\PSoC4/cyPm.c ****     * Parameters:
 296:Generated_Source\PSoC4/cyPm.c ****     *  None
 297:Generated_Source\PSoC4/cyPm.c ****     *
 298:Generated_Source\PSoC4/cyPm.c ****     * Return:
 299:Generated_Source\PSoC4/cyPm.c ****     *  Reset reason.
 300:Generated_Source\PSoC4/cyPm.c ****     *  CY_PM_RESET_REASON_UNKN        - unknown
 301:Generated_Source\PSoC4/cyPm.c ****     *  CY_PM_RESET_REASON_XRES        - transition from OFF/XRES to RESET
 302:Generated_Source\PSoC4/cyPm.c ****     *  CY_PM_RESET_REASON_WAKEUP_HIB  - transition/wakeup from HIBERNATE to RESET
 303:Generated_Source\PSoC4/cyPm.c ****     *  CY_PM_RESET_REASON_WAKEUP_STOP - transition/wakeup from STOP to RESET
 304:Generated_Source\PSoC4/cyPm.c ****     *
 305:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 306:Generated_Source\PSoC4/cyPm.c ****     uint32 CySysPmGetResetReason(void)
 307:Generated_Source\PSoC4/cyPm.c ****     {
 419              		.loc 1 307 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 80B5     		push	{r7, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 82B0     		sub	sp, sp, #8
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 308:Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 431              		.loc 1 308 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 14


 432 0006 0023     		movs	r3, #0
 433 0008 7B60     		str	r3, [r7, #4]
 309:Generated_Source\PSoC4/cyPm.c **** 
 310:Generated_Source\PSoC4/cyPm.c ****         switch(CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_TOKEN_MASK)
 434              		.loc 1 310 0
 435 000a 0C4B     		ldr	r3, .L25
 436 000c 1B68     		ldr	r3, [r3]
 437 000e FF22     		movs	r2, #255
 438 0010 1340     		ands	r3, r2
 439 0012 F12B     		cmp	r3, #241
 440 0014 07D0     		beq	.L20
 441 0016 F22B     		cmp	r3, #242
 442 0018 08D0     		beq	.L21
 443 001a 002B     		cmp	r3, #0
 444 001c 00D0     		beq	.L22
 311:Generated_Source\PSoC4/cyPm.c ****         {
 312:Generated_Source\PSoC4/cyPm.c ****         /* Power up, XRES */
 313:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_XRES:
 314:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_XRES;
 315:Generated_Source\PSoC4/cyPm.c ****             break;
 316:Generated_Source\PSoC4/cyPm.c **** 
 317:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Hibernate */
 318:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_HIB:
 319:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_HIB;
 320:Generated_Source\PSoC4/cyPm.c ****             break;
 321:Generated_Source\PSoC4/cyPm.c **** 
 322:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop (through WAKEUP pin assert) */
 323:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_STOP:
 324:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_STOP;
 325:Generated_Source\PSoC4/cyPm.c ****             break;
 326:Generated_Source\PSoC4/cyPm.c **** 
 327:Generated_Source\PSoC4/cyPm.c ****         /* Unknown reason */
 328:Generated_Source\PSoC4/cyPm.c ****         default:
 329:Generated_Source\PSoC4/cyPm.c ****             break;
 445              		.loc 1 329 0
 446 001e 08E0     		b	.L23
 447              	.L22:
 314:Generated_Source\PSoC4/cyPm.c ****             break;
 448              		.loc 1 314 0
 449 0020 0123     		movs	r3, #1
 450 0022 7B60     		str	r3, [r7, #4]
 315:Generated_Source\PSoC4/cyPm.c **** 
 451              		.loc 1 315 0
 452 0024 05E0     		b	.L23
 453              	.L20:
 319:Generated_Source\PSoC4/cyPm.c ****             break;
 454              		.loc 1 319 0
 455 0026 0223     		movs	r3, #2
 456 0028 7B60     		str	r3, [r7, #4]
 320:Generated_Source\PSoC4/cyPm.c **** 
 457              		.loc 1 320 0
 458 002a 02E0     		b	.L23
 459              	.L21:
 324:Generated_Source\PSoC4/cyPm.c ****             break;
 460              		.loc 1 324 0
 461 002c 0323     		movs	r3, #3
 462 002e 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 15


 325:Generated_Source\PSoC4/cyPm.c **** 
 463              		.loc 1 325 0
 464 0030 C046     		nop
 465              	.L23:
 330:Generated_Source\PSoC4/cyPm.c ****         }
 331:Generated_Source\PSoC4/cyPm.c **** 
 332:Generated_Source\PSoC4/cyPm.c ****         return (reason);
 466              		.loc 1 332 0
 467 0032 7B68     		ldr	r3, [r7, #4]
 333:Generated_Source\PSoC4/cyPm.c ****     }
 468              		.loc 1 333 0
 469 0034 1800     		movs	r0, r3
 470 0036 BD46     		mov	sp, r7
 471 0038 02B0     		add	sp, sp, #8
 472              		@ sp needed
 473 003a 80BD     		pop	{r7, pc}
 474              	.L26:
 475              		.align	2
 476              	.L25:
 477 003c 2C000B40 		.word	1074462764
 478              		.cfi_endproc
 479              	.LFE5:
 480              		.size	CySysPmGetResetReason, .-CySysPmGetResetReason
 481              		.section	.text.CySysPmFreezeIo,"ax",%progbits
 482              		.align	2
 483              		.global	CySysPmFreezeIo
 484              		.code	16
 485              		.thumb_func
 486              		.type	CySysPmFreezeIo, %function
 487              	CySysPmFreezeIo:
 488              	.LFB6:
 334:Generated_Source\PSoC4/cyPm.c **** 
 335:Generated_Source\PSoC4/cyPm.c **** 
 336:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 337:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmFreezeIo
 338:Generated_Source\PSoC4/cyPm.c ****     ********************************************************************************
 339:Generated_Source\PSoC4/cyPm.c ****     *
 340:Generated_Source\PSoC4/cyPm.c ****     * Summary:
 341:Generated_Source\PSoC4/cyPm.c ****     *  Freezes IO-Cells directly to save the IO-Cell state on wake up from the
 342:Generated_Source\PSoC4/cyPm.c ****     *  Hibernate or Stop state. It is not required to call this function before
 343:Generated_Source\PSoC4/cyPm.c ****     *  entering the Stop mode, since CySysPmStop() function freezes IO-Cells
 344:Generated_Source\PSoC4/cyPm.c ****     *  implicitly.
 345:Generated_Source\PSoC4/cyPm.c ****     *
 346:Generated_Source\PSoC4/cyPm.c ****     * Parameters:
 347:Generated_Source\PSoC4/cyPm.c ****     *  None
 348:Generated_Source\PSoC4/cyPm.c ****     *
 349:Generated_Source\PSoC4/cyPm.c ****     * Return:
 350:Generated_Source\PSoC4/cyPm.c ****     *  None
 351:Generated_Source\PSoC4/cyPm.c ****     *
 352:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 353:Generated_Source\PSoC4/cyPm.c ****     void CySysPmFreezeIo(void)
 354:Generated_Source\PSoC4/cyPm.c ****     {
 489              		.loc 1 354 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 8
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 16


 494              		.cfi_def_cfa_offset 12
 495              		.cfi_offset 4, -12
 496              		.cfi_offset 7, -8
 497              		.cfi_offset 14, -4
 498 0002 83B0     		sub	sp, sp, #12
 499              		.cfi_def_cfa_offset 24
 500 0004 00AF     		add	r7, sp, #0
 501              		.cfi_def_cfa_register 7
 355:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 356:Generated_Source\PSoC4/cyPm.c **** 
 357:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 502              		.loc 1 357 0
 503 0006 FC1D     		adds	r4, r7, #7
 504 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 505 000c 0300     		movs	r3, r0
 506 000e 2370     		strb	r3, [r4]
 358:Generated_Source\PSoC4/cyPm.c **** 
 359:Generated_Source\PSoC4/cyPm.c ****         /* Check FREEZE state to avoid recurrent IO-Cells freeze attempt,
 360:Generated_Source\PSoC4/cyPm.c ****          * since the second call to this function will cause accidental switch
 361:Generated_Source\PSoC4/cyPm.c ****          * to the STOP mode (the system will enter STOP mode immediately after
 362:Generated_Source\PSoC4/cyPm.c ****          * writing to STOP bit since both UNLOCK and FREEZE have been set correctly
 363:Generated_Source\PSoC4/cyPm.c ****          * in a previous call to this function).
 364:Generated_Source\PSoC4/cyPm.c ****          */
 365:Generated_Source\PSoC4/cyPm.c ****         if (0u == (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_FREEZE))
 507              		.loc 1 365 0
 508 0010 0F4B     		ldr	r3, .L29
 509 0012 1A68     		ldr	r2, [r3]
 510 0014 8023     		movs	r3, #128
 511 0016 9B02     		lsls	r3, r3, #10
 512 0018 1340     		ands	r3, r2
 513 001a 0FD1     		bne	.L28
 366:Generated_Source\PSoC4/cyPm.c ****         {
 367:Generated_Source\PSoC4/cyPm.c ****             /* Preserve last reset reason and disable overrides the next freeze command by peripher
 368:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_STOP | CY_PM_PWR_STOP_FREEZE | CY_PM_PWR_STOP_UNLOC
 514              		.loc 1 368 0
 515 001c 0C4B     		ldr	r3, .L29
 369:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 516              		.loc 1 369 0
 517 001e 0C4A     		ldr	r2, .L29
 518 0020 1268     		ldr	r2, [r2]
 519 0022 0C49     		ldr	r1, .L29+4
 520 0024 0A40     		ands	r2, r1
 368:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 521              		.loc 1 368 0
 522 0026 0C49     		ldr	r1, .L29+8
 523 0028 0A43     		orrs	r2, r1
 524 002a 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/cyPm.c **** 
 371:Generated_Source\PSoC4/cyPm.c ****             /* If reading after writing, read this register three times to delay
 372:Generated_Source\PSoC4/cyPm.c ****             *  enough time for internal settling.
 373:Generated_Source\PSoC4/cyPm.c ****             */
 374:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 525              		.loc 1 374 0
 526 002c 084B     		ldr	r3, .L29
 527 002e 1B68     		ldr	r3, [r3]
 375:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 528              		.loc 1 375 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 17


 529 0030 074B     		ldr	r3, .L29
 530 0032 1B68     		ldr	r3, [r3]
 376:Generated_Source\PSoC4/cyPm.c **** 
 377:Generated_Source\PSoC4/cyPm.c ****             /* Second write causes the freeze of IO-Cells to save IO-Cell state */
 378:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG;
 531              		.loc 1 378 0
 532 0034 064B     		ldr	r3, .L29
 533 0036 064A     		ldr	r2, .L29
 534 0038 1268     		ldr	r2, [r2]
 535 003a 1A60     		str	r2, [r3]
 536              	.L28:
 379:Generated_Source\PSoC4/cyPm.c ****         }
 380:Generated_Source\PSoC4/cyPm.c **** 
 381:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 537              		.loc 1 381 0
 538 003c FB1D     		adds	r3, r7, #7
 539 003e 1B78     		ldrb	r3, [r3]
 540 0040 1800     		movs	r0, r3
 541 0042 FFF7FEFF 		bl	CyExitCriticalSection
 382:Generated_Source\PSoC4/cyPm.c ****     }
 542              		.loc 1 382 0
 543 0046 C046     		nop
 544 0048 BD46     		mov	sp, r7
 545 004a 03B0     		add	sp, sp, #12
 546              		@ sp needed
 547 004c 90BD     		pop	{r4, r7, pc}
 548              	.L30:
 549 004e C046     		.align	2
 550              	.L29:
 551 0050 2C000B40 		.word	1074462764
 552 0054 FF000100 		.word	65791
 553 0058 003A0280 		.word	-2147337728
 554              		.cfi_endproc
 555              	.LFE6:
 556              		.size	CySysPmFreezeIo, .-CySysPmFreezeIo
 557              		.section	.text.CySysPmUnfreezeIo,"ax",%progbits
 558              		.align	2
 559              		.global	CySysPmUnfreezeIo
 560              		.code	16
 561              		.thumb_func
 562              		.type	CySysPmUnfreezeIo, %function
 563              	CySysPmUnfreezeIo:
 564              	.LFB7:
 383:Generated_Source\PSoC4/cyPm.c **** 
 384:Generated_Source\PSoC4/cyPm.c **** 
 385:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 386:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmUnfreezeIo
 387:Generated_Source\PSoC4/cyPm.c ****     ********************************************************************************
 388:Generated_Source\PSoC4/cyPm.c ****     *
 389:Generated_Source\PSoC4/cyPm.c ****     * Summary:
 390:Generated_Source\PSoC4/cyPm.c ****     *  The IO-Cells remain frozen after awake from Hibernate or Stop mode until
 391:Generated_Source\PSoC4/cyPm.c ****     *  the firmware unfreezes them after booting. The call of this function
 392:Generated_Source\PSoC4/cyPm.c ****     *  unfreezes IO-Cells explicitly.
 393:Generated_Source\PSoC4/cyPm.c ****     *
 394:Generated_Source\PSoC4/cyPm.c ****     * Parameters:
 395:Generated_Source\PSoC4/cyPm.c ****     *  None
 396:Generated_Source\PSoC4/cyPm.c ****     *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 18


 397:Generated_Source\PSoC4/cyPm.c ****     * Return:
 398:Generated_Source\PSoC4/cyPm.c ****     *  None
 399:Generated_Source\PSoC4/cyPm.c ****     *
 400:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 401:Generated_Source\PSoC4/cyPm.c ****     void CySysPmUnfreezeIo(void)
 402:Generated_Source\PSoC4/cyPm.c ****     {
 565              		.loc 1 402 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 8
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569 0000 90B5     		push	{r4, r7, lr}
 570              		.cfi_def_cfa_offset 12
 571              		.cfi_offset 4, -12
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 83B0     		sub	sp, sp, #12
 575              		.cfi_def_cfa_offset 24
 576 0004 00AF     		add	r7, sp, #0
 577              		.cfi_def_cfa_register 7
 403:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 404:Generated_Source\PSoC4/cyPm.c **** 
 405:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 578              		.loc 1 405 0
 579 0006 FC1D     		adds	r4, r7, #7
 580 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 581 000c 0300     		movs	r3, r0
 582 000e 2370     		strb	r3, [r4]
 406:Generated_Source\PSoC4/cyPm.c **** 
 407:Generated_Source\PSoC4/cyPm.c ****         /* Preserve last reset reason and wakeup polarity. Then, unfreeze I/O:
 408:Generated_Source\PSoC4/cyPm.c ****          * write PWR_STOP.FREEZE=0, .UNLOCK=0x3A, .STOP=0, .TOKEN
 409:Generated_Source\PSoC4/cyPm.c ****          */
 410:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_UNLOCK |
 583              		.loc 1 410 0
 584 0010 0D4B     		ldr	r3, .L32
 411:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 585              		.loc 1 411 0
 586 0012 0D4A     		ldr	r2, .L32
 587 0014 1268     		ldr	r2, [r2]
 588 0016 0D49     		ldr	r1, .L32+4
 589 0018 0A40     		ands	r2, r1
 410:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 590              		.loc 1 410 0
 591 001a E821     		movs	r1, #232
 592 001c 8901     		lsls	r1, r1, #6
 593 001e 0A43     		orrs	r2, r1
 594 0020 1A60     		str	r2, [r3]
 412:Generated_Source\PSoC4/cyPm.c **** 
 413:Generated_Source\PSoC4/cyPm.c ****         /* If reading after writing, read this register three times to delay
 414:Generated_Source\PSoC4/cyPm.c ****         *  enough time for internal settling.
 415:Generated_Source\PSoC4/cyPm.c ****         */
 416:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 595              		.loc 1 416 0
 596 0022 094B     		ldr	r3, .L32
 597 0024 1B68     		ldr	r3, [r3]
 417:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 598              		.loc 1 417 0
 599 0026 084B     		ldr	r3, .L32
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 19


 600 0028 1B68     		ldr	r3, [r3]
 418:Generated_Source\PSoC4/cyPm.c **** 
 419:Generated_Source\PSoC4/cyPm.c ****         /* Lock STOP mode: write PWR_STOP.FREEZE=0, UNLOCK=0x00, STOP=0, .TOKEN */
 420:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG &= (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLARITY);
 601              		.loc 1 420 0
 602 002a 074B     		ldr	r3, .L32
 603 002c 064A     		ldr	r2, .L32
 604 002e 1268     		ldr	r2, [r2]
 605 0030 0649     		ldr	r1, .L32+4
 606 0032 0A40     		ands	r2, r1
 607 0034 1A60     		str	r2, [r3]
 421:Generated_Source\PSoC4/cyPm.c **** 
 422:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 608              		.loc 1 422 0
 609 0036 FB1D     		adds	r3, r7, #7
 610 0038 1B78     		ldrb	r3, [r3]
 611 003a 1800     		movs	r0, r3
 612 003c FFF7FEFF 		bl	CyExitCriticalSection
 423:Generated_Source\PSoC4/cyPm.c ****     }
 613              		.loc 1 423 0
 614 0040 C046     		nop
 615 0042 BD46     		mov	sp, r7
 616 0044 03B0     		add	sp, sp, #12
 617              		@ sp needed
 618 0046 90BD     		pop	{r4, r7, pc}
 619              	.L33:
 620              		.align	2
 621              	.L32:
 622 0048 2C000B40 		.word	1074462764
 623 004c FF000100 		.word	65791
 624              		.cfi_endproc
 625              	.LFE7:
 626              		.size	CySysPmUnfreezeIo, .-CySysPmUnfreezeIo
 627              		.text
 628              	.Letext0:
 629              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 630              		.section	.debug_info,"",%progbits
 631              	.Ldebug_info0:
 632 0000 00020000 		.4byte	0x200
 633 0004 0400     		.2byte	0x4
 634 0006 00000000 		.4byte	.Ldebug_abbrev0
 635 000a 04       		.byte	0x4
 636 000b 01       		.uleb128 0x1
 637 000c 91000000 		.4byte	.LASF27
 638 0010 0C       		.byte	0xc
 639 0011 27020000 		.4byte	.LASF28
 640 0015 B3010000 		.4byte	.LASF29
 641 0019 00000000 		.4byte	.Ldebug_ranges0+0
 642 001d 00000000 		.4byte	0
 643 0021 00000000 		.4byte	.Ldebug_line0
 644 0025 02       		.uleb128 0x2
 645 0026 01       		.byte	0x1
 646 0027 06       		.byte	0x6
 647 0028 51020000 		.4byte	.LASF0
 648 002c 02       		.uleb128 0x2
 649 002d 01       		.byte	0x1
 650 002e 08       		.byte	0x8
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 20


 651 002f 5C000000 		.4byte	.LASF1
 652 0033 02       		.uleb128 0x2
 653 0034 02       		.byte	0x2
 654 0035 05       		.byte	0x5
 655 0036 03020000 		.4byte	.LASF2
 656 003a 02       		.uleb128 0x2
 657 003b 02       		.byte	0x2
 658 003c 07       		.byte	0x7
 659 003d 32000000 		.4byte	.LASF3
 660 0041 02       		.uleb128 0x2
 661 0042 04       		.byte	0x4
 662 0043 05       		.byte	0x5
 663 0044 1E020000 		.4byte	.LASF4
 664 0048 02       		.uleb128 0x2
 665 0049 04       		.byte	0x4
 666 004a 07       		.byte	0x7
 667 004b 79000000 		.4byte	.LASF5
 668 004f 02       		.uleb128 0x2
 669 0050 08       		.byte	0x8
 670 0051 05       		.byte	0x5
 671 0052 A5010000 		.4byte	.LASF6
 672 0056 02       		.uleb128 0x2
 673 0057 08       		.byte	0x8
 674 0058 07       		.byte	0x7
 675 0059 5F010000 		.4byte	.LASF7
 676 005d 03       		.uleb128 0x3
 677 005e 04       		.byte	0x4
 678 005f 05       		.byte	0x5
 679 0060 696E7400 		.ascii	"int\000"
 680 0064 02       		.uleb128 0x2
 681 0065 04       		.byte	0x4
 682 0066 07       		.byte	0x7
 683 0067 52010000 		.4byte	.LASF8
 684 006b 04       		.uleb128 0x4
 685 006c 8B000000 		.4byte	.LASF9
 686 0070 02       		.byte	0x2
 687 0071 A1       		.byte	0xa1
 688 0072 2C000000 		.4byte	0x2c
 689 0076 04       		.uleb128 0x4
 690 0077 44010000 		.4byte	.LASF10
 691 007b 02       		.byte	0x2
 692 007c A2       		.byte	0xa2
 693 007d 3A000000 		.4byte	0x3a
 694 0081 04       		.uleb128 0x4
 695 0082 4B010000 		.4byte	.LASF11
 696 0086 02       		.byte	0x2
 697 0087 A3       		.byte	0xa3
 698 0088 48000000 		.4byte	0x48
 699 008c 02       		.uleb128 0x2
 700 008d 04       		.byte	0x4
 701 008e 04       		.byte	0x4
 702 008f 56000000 		.4byte	.LASF12
 703 0093 02       		.uleb128 0x2
 704 0094 08       		.byte	0x8
 705 0095 04       		.byte	0x4
 706 0096 2B010000 		.4byte	.LASF13
 707 009a 02       		.uleb128 0x2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 21


 708 009b 01       		.byte	0x1
 709 009c 08       		.byte	0x8
 710 009d F1010000 		.4byte	.LASF14
 711 00a1 05       		.uleb128 0x5
 712 00a2 00000000 		.4byte	.LASF15
 713 00a6 02       		.byte	0x2
 714 00a7 4C01     		.2byte	0x14c
 715 00a9 AD000000 		.4byte	0xad
 716 00ad 06       		.uleb128 0x6
 717 00ae 76000000 		.4byte	0x76
 718 00b2 05       		.uleb128 0x5
 719 00b3 06000000 		.4byte	.LASF16
 720 00b7 02       		.byte	0x2
 721 00b8 4D01     		.2byte	0x14d
 722 00ba BE000000 		.4byte	0xbe
 723 00be 06       		.uleb128 0x6
 724 00bf 81000000 		.4byte	0x81
 725 00c3 02       		.uleb128 0x2
 726 00c4 08       		.byte	0x8
 727 00c5 04       		.byte	0x4
 728 00c6 45020000 		.4byte	.LASF17
 729 00ca 02       		.uleb128 0x2
 730 00cb 04       		.byte	0x4
 731 00cc 07       		.byte	0x7
 732 00cd 9C010000 		.4byte	.LASF18
 733 00d1 07       		.uleb128 0x7
 734 00d2 25000000 		.4byte	.LASF19
 735 00d6 01       		.byte	0x1
 736 00d7 28       		.byte	0x28
 737 00d8 00000000 		.4byte	.LFB0
 738 00dc 34000000 		.4byte	.LFE0-.LFB0
 739 00e0 01       		.uleb128 0x1
 740 00e1 9C       		.byte	0x9c
 741 00e2 F5000000 		.4byte	0xf5
 742 00e6 08       		.uleb128 0x8
 743 00e7 6A000000 		.4byte	.LASF21
 744 00eb 01       		.byte	0x1
 745 00ec 2A       		.byte	0x2a
 746 00ed 6B000000 		.4byte	0x6b
 747 00f1 02       		.uleb128 0x2
 748 00f2 91       		.byte	0x91
 749 00f3 6F       		.sleb128 -17
 750 00f4 00       		.byte	0
 751 00f5 07       		.uleb128 0x7
 752 00f6 0D020000 		.4byte	.LASF20
 753 00fa 01       		.byte	0x1
 754 00fb 4E       		.byte	0x4e
 755 00fc 00000000 		.4byte	.LFB1
 756 0100 8C000000 		.4byte	.LFE1-.LFB1
 757 0104 01       		.uleb128 0x1
 758 0105 9C       		.byte	0x9c
 759 0106 27010000 		.4byte	0x127
 760 010a 08       		.uleb128 0x8
 761 010b 6A000000 		.4byte	.LASF21
 762 010f 01       		.byte	0x1
 763 0110 50       		.byte	0x50
 764 0111 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 22


 765 0115 02       		.uleb128 0x2
 766 0116 91       		.byte	0x91
 767 0117 6F       		.sleb128 -17
 768 0118 08       		.uleb128 0x8
 769 0119 F6010000 		.4byte	.LASF22
 770 011d 01       		.byte	0x1
 771 011e 52       		.byte	0x52
 772 011f BE000000 		.4byte	0xbe
 773 0123 02       		.uleb128 0x2
 774 0124 91       		.byte	0x91
 775 0125 68       		.sleb128 -24
 776 0126 00       		.byte	0
 777 0127 07       		.uleb128 0x7
 778 0128 45000000 		.4byte	.LASF23
 779 012c 01       		.byte	0x1
 780 012d A0       		.byte	0xa0
 781 012e 00000000 		.4byte	.LFB2
 782 0132 6C000000 		.4byte	.LFE2-.LFB2
 783 0136 01       		.uleb128 0x1
 784 0137 9C       		.byte	0x9c
 785 0138 4B010000 		.4byte	0x14b
 786 013c 08       		.uleb128 0x8
 787 013d 6A000000 		.4byte	.LASF21
 788 0141 01       		.byte	0x1
 789 0142 A2       		.byte	0xa2
 790 0143 6B000000 		.4byte	0x6b
 791 0147 02       		.uleb128 0x2
 792 0148 91       		.byte	0x91
 793 0149 6F       		.sleb128 -17
 794 014a 00       		.byte	0
 795 014b 09       		.uleb128 0x9
 796 014c 1F010000 		.4byte	.LASF30
 797 0150 01       		.byte	0x1
 798 0151 DD       		.byte	0xdd
 799 0152 00000000 		.4byte	.LFB3
 800 0156 3C000000 		.4byte	.LFE3-.LFB3
 801 015a 01       		.uleb128 0x1
 802 015b 9C       		.byte	0x9c
 803 015c 0A       		.uleb128 0xa
 804 015d 0C000000 		.4byte	.LASF24
 805 0161 01       		.byte	0x1
 806 0162 1001     		.2byte	0x110
 807 0164 00000000 		.4byte	.LFB4
 808 0168 50000000 		.4byte	.LFE4-.LFB4
 809 016c 01       		.uleb128 0x1
 810 016d 9C       		.byte	0x9c
 811 016e 91010000 		.4byte	0x191
 812 0172 0B       		.uleb128 0xb
 813 0173 7D010000 		.4byte	.LASF31
 814 0177 01       		.byte	0x1
 815 0178 1001     		.2byte	0x110
 816 017a 81000000 		.4byte	0x81
 817 017e 02       		.uleb128 0x2
 818 017f 91       		.byte	0x91
 819 0180 64       		.sleb128 -28
 820 0181 0C       		.uleb128 0xc
 821 0182 6A000000 		.4byte	.LASF21
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 23


 822 0186 01       		.byte	0x1
 823 0187 1201     		.2byte	0x112
 824 0189 6B000000 		.4byte	0x6b
 825 018d 02       		.uleb128 0x2
 826 018e 91       		.byte	0x91
 827 018f 6F       		.sleb128 -17
 828 0190 00       		.byte	0
 829 0191 0D       		.uleb128 0xd
 830 0192 86010000 		.4byte	.LASF32
 831 0196 01       		.byte	0x1
 832 0197 3201     		.2byte	0x132
 833 0199 81000000 		.4byte	0x81
 834 019d 00000000 		.4byte	.LFB5
 835 01a1 40000000 		.4byte	.LFE5-.LFB5
 836 01a5 01       		.uleb128 0x1
 837 01a6 9C       		.byte	0x9c
 838 01a7 BB010000 		.4byte	0x1bb
 839 01ab 0C       		.uleb128 0xc
 840 01ac 76010000 		.4byte	.LASF25
 841 01b0 01       		.byte	0x1
 842 01b1 3401     		.2byte	0x134
 843 01b3 81000000 		.4byte	0x81
 844 01b7 02       		.uleb128 0x2
 845 01b8 91       		.byte	0x91
 846 01b9 74       		.sleb128 -12
 847 01ba 00       		.byte	0
 848 01bb 0A       		.uleb128 0xa
 849 01bc 5D020000 		.4byte	.LASF26
 850 01c0 01       		.byte	0x1
 851 01c1 6101     		.2byte	0x161
 852 01c3 00000000 		.4byte	.LFB6
 853 01c7 5C000000 		.4byte	.LFE6-.LFB6
 854 01cb 01       		.uleb128 0x1
 855 01cc 9C       		.byte	0x9c
 856 01cd E1010000 		.4byte	0x1e1
 857 01d1 0C       		.uleb128 0xc
 858 01d2 6A000000 		.4byte	.LASF21
 859 01d6 01       		.byte	0x1
 860 01d7 6301     		.2byte	0x163
 861 01d9 6B000000 		.4byte	0x6b
 862 01dd 02       		.uleb128 0x2
 863 01de 91       		.byte	0x91
 864 01df 6F       		.sleb128 -17
 865 01e0 00       		.byte	0
 866 01e1 0E       		.uleb128 0xe
 867 01e2 32010000 		.4byte	.LASF33
 868 01e6 01       		.byte	0x1
 869 01e7 9101     		.2byte	0x191
 870 01e9 00000000 		.4byte	.LFB7
 871 01ed 50000000 		.4byte	.LFE7-.LFB7
 872 01f1 01       		.uleb128 0x1
 873 01f2 9C       		.byte	0x9c
 874 01f3 0C       		.uleb128 0xc
 875 01f4 6A000000 		.4byte	.LASF21
 876 01f8 01       		.byte	0x1
 877 01f9 9301     		.2byte	0x193
 878 01fb 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 24


 879 01ff 02       		.uleb128 0x2
 880 0200 91       		.byte	0x91
 881 0201 6F       		.sleb128 -17
 882 0202 00       		.byte	0
 883 0203 00       		.byte	0
 884              		.section	.debug_abbrev,"",%progbits
 885              	.Ldebug_abbrev0:
 886 0000 01       		.uleb128 0x1
 887 0001 11       		.uleb128 0x11
 888 0002 01       		.byte	0x1
 889 0003 25       		.uleb128 0x25
 890 0004 0E       		.uleb128 0xe
 891 0005 13       		.uleb128 0x13
 892 0006 0B       		.uleb128 0xb
 893 0007 03       		.uleb128 0x3
 894 0008 0E       		.uleb128 0xe
 895 0009 1B       		.uleb128 0x1b
 896 000a 0E       		.uleb128 0xe
 897 000b 55       		.uleb128 0x55
 898 000c 17       		.uleb128 0x17
 899 000d 11       		.uleb128 0x11
 900 000e 01       		.uleb128 0x1
 901 000f 10       		.uleb128 0x10
 902 0010 17       		.uleb128 0x17
 903 0011 00       		.byte	0
 904 0012 00       		.byte	0
 905 0013 02       		.uleb128 0x2
 906 0014 24       		.uleb128 0x24
 907 0015 00       		.byte	0
 908 0016 0B       		.uleb128 0xb
 909 0017 0B       		.uleb128 0xb
 910 0018 3E       		.uleb128 0x3e
 911 0019 0B       		.uleb128 0xb
 912 001a 03       		.uleb128 0x3
 913 001b 0E       		.uleb128 0xe
 914 001c 00       		.byte	0
 915 001d 00       		.byte	0
 916 001e 03       		.uleb128 0x3
 917 001f 24       		.uleb128 0x24
 918 0020 00       		.byte	0
 919 0021 0B       		.uleb128 0xb
 920 0022 0B       		.uleb128 0xb
 921 0023 3E       		.uleb128 0x3e
 922 0024 0B       		.uleb128 0xb
 923 0025 03       		.uleb128 0x3
 924 0026 08       		.uleb128 0x8
 925 0027 00       		.byte	0
 926 0028 00       		.byte	0
 927 0029 04       		.uleb128 0x4
 928 002a 16       		.uleb128 0x16
 929 002b 00       		.byte	0
 930 002c 03       		.uleb128 0x3
 931 002d 0E       		.uleb128 0xe
 932 002e 3A       		.uleb128 0x3a
 933 002f 0B       		.uleb128 0xb
 934 0030 3B       		.uleb128 0x3b
 935 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 25


 936 0032 49       		.uleb128 0x49
 937 0033 13       		.uleb128 0x13
 938 0034 00       		.byte	0
 939 0035 00       		.byte	0
 940 0036 05       		.uleb128 0x5
 941 0037 16       		.uleb128 0x16
 942 0038 00       		.byte	0
 943 0039 03       		.uleb128 0x3
 944 003a 0E       		.uleb128 0xe
 945 003b 3A       		.uleb128 0x3a
 946 003c 0B       		.uleb128 0xb
 947 003d 3B       		.uleb128 0x3b
 948 003e 05       		.uleb128 0x5
 949 003f 49       		.uleb128 0x49
 950 0040 13       		.uleb128 0x13
 951 0041 00       		.byte	0
 952 0042 00       		.byte	0
 953 0043 06       		.uleb128 0x6
 954 0044 35       		.uleb128 0x35
 955 0045 00       		.byte	0
 956 0046 49       		.uleb128 0x49
 957 0047 13       		.uleb128 0x13
 958 0048 00       		.byte	0
 959 0049 00       		.byte	0
 960 004a 07       		.uleb128 0x7
 961 004b 2E       		.uleb128 0x2e
 962 004c 01       		.byte	0x1
 963 004d 3F       		.uleb128 0x3f
 964 004e 19       		.uleb128 0x19
 965 004f 03       		.uleb128 0x3
 966 0050 0E       		.uleb128 0xe
 967 0051 3A       		.uleb128 0x3a
 968 0052 0B       		.uleb128 0xb
 969 0053 3B       		.uleb128 0x3b
 970 0054 0B       		.uleb128 0xb
 971 0055 27       		.uleb128 0x27
 972 0056 19       		.uleb128 0x19
 973 0057 11       		.uleb128 0x11
 974 0058 01       		.uleb128 0x1
 975 0059 12       		.uleb128 0x12
 976 005a 06       		.uleb128 0x6
 977 005b 40       		.uleb128 0x40
 978 005c 18       		.uleb128 0x18
 979 005d 9642     		.uleb128 0x2116
 980 005f 19       		.uleb128 0x19
 981 0060 01       		.uleb128 0x1
 982 0061 13       		.uleb128 0x13
 983 0062 00       		.byte	0
 984 0063 00       		.byte	0
 985 0064 08       		.uleb128 0x8
 986 0065 34       		.uleb128 0x34
 987 0066 00       		.byte	0
 988 0067 03       		.uleb128 0x3
 989 0068 0E       		.uleb128 0xe
 990 0069 3A       		.uleb128 0x3a
 991 006a 0B       		.uleb128 0xb
 992 006b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 26


 993 006c 0B       		.uleb128 0xb
 994 006d 49       		.uleb128 0x49
 995 006e 13       		.uleb128 0x13
 996 006f 02       		.uleb128 0x2
 997 0070 18       		.uleb128 0x18
 998 0071 00       		.byte	0
 999 0072 00       		.byte	0
 1000 0073 09       		.uleb128 0x9
 1001 0074 2E       		.uleb128 0x2e
 1002 0075 00       		.byte	0
 1003 0076 3F       		.uleb128 0x3f
 1004 0077 19       		.uleb128 0x19
 1005 0078 03       		.uleb128 0x3
 1006 0079 0E       		.uleb128 0xe
 1007 007a 3A       		.uleb128 0x3a
 1008 007b 0B       		.uleb128 0xb
 1009 007c 3B       		.uleb128 0x3b
 1010 007d 0B       		.uleb128 0xb
 1011 007e 27       		.uleb128 0x27
 1012 007f 19       		.uleb128 0x19
 1013 0080 11       		.uleb128 0x11
 1014 0081 01       		.uleb128 0x1
 1015 0082 12       		.uleb128 0x12
 1016 0083 06       		.uleb128 0x6
 1017 0084 40       		.uleb128 0x40
 1018 0085 18       		.uleb128 0x18
 1019 0086 9642     		.uleb128 0x2116
 1020 0088 19       		.uleb128 0x19
 1021 0089 00       		.byte	0
 1022 008a 00       		.byte	0
 1023 008b 0A       		.uleb128 0xa
 1024 008c 2E       		.uleb128 0x2e
 1025 008d 01       		.byte	0x1
 1026 008e 3F       		.uleb128 0x3f
 1027 008f 19       		.uleb128 0x19
 1028 0090 03       		.uleb128 0x3
 1029 0091 0E       		.uleb128 0xe
 1030 0092 3A       		.uleb128 0x3a
 1031 0093 0B       		.uleb128 0xb
 1032 0094 3B       		.uleb128 0x3b
 1033 0095 05       		.uleb128 0x5
 1034 0096 27       		.uleb128 0x27
 1035 0097 19       		.uleb128 0x19
 1036 0098 11       		.uleb128 0x11
 1037 0099 01       		.uleb128 0x1
 1038 009a 12       		.uleb128 0x12
 1039 009b 06       		.uleb128 0x6
 1040 009c 40       		.uleb128 0x40
 1041 009d 18       		.uleb128 0x18
 1042 009e 9642     		.uleb128 0x2116
 1043 00a0 19       		.uleb128 0x19
 1044 00a1 01       		.uleb128 0x1
 1045 00a2 13       		.uleb128 0x13
 1046 00a3 00       		.byte	0
 1047 00a4 00       		.byte	0
 1048 00a5 0B       		.uleb128 0xb
 1049 00a6 05       		.uleb128 0x5
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 27


 1050 00a7 00       		.byte	0
 1051 00a8 03       		.uleb128 0x3
 1052 00a9 0E       		.uleb128 0xe
 1053 00aa 3A       		.uleb128 0x3a
 1054 00ab 0B       		.uleb128 0xb
 1055 00ac 3B       		.uleb128 0x3b
 1056 00ad 05       		.uleb128 0x5
 1057 00ae 49       		.uleb128 0x49
 1058 00af 13       		.uleb128 0x13
 1059 00b0 02       		.uleb128 0x2
 1060 00b1 18       		.uleb128 0x18
 1061 00b2 00       		.byte	0
 1062 00b3 00       		.byte	0
 1063 00b4 0C       		.uleb128 0xc
 1064 00b5 34       		.uleb128 0x34
 1065 00b6 00       		.byte	0
 1066 00b7 03       		.uleb128 0x3
 1067 00b8 0E       		.uleb128 0xe
 1068 00b9 3A       		.uleb128 0x3a
 1069 00ba 0B       		.uleb128 0xb
 1070 00bb 3B       		.uleb128 0x3b
 1071 00bc 05       		.uleb128 0x5
 1072 00bd 49       		.uleb128 0x49
 1073 00be 13       		.uleb128 0x13
 1074 00bf 02       		.uleb128 0x2
 1075 00c0 18       		.uleb128 0x18
 1076 00c1 00       		.byte	0
 1077 00c2 00       		.byte	0
 1078 00c3 0D       		.uleb128 0xd
 1079 00c4 2E       		.uleb128 0x2e
 1080 00c5 01       		.byte	0x1
 1081 00c6 3F       		.uleb128 0x3f
 1082 00c7 19       		.uleb128 0x19
 1083 00c8 03       		.uleb128 0x3
 1084 00c9 0E       		.uleb128 0xe
 1085 00ca 3A       		.uleb128 0x3a
 1086 00cb 0B       		.uleb128 0xb
 1087 00cc 3B       		.uleb128 0x3b
 1088 00cd 05       		.uleb128 0x5
 1089 00ce 27       		.uleb128 0x27
 1090 00cf 19       		.uleb128 0x19
 1091 00d0 49       		.uleb128 0x49
 1092 00d1 13       		.uleb128 0x13
 1093 00d2 11       		.uleb128 0x11
 1094 00d3 01       		.uleb128 0x1
 1095 00d4 12       		.uleb128 0x12
 1096 00d5 06       		.uleb128 0x6
 1097 00d6 40       		.uleb128 0x40
 1098 00d7 18       		.uleb128 0x18
 1099 00d8 9742     		.uleb128 0x2117
 1100 00da 19       		.uleb128 0x19
 1101 00db 01       		.uleb128 0x1
 1102 00dc 13       		.uleb128 0x13
 1103 00dd 00       		.byte	0
 1104 00de 00       		.byte	0
 1105 00df 0E       		.uleb128 0xe
 1106 00e0 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 28


 1107 00e1 01       		.byte	0x1
 1108 00e2 3F       		.uleb128 0x3f
 1109 00e3 19       		.uleb128 0x19
 1110 00e4 03       		.uleb128 0x3
 1111 00e5 0E       		.uleb128 0xe
 1112 00e6 3A       		.uleb128 0x3a
 1113 00e7 0B       		.uleb128 0xb
 1114 00e8 3B       		.uleb128 0x3b
 1115 00e9 05       		.uleb128 0x5
 1116 00ea 27       		.uleb128 0x27
 1117 00eb 19       		.uleb128 0x19
 1118 00ec 11       		.uleb128 0x11
 1119 00ed 01       		.uleb128 0x1
 1120 00ee 12       		.uleb128 0x12
 1121 00ef 06       		.uleb128 0x6
 1122 00f0 40       		.uleb128 0x40
 1123 00f1 18       		.uleb128 0x18
 1124 00f2 9642     		.uleb128 0x2116
 1125 00f4 19       		.uleb128 0x19
 1126 00f5 00       		.byte	0
 1127 00f6 00       		.byte	0
 1128 00f7 00       		.byte	0
 1129              		.section	.debug_aranges,"",%progbits
 1130 0000 54000000 		.4byte	0x54
 1131 0004 0200     		.2byte	0x2
 1132 0006 00000000 		.4byte	.Ldebug_info0
 1133 000a 04       		.byte	0x4
 1134 000b 00       		.byte	0
 1135 000c 0000     		.2byte	0
 1136 000e 0000     		.2byte	0
 1137 0010 00000000 		.4byte	.LFB0
 1138 0014 34000000 		.4byte	.LFE0-.LFB0
 1139 0018 00000000 		.4byte	.LFB1
 1140 001c 8C000000 		.4byte	.LFE1-.LFB1
 1141 0020 00000000 		.4byte	.LFB2
 1142 0024 6C000000 		.4byte	.LFE2-.LFB2
 1143 0028 00000000 		.4byte	.LFB3
 1144 002c 3C000000 		.4byte	.LFE3-.LFB3
 1145 0030 00000000 		.4byte	.LFB4
 1146 0034 50000000 		.4byte	.LFE4-.LFB4
 1147 0038 00000000 		.4byte	.LFB5
 1148 003c 40000000 		.4byte	.LFE5-.LFB5
 1149 0040 00000000 		.4byte	.LFB6
 1150 0044 5C000000 		.4byte	.LFE6-.LFB6
 1151 0048 00000000 		.4byte	.LFB7
 1152 004c 50000000 		.4byte	.LFE7-.LFB7
 1153 0050 00000000 		.4byte	0
 1154 0054 00000000 		.4byte	0
 1155              		.section	.debug_ranges,"",%progbits
 1156              	.Ldebug_ranges0:
 1157 0000 00000000 		.4byte	.LFB0
 1158 0004 34000000 		.4byte	.LFE0
 1159 0008 00000000 		.4byte	.LFB1
 1160 000c 8C000000 		.4byte	.LFE1
 1161 0010 00000000 		.4byte	.LFB2
 1162 0014 6C000000 		.4byte	.LFE2
 1163 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 29


 1164 001c 3C000000 		.4byte	.LFE3
 1165 0020 00000000 		.4byte	.LFB4
 1166 0024 50000000 		.4byte	.LFE4
 1167 0028 00000000 		.4byte	.LFB5
 1168 002c 40000000 		.4byte	.LFE5
 1169 0030 00000000 		.4byte	.LFB6
 1170 0034 5C000000 		.4byte	.LFE6
 1171 0038 00000000 		.4byte	.LFB7
 1172 003c 50000000 		.4byte	.LFE7
 1173 0040 00000000 		.4byte	0
 1174 0044 00000000 		.4byte	0
 1175              		.section	.debug_line,"",%progbits
 1176              	.Ldebug_line0:
 1177 0000 20010000 		.section	.debug_str,"MS",%progbits,1
 1177      02004100 
 1177      00000201 
 1177      FB0E0D00 
 1177      01010101 
 1178              	.LASF15:
 1179 0000 72656731 		.ascii	"reg16\000"
 1179      3600
 1180              	.LASF16:
 1181 0006 72656733 		.ascii	"reg32\000"
 1181      3200
 1182              	.LASF24:
 1183 000c 43795379 		.ascii	"CySysPmSetWakeupPolarity\000"
 1183      73506D53 
 1183      65745761 
 1183      6B657570 
 1183      506F6C61 
 1184              	.LASF19:
 1185 0025 43795379 		.ascii	"CySysPmSleep\000"
 1185      73506D53 
 1185      6C656570 
 1185      00
 1186              	.LASF3:
 1187 0032 73686F72 		.ascii	"short unsigned int\000"
 1187      7420756E 
 1187      7369676E 
 1187      65642069 
 1187      6E7400
 1188              	.LASF23:
 1189 0045 43795379 		.ascii	"CySysPmHibernate\000"
 1189      73506D48 
 1189      69626572 
 1189      6E617465 
 1189      00
 1190              	.LASF12:
 1191 0056 666C6F61 		.ascii	"float\000"
 1191      7400
 1192              	.LASF1:
 1193 005c 756E7369 		.ascii	"unsigned char\000"
 1193      676E6564 
 1193      20636861 
 1193      7200
 1194              	.LASF21:
 1195 006a 696E7465 		.ascii	"interruptState\000"
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 30


 1195      72727570 
 1195      74537461 
 1195      746500
 1196              	.LASF5:
 1197 0079 6C6F6E67 		.ascii	"long unsigned int\000"
 1197      20756E73 
 1197      69676E65 
 1197      6420696E 
 1197      7400
 1198              	.LASF9:
 1199 008b 75696E74 		.ascii	"uint8\000"
 1199      3800
 1200              	.LASF27:
 1201 0091 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1201      43313120 
 1201      352E342E 
 1201      31203230 
 1201      31363036 
 1202 00c4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1202      20726576 
 1202      6973696F 
 1202      6E203233 
 1202      37373135 
 1203 00f7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1203      66756E63 
 1203      74696F6E 
 1203      2D736563 
 1203      74696F6E 
 1204              	.LASF30:
 1205 011f 43795379 		.ascii	"CySysPmStop\000"
 1205      73506D53 
 1205      746F7000 
 1206              	.LASF13:
 1207 012b 646F7562 		.ascii	"double\000"
 1207      6C6500
 1208              	.LASF33:
 1209 0132 43795379 		.ascii	"CySysPmUnfreezeIo\000"
 1209      73506D55 
 1209      6E667265 
 1209      657A6549 
 1209      6F00
 1210              	.LASF10:
 1211 0144 75696E74 		.ascii	"uint16\000"
 1211      313600
 1212              	.LASF11:
 1213 014b 75696E74 		.ascii	"uint32\000"
 1213      333200
 1214              	.LASF8:
 1215 0152 756E7369 		.ascii	"unsigned int\000"
 1215      676E6564 
 1215      20696E74 
 1215      00
 1216              	.LASF7:
 1217 015f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1217      206C6F6E 
 1217      6720756E 
 1217      7369676E 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 31


 1217      65642069 
 1218              	.LASF25:
 1219 0176 72656173 		.ascii	"reason\000"
 1219      6F6E00
 1220              	.LASF31:
 1221 017d 706F6C61 		.ascii	"polarity\000"
 1221      72697479 
 1221      00
 1222              	.LASF32:
 1223 0186 43795379 		.ascii	"CySysPmGetResetReason\000"
 1223      73506D47 
 1223      65745265 
 1223      73657452 
 1223      6561736F 
 1224              	.LASF18:
 1225 019c 73697A65 		.ascii	"sizetype\000"
 1225      74797065 
 1225      00
 1226              	.LASF6:
 1227 01a5 6C6F6E67 		.ascii	"long long int\000"
 1227      206C6F6E 
 1227      6720696E 
 1227      7400
 1228              	.LASF29:
 1229 01b3 443A5C4E 		.ascii	"D:\\Nico\\Archivos\\lib_psoc\\Cypress-PSOC-OLED-mas"
 1229      69636F5C 
 1229      41726368 
 1229      69766F73 
 1229      5C6C6962 
 1230 01e2 7465725C 		.ascii	"ter\\OLED.cydsn\000"
 1230      4F4C4544 
 1230      2E637964 
 1230      736E00
 1231              	.LASF14:
 1232 01f1 63686172 		.ascii	"char\000"
 1232      00
 1233              	.LASF22:
 1234 01f6 636C6B53 		.ascii	"clkSelectReg\000"
 1234      656C6563 
 1234      74526567 
 1234      00
 1235              	.LASF2:
 1236 0203 73686F72 		.ascii	"short int\000"
 1236      7420696E 
 1236      7400
 1237              	.LASF20:
 1238 020d 43795379 		.ascii	"CySysPmDeepSleep\000"
 1238      73506D44 
 1238      65657053 
 1238      6C656570 
 1238      00
 1239              	.LASF4:
 1240 021e 6C6F6E67 		.ascii	"long int\000"
 1240      20696E74 
 1240      00
 1241              	.LASF28:
 1242 0227 47656E65 		.ascii	"Generated_Source\\PSoC4\\cyPm.c\000"
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccmBmA4b.s 			page 32


 1242      72617465 
 1242      645F536F 
 1242      75726365 
 1242      5C50536F 
 1243              	.LASF17:
 1244 0245 6C6F6E67 		.ascii	"long double\000"
 1244      20646F75 
 1244      626C6500 
 1245              	.LASF0:
 1246 0251 7369676E 		.ascii	"signed char\000"
 1246      65642063 
 1246      68617200 
 1247              	.LASF26:
 1248 025d 43795379 		.ascii	"CySysPmFreezeIo\000"
 1248      73506D46 
 1248      7265657A 
 1248      65496F00 
 1249              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
