ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 00366E01 		.word	24000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 C05D0000 		.word	24000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 18       		.byte	24
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000E02E 		.word	786432000
  43              		.global	lfclkPosedgeWdtCounter0Enabled
  44              		.bss
  45              		.align	2
  46              		.type	lfclkPosedgeWdtCounter0Enabled, %object
  47              		.size	lfclkPosedgeWdtCounter0Enabled, 4
  48              	lfclkPosedgeWdtCounter0Enabled:
  49 0000 00000000 		.space	4
  50              		.global	lfclkPosedgeEnabledWdtCounter
  51              		.align	2
  52              		.type	lfclkPosedgeEnabledWdtCounter, %object
  53              		.size	lfclkPosedgeEnabledWdtCounter, 4
  54              	lfclkPosedgeEnabledWdtCounter:
  55 0004 00000000 		.space	4
  56              		.global	lfclkPosedgeWdtCounter0Mode
  57              		.align	2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 2


  58              		.type	lfclkPosedgeWdtCounter0Mode, %object
  59              		.size	lfclkPosedgeWdtCounter0Mode, 4
  60              	lfclkPosedgeWdtCounter0Mode:
  61 0008 00000000 		.space	4
  62              		.align	2
  63              	CySysTickCallbacks:
  64 000c 00000000 		.space	20
  64      00000000 
  64      00000000 
  64      00000000 
  64      00000000 
  65              		.global	CySysTickInitVar
  66              		.align	2
  67              		.type	CySysTickInitVar, %object
  68              		.size	CySysTickInitVar, 4
  69              	CySysTickInitVar:
  70 0020 00000000 		.space	4
  71              		.global	cyImoFreqMhz2Reg
  72              		.section	.rodata
  73              		.align	2
  74              		.type	cyImoFreqMhz2Reg, %object
  75              		.size	cyImoFreqMhz2Reg, 46
  76              	cyImoFreqMhz2Reg:
  77 0000 03       		.byte	3
  78 0001 04       		.byte	4
  79 0002 05       		.byte	5
  80 0003 06       		.byte	6
  81 0004 07       		.byte	7
  82 0005 08       		.byte	8
  83 0006 09       		.byte	9
  84 0007 0A       		.byte	10
  85 0008 0B       		.byte	11
  86 0009 0C       		.byte	12
  87 000a 0E       		.byte	14
  88 000b 0F       		.byte	15
  89 000c 10       		.byte	16
  90 000d 11       		.byte	17
  91 000e 12       		.byte	18
  92 000f 13       		.byte	19
  93 0010 14       		.byte	20
  94 0011 15       		.byte	21
  95 0012 16       		.byte	22
  96 0013 17       		.byte	23
  97 0014 18       		.byte	24
  98 0015 19       		.byte	25
  99 0016 1B       		.byte	27
 100 0017 1C       		.byte	28
 101 0018 1D       		.byte	29
 102 0019 1E       		.byte	30
 103 001a 1F       		.byte	31
 104 001b 20       		.byte	32
 105 001c 21       		.byte	33
 106 001d 22       		.byte	34
 107 001e 23       		.byte	35
 108 001f 25       		.byte	37
 109 0020 26       		.byte	38
 110 0021 27       		.byte	39
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 3


 111 0022 28       		.byte	40
 112 0023 29       		.byte	41
 113 0024 2A       		.byte	42
 114 0025 2B       		.byte	43
 115 0026 2E       		.byte	46
 116 0027 2F       		.byte	47
 117 0028 30       		.byte	48
 118 0029 31       		.byte	49
 119 002a 32       		.byte	50
 120 002b 33       		.byte	51
 121 002c 34       		.byte	52
 122 002d 35       		.byte	53
 123              		.section	.text.CySysClkImoStart,"ax",%progbits
 124              		.align	2
 125              		.global	CySysClkImoStart
 126              		.code	16
 127              		.thumb_func
 128              		.type	CySysClkImoStart, %function
 129              	CySysClkImoStart:
 130              	.LFB0:
 131              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * Version 4.20
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the clocking, interrupts, and watchdog timer.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** *  Note:
   9:Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/CyLib.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/CyLib.c **** *
  12:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** 
  22:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  23:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  24:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  25:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  26:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  27:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  28:Generated_Source\PSoC4/CyLib.c **** 
  29:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_WCO)
  30:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkGetLfclkSource(void);
  31:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_WCO) */
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  34:Generated_Source\PSoC4/CyLib.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  35:Generated_Source\PSoC4/CyLib.c ****     uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  36:Generated_Source\PSoC4/CyLib.c ****     uint32 lfclkPosedgeEnabledWdtCounter  = 0u;
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 4


  37:Generated_Source\PSoC4/CyLib.c ****     uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  38:Generated_Source\PSoC4/CyLib.c **** 
  39:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkLfclkPosedgeCatch(void);
  40:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkLfclkPosedgeRestore(void);
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysWdtLocked(void);
  43:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkIloEnabled(void);
  44:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_WCO)
  45:Generated_Source\PSoC4/CyLib.c ****         static uint32 CySysClkWcoEnabled(void);
  46:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_WCO) */
  47:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  48:Generated_Source\PSoC4/CyLib.c **** 
  49:Generated_Source\PSoC4/CyLib.c **** 
  50:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  51:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  52:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  53:Generated_Source\PSoC4/CyLib.c **** 
  54:Generated_Source\PSoC4/CyLib.c **** 
  55:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  56:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  57:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  58:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  59:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  60:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  61:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  70:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  71:Generated_Source\PSoC4/CyLib.c **** 
  72:Generated_Source\PSoC4/CyLib.c **** 
  73:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  74:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  75:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  76:Generated_Source\PSoC4/CyLib.c **** *
  77:Generated_Source\PSoC4/CyLib.c **** * Summary:
  78:Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  79:Generated_Source\PSoC4/CyLib.c **** *
  80:Generated_Source\PSoC4/CyLib.c **** * Parameters:
  81:Generated_Source\PSoC4/CyLib.c **** *  None
  82:Generated_Source\PSoC4/CyLib.c **** *
  83:Generated_Source\PSoC4/CyLib.c **** * Return:
  84:Generated_Source\PSoC4/CyLib.c **** *  None
  85:Generated_Source\PSoC4/CyLib.c **** *
  86:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  87:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  88:Generated_Source\PSoC4/CyLib.c **** {
 132              		.loc 1 88 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 5


 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
  89:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 142              		.loc 1 89 0
 143 0004 044B     		ldr	r3, .L2
 144 0006 044A     		ldr	r2, .L2
 145 0008 1268     		ldr	r2, [r2]
 146 000a 8021     		movs	r1, #128
 147 000c 0906     		lsls	r1, r1, #24
 148 000e 0A43     		orrs	r2, r1
 149 0010 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/CyLib.c **** }
 150              		.loc 1 90 0
 151 0012 C046     		nop
 152 0014 BD46     		mov	sp, r7
 153              		@ sp needed
 154 0016 80BD     		pop	{r7, pc}
 155              	.L3:
 156              		.align	2
 157              	.L2:
 158 0018 08010B40 		.word	1074462984
 159              		.cfi_endproc
 160              	.LFE0:
 161              		.size	CySysClkImoStart, .-CySysClkImoStart
 162              		.section	.text.CySysClkImoStop,"ax",%progbits
 163              		.align	2
 164              		.global	CySysClkImoStop
 165              		.code	16
 166              		.thumb_func
 167              		.type	CySysClkImoStop, %function
 168              	CySysClkImoStop:
 169              	.LFB1:
  91:Generated_Source\PSoC4/CyLib.c **** 
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
  95:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Summary:
  98:Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 101:Generated_Source\PSoC4/CyLib.c **** *  None
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * Return:
 104:Generated_Source\PSoC4/CyLib.c **** *  None
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 170              		.loc 1 108 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 6


 174 0000 80B5     		push	{r7, lr}
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 178 0002 00AF     		add	r7, sp, #0
 179              		.cfi_def_cfa_register 7
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 180              		.loc 1 109 0
 181 0004 044B     		ldr	r3, .L5
 182 0006 044A     		ldr	r2, .L5
 183 0008 1268     		ldr	r2, [r2]
 184 000a 5200     		lsls	r2, r2, #1
 185 000c 5208     		lsrs	r2, r2, #1
 186 000e 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/CyLib.c **** }
 187              		.loc 1 110 0
 188 0010 C046     		nop
 189 0012 BD46     		mov	sp, r7
 190              		@ sp needed
 191 0014 80BD     		pop	{r7, pc}
 192              	.L6:
 193 0016 C046     		.align	2
 194              	.L5:
 195 0018 08010B40 		.word	1074462984
 196              		.cfi_endproc
 197              	.LFE1:
 198              		.size	CySysClkImoStop, .-CySysClkImoStop
 199              		.section	.text.CySysClkIloStart,"ax",%progbits
 200              		.align	2
 201              		.global	CySysClkIloStart
 202              		.code	16
 203              		.thumb_func
 204              		.type	CySysClkIloStart, %function
 205              	CySysClkIloStart:
 206              	.LFB2:
 111:Generated_Source\PSoC4/CyLib.c **** 
 112:Generated_Source\PSoC4/CyLib.c **** 
 113:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkIloStart
 115:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 116:Generated_Source\PSoC4/CyLib.c **** *
 117:Generated_Source\PSoC4/CyLib.c **** * Summary:
 118:Generated_Source\PSoC4/CyLib.c **** *  Enables the ILO. Refer to the device datasheet for the ILO startup time.
 119:Generated_Source\PSoC4/CyLib.c **** *
 120:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 121:Generated_Source\PSoC4/CyLib.c **** *  None
 122:Generated_Source\PSoC4/CyLib.c **** *
 123:Generated_Source\PSoC4/CyLib.c **** * Return:
 124:Generated_Source\PSoC4/CyLib.c **** *  None
 125:Generated_Source\PSoC4/CyLib.c **** *
 126:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 127:Generated_Source\PSoC4/CyLib.c **** void CySysClkIloStart(void)
 128:Generated_Source\PSoC4/CyLib.c **** {
 207              		.loc 1 128 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 7


 211 0000 80B5     		push	{r7, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0002 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 129:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
 217              		.loc 1 129 0
 218 0004 044B     		ldr	r3, .L8
 219 0006 044A     		ldr	r2, .L8
 220 0008 1268     		ldr	r2, [r2]
 221 000a 8021     		movs	r1, #128
 222 000c 0906     		lsls	r1, r1, #24
 223 000e 0A43     		orrs	r2, r1
 224 0010 1A60     		str	r2, [r3]
 130:Generated_Source\PSoC4/CyLib.c **** }
 225              		.loc 1 130 0
 226 0012 C046     		nop
 227 0014 BD46     		mov	sp, r7
 228              		@ sp needed
 229 0016 80BD     		pop	{r7, pc}
 230              	.L9:
 231              		.align	2
 232              	.L8:
 233 0018 04010B40 		.word	1074462980
 234              		.cfi_endproc
 235              	.LFE2:
 236              		.size	CySysClkIloStart, .-CySysClkIloStart
 237              		.section	.text.CySysClkIloStop,"ax",%progbits
 238              		.align	2
 239              		.global	CySysClkIloStop
 240              		.code	16
 241              		.thumb_func
 242              		.type	CySysClkIloStop, %function
 243              	CySysClkIloStop:
 244              	.LFB3:
 131:Generated_Source\PSoC4/CyLib.c **** 
 132:Generated_Source\PSoC4/CyLib.c **** 
 133:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 134:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkIloStop
 135:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** * Summary:
 138:Generated_Source\PSoC4/CyLib.c **** *  Disables the ILO.
 139:Generated_Source\PSoC4/CyLib.c **** *
 140:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 141:Generated_Source\PSoC4/CyLib.c **** *  None
 142:Generated_Source\PSoC4/CyLib.c **** *
 143:Generated_Source\PSoC4/CyLib.c **** * Return:
 144:Generated_Source\PSoC4/CyLib.c **** *  None
 145:Generated_Source\PSoC4/CyLib.c **** *
 146:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 147:Generated_Source\PSoC4/CyLib.c **** *  This function will have no effect if the WDT is locked (CySysWdtLock() is
 148:Generated_Source\PSoC4/CyLib.c **** *  called). Call CySysWdtUnlock() to unlock the WDT and be able to stop ILO.
 149:Generated_Source\PSoC4/CyLib.c **** *
 150:Generated_Source\PSoC4/CyLib.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
 151:Generated_Source\PSoC4/CyLib.c **** *  The ILO is required for the WDT operation.
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 8


 152:Generated_Source\PSoC4/CyLib.c **** *
 153:Generated_Source\PSoC4/CyLib.c **** *  PSoC 4100-BL / PSoC 4200-BL:
 154:Generated_Source\PSoC4/CyLib.c **** *  Stopping the ILO will affect the peripheral clocked by the LFCLK, if the
 155:Generated_Source\PSoC4/CyLib.c **** *  LFCLK is configured to be sourced by the ILO.
 156:Generated_Source\PSoC4/CyLib.c **** *
 157:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 158:Generated_Source\PSoC4/CyLib.c **** void CySysClkIloStop(void)
 159:Generated_Source\PSoC4/CyLib.c **** {
 245              		.loc 1 159 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 90B5     		push	{r4, r7, lr}
 250              		.cfi_def_cfa_offset 12
 251              		.cfi_offset 4, -12
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 83B0     		sub	sp, sp, #12
 255              		.cfi_def_cfa_offset 24
 256 0004 00AF     		add	r7, sp, #0
 257              		.cfi_def_cfa_register 7
 160:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 161:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 162:Generated_Source\PSoC4/CyLib.c **** 
 163:Generated_Source\PSoC4/CyLib.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 164:Generated_Source\PSoC4/CyLib.c ****         if (0u == CySysWdtLocked())
 258              		.loc 1 164 0
 259 0006 FFF7FEFF 		bl	CySysWdtLocked
 260 000a 031E     		subs	r3, r0, #0
 261 000c 17D1     		bne	.L12
 165:Generated_Source\PSoC4/CyLib.c ****         {
 166:Generated_Source\PSoC4/CyLib.c ****             if (0u != CySysClkIloEnabled())
 262              		.loc 1 166 0
 263 000e FFF7FEFF 		bl	CySysClkIloEnabled
 264 0012 031E     		subs	r3, r0, #0
 265 0014 13D0     		beq	.L12
 167:Generated_Source\PSoC4/CyLib.c ****             {
 168:Generated_Source\PSoC4/CyLib.c **** 
 169:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_WCO)
 170:Generated_Source\PSoC4/CyLib.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 171:Generated_Source\PSoC4/CyLib.c ****                 {
 172:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_WCO) */
 173:Generated_Source\PSoC4/CyLib.c **** 
 174:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 266              		.loc 1 174 0
 267 0016 FC1D     		adds	r4, r7, #7
 268 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 269 001c 0300     		movs	r3, r0
 270 001e 2370     		strb	r3, [r4]
 175:Generated_Source\PSoC4/CyLib.c ****                 CySysClkLfclkPosedgeCatch();
 271              		.loc 1 175 0
 272 0020 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 176:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 273              		.loc 1 176 0
 274 0024 084B     		ldr	r3, .L13
 275 0026 084A     		ldr	r2, .L13
 276 0028 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 9


 277 002a 5200     		lsls	r2, r2, #1
 278 002c 5208     		lsrs	r2, r2, #1
 279 002e 1A60     		str	r2, [r3]
 177:Generated_Source\PSoC4/CyLib.c ****                 CySysClkLfclkPosedgeRestore();
 280              		.loc 1 177 0
 281 0030 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 178:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 282              		.loc 1 178 0
 283 0034 FB1D     		adds	r3, r7, #7
 284 0036 1B78     		ldrb	r3, [r3]
 285 0038 1800     		movs	r0, r3
 286 003a FFF7FEFF 		bl	CyExitCriticalSection
 287              	.L12:
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_WCO)
 181:Generated_Source\PSoC4/CyLib.c ****                 }
 182:Generated_Source\PSoC4/CyLib.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 183:Generated_Source\PSoC4/CyLib.c ****                 {
 184:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENAB
 185:Generated_Source\PSoC4/CyLib.c ****                 }
 186:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_WCO) */
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****             }
 189:Generated_Source\PSoC4/CyLib.c ****         }
 190:Generated_Source\PSoC4/CyLib.c ****     #else
 191:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 192:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 193:Generated_Source\PSoC4/CyLib.c **** }
 288              		.loc 1 193 0
 289 003e C046     		nop
 290 0040 BD46     		mov	sp, r7
 291 0042 03B0     		add	sp, sp, #12
 292              		@ sp needed
 293 0044 90BD     		pop	{r4, r7, pc}
 294              	.L14:
 295 0046 C046     		.align	2
 296              	.L13:
 297 0048 04010B40 		.word	1074462980
 298              		.cfi_endproc
 299              	.LFE3:
 300              		.size	CySysClkIloStop, .-CySysClkIloStop
 301              		.section	.text.CySysClkIloEnabled,"ax",%progbits
 302              		.align	2
 303              		.code	16
 304              		.thumb_func
 305              		.type	CySysClkIloEnabled, %function
 306              	CySysClkIloEnabled:
 307              	.LFB4:
 194:Generated_Source\PSoC4/CyLib.c **** 
 195:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 196:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 197:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkIloEnabled
 198:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 199:Generated_Source\PSoC4/CyLib.c ****     *
 200:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 201:Generated_Source\PSoC4/CyLib.c ****     *  Reports ILO enable state.
 202:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 10


 203:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 204:Generated_Source\PSoC4/CyLib.c ****     *  None
 205:Generated_Source\PSoC4/CyLib.c ****     *
 206:Generated_Source\PSoC4/CyLib.c ****     * Return:
 207:Generated_Source\PSoC4/CyLib.c ****     *  1 if ILO is enabled, and 0 if ILO is disabled.
 208:Generated_Source\PSoC4/CyLib.c ****     *
 209:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 210:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkIloEnabled(void)
 211:Generated_Source\PSoC4/CyLib.c ****     {
 308              		.loc 1 211 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312 0000 80B5     		push	{r7, lr}
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0002 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 212:Generated_Source\PSoC4/CyLib.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 213:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 318              		.loc 1 213 0
 319 0004 044B     		ldr	r3, .L19
 320 0006 1B68     		ldr	r3, [r3]
 214:Generated_Source\PSoC4/CyLib.c ****             (uint32) 1u :
 321              		.loc 1 214 0
 322 0008 002B     		cmp	r3, #0
 323 000a 01DA     		bge	.L16
 324              		.loc 1 214 0 is_stmt 0 discriminator 1
 325 000c 0123     		movs	r3, #1
 213:Generated_Source\PSoC4/CyLib.c ****             (uint32) 1u :
 326              		.loc 1 213 0 is_stmt 1 discriminator 1
 327 000e 00E0     		b	.L18
 328              	.L16:
 329              		.loc 1 214 0 discriminator 2
 330 0010 0023     		movs	r3, #0
 331              	.L18:
 215:Generated_Source\PSoC4/CyLib.c ****             (uint32) 0u);
 216:Generated_Source\PSoC4/CyLib.c ****     }
 332              		.loc 1 216 0 discriminator 1
 333 0012 1800     		movs	r0, r3
 334 0014 BD46     		mov	sp, r7
 335              		@ sp needed
 336 0016 80BD     		pop	{r7, pc}
 337              	.L20:
 338              		.align	2
 339              	.L19:
 340 0018 04010B40 		.word	1074462980
 341              		.cfi_endproc
 342              	.LFE4:
 343              		.size	CySysClkIloEnabled, .-CySysClkIloEnabled
 344              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 345              		.align	2
 346              		.global	CySysClkWriteHfclkDirect
 347              		.code	16
 348              		.thumb_func
 349              		.type	CySysClkWriteHfclkDirect, %function
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 11


 350              	CySysClkWriteHfclkDirect:
 351              	.LFB5:
 217:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 218:Generated_Source\PSoC4/CyLib.c **** 
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 221:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetLfclkSource
 222:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 223:Generated_Source\PSoC4/CyLib.c **** *
 224:Generated_Source\PSoC4/CyLib.c **** * Summary:
 225:Generated_Source\PSoC4/CyLib.c **** *  Gets the clock source for the LFCLK clock.
 226:Generated_Source\PSoC4/CyLib.c **** *  The function is applicable only for the PSoC 4100-BL and PSoC 4200-BL.
 227:Generated_Source\PSoC4/CyLib.c **** *
 228:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 229:Generated_Source\PSoC4/CyLib.c **** *  None
 230:Generated_Source\PSoC4/CyLib.c **** *
 231:Generated_Source\PSoC4/CyLib.c **** * Return:
 232:Generated_Source\PSoC4/CyLib.c **** *  The LFCLK source:
 233:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_LFCLK_SRC_ILO    Internal Low Frequency (32 kHz) Oscillator (ILO)
 234:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_LFCLK_SRC_WCO    Low Frequency Watch Crystal Oscillator (WCO)
 235:Generated_Source\PSoC4/CyLib.c **** *
 236:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 237:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_WCO)
 238:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkGetLfclkSource(void)
 239:Generated_Source\PSoC4/CyLib.c ****     {
 240:Generated_Source\PSoC4/CyLib.c ****         uint32 lfclkSource;
 241:Generated_Source\PSoC4/CyLib.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 242:Generated_Source\PSoC4/CyLib.c ****         return (lfclkSource);
 243:Generated_Source\PSoC4/CyLib.c ****     }
 244:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_WCO) */
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c **** 
 247:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 248:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkSetLfclkSource
 249:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 250:Generated_Source\PSoC4/CyLib.c **** *
 251:Generated_Source\PSoC4/CyLib.c **** * Summary:
 252:Generated_Source\PSoC4/CyLib.c **** *  Sets the clock source for the LFCLK clock.
 253:Generated_Source\PSoC4/CyLib.c **** *
 254:Generated_Source\PSoC4/CyLib.c **** *  The switch between LFCLK sources must be done between positive edges of
 255:Generated_Source\PSoC4/CyLib.c **** *  the LFCLK, because the glitch risk is around LFCLK positive edge. To ensure
 256:Generated_Source\PSoC4/CyLib.c **** *  that the switch can be done safely, the WDT counter value is read until it
 257:Generated_Source\PSoC4/CyLib.c **** *  changes.
 258:Generated_Source\PSoC4/CyLib.c **** *
 259:Generated_Source\PSoC4/CyLib.c **** *  That means that the positive edge just finished and the switch is performed.
 260:Generated_Source\PSoC4/CyLib.c **** *  The enabled WDT counter is used for that purpose. If no counters are enabled,
 261:Generated_Source\PSoC4/CyLib.c **** *  the counter 0 is enabled. And after LFCLK source is switched, the counter 0
 262:Generated_Source\PSoC4/CyLib.c **** *  configuration is restored back.
 263:Generated_Source\PSoC4/CyLib.c **** *
 264:Generated_Source\PSoC4/CyLib.c **** *  The function is applicable only for the PSoC 4100-BL and PSoC 4200-BL.
 265:Generated_Source\PSoC4/CyLib.c **** *
 266:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 267:Generated_Source\PSoC4/CyLib.c **** *  source: One of the available LFCLK sources.
 268:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_LFCLK_SRC_ILO    Internal Low Frequency (32 kHz) Oscillator (ILO)
 269:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_LFCLK_SRC_WCO    Low Frequency Watch Crystal Oscillator (WCO)
 270:Generated_Source\PSoC4/CyLib.c **** *
 271:Generated_Source\PSoC4/CyLib.c **** * Return:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 12


 272:Generated_Source\PSoC4/CyLib.c **** *  None
 273:Generated_Source\PSoC4/CyLib.c **** *
 274:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 275:Generated_Source\PSoC4/CyLib.c **** *  This function will have no effect if the WDT is locked (CySysWdtLock() is
 276:Generated_Source\PSoC4/CyLib.c **** *  called). Call CySysWdtUnlock() to unlock the WDT.
 277:Generated_Source\PSoC4/CyLib.c **** *
 278:Generated_Source\PSoC4/CyLib.c **** *  The current source and the new source must both be running and stable before
 279:Generated_Source\PSoC4/CyLib.c **** *  calling this function.
 280:Generated_Source\PSoC4/CyLib.c **** *
 281:Generated_Source\PSoC4/CyLib.c **** *  Changing the LFCLK clock source may change the LFCLK clock frequency and
 282:Generated_Source\PSoC4/CyLib.c **** *  affect the functionality that uses this clock. For example, watchdog timer
 283:Generated_Source\PSoC4/CyLib.c **** *  (WDT) is clocked by LFCLK.
 284:Generated_Source\PSoC4/CyLib.c **** *
 285:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 286:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_WCO)
 287:Generated_Source\PSoC4/CyLib.c ****     void CySysClkSetLfclkSource(uint32 source)
 288:Generated_Source\PSoC4/CyLib.c ****     {
 289:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         if (CySysClkGetLfclkSource() != source)
 292:Generated_Source\PSoC4/CyLib.c ****         {
 293:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 294:Generated_Source\PSoC4/CyLib.c **** 
 295:Generated_Source\PSoC4/CyLib.c ****             CySysClkLfclkPosedgeCatch();
 296:Generated_Source\PSoC4/CyLib.c **** 
 297:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 298:Generated_Source\PSoC4/CyLib.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 299:Generated_Source\PSoC4/CyLib.c **** 
 300:Generated_Source\PSoC4/CyLib.c ****             CySysClkLfclkPosedgeRestore();
 301:Generated_Source\PSoC4/CyLib.c **** 
 302:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 303:Generated_Source\PSoC4/CyLib.c ****         }
 304:Generated_Source\PSoC4/CyLib.c ****     }
 305:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_WCO) */
 306:Generated_Source\PSoC4/CyLib.c **** 
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 309:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 310:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 311:Generated_Source\PSoC4/CyLib.c **** *
 312:Generated_Source\PSoC4/CyLib.c **** * Summary:
 313:Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 314:Generated_Source\PSoC4/CyLib.c **** *
 315:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 316:Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 317:Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 318:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO      IMO
 319:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK   External clock pin
 320:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO      External crystal oscillator
 321:Generated_Source\PSoC4/CyLib.c **** *                                           (applicable only for PSoC 4200-BL)
 322:Generated_Source\PSoC4/CyLib.c **** *
 323:Generated_Source\PSoC4/CyLib.c **** * Return:
 324:Generated_Source\PSoC4/CyLib.c **** *  None
 325:Generated_Source\PSoC4/CyLib.c **** *
 326:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 327:Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 328:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 13


 329:Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 330:Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 331:Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 332:Generated_Source\PSoC4/CyLib.c **** *
 333:Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 334:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 335:Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from Flash.
 336:Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency decreases, you can call
 337:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 338:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 339:Generated_Source\PSoC4/CyLib.c **** *
 340:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 341:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 342:Generated_Source\PSoC4/CyLib.c **** {
 352              		.loc 1 342 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 16
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356 0000 90B5     		push	{r4, r7, lr}
 357              		.cfi_def_cfa_offset 12
 358              		.cfi_offset 4, -12
 359              		.cfi_offset 7, -8
 360              		.cfi_offset 14, -4
 361 0002 85B0     		sub	sp, sp, #20
 362              		.cfi_def_cfa_offset 32
 363 0004 00AF     		add	r7, sp, #0
 364              		.cfi_def_cfa_register 7
 365 0006 7860     		str	r0, [r7, #4]
 343:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 344:Generated_Source\PSoC4/CyLib.c **** 
 345:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 366              		.loc 1 345 0
 367 0008 0F23     		movs	r3, #15
 368 000a FC18     		adds	r4, r7, r3
 369 000c FFF7FEFF 		bl	CyEnterCriticalSection
 370 0010 0300     		movs	r3, r0
 371 0012 2370     		strb	r3, [r4]
 346:Generated_Source\PSoC4/CyLib.c **** 
 347:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
 372              		.loc 1 347 0
 373 0014 0A4B     		ldr	r3, .L22
 374 0016 0A4A     		ldr	r2, .L22
 375 0018 1268     		ldr	r2, [r2]
 376 001a 0721     		movs	r1, #7
 377 001c 8A43     		bics	r2, r1
 378 001e 1100     		movs	r1, r2
 348:Generated_Source\PSoC4/CyLib.c ****                         (( uint32 ) (clkSelect & ( uint32 )CY_SYS_CLK_SELECT_DIRECT_SEL_PARAM_MASK)
 379              		.loc 1 348 0
 380 0020 7A68     		ldr	r2, [r7, #4]
 381 0022 0120     		movs	r0, #1
 382 0024 0240     		ands	r2, r0
 347:Generated_Source\PSoC4/CyLib.c ****                         (( uint32 ) (clkSelect & ( uint32 )CY_SYS_CLK_SELECT_DIRECT_SEL_PARAM_MASK)
 383              		.loc 1 347 0
 384 0026 0A43     		orrs	r2, r1
 385 0028 1A60     		str	r2, [r3]
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 14


 386              		.loc 1 350 0
 387 002a 0F23     		movs	r3, #15
 388 002c FB18     		adds	r3, r7, r3
 389 002e 1B78     		ldrb	r3, [r3]
 390 0030 1800     		movs	r0, r3
 391 0032 FFF7FEFF 		bl	CyExitCriticalSection
 351:Generated_Source\PSoC4/CyLib.c **** }
 392              		.loc 1 351 0
 393 0036 C046     		nop
 394 0038 BD46     		mov	sp, r7
 395 003a 05B0     		add	sp, sp, #20
 396              		@ sp needed
 397 003c 90BD     		pop	{r4, r7, pc}
 398              	.L23:
 399 003e C046     		.align	2
 400              	.L22:
 401 0040 00010B40 		.word	1074462976
 402              		.cfi_endproc
 403              	.LFE5:
 404              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 405              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 406              		.align	2
 407              		.global	CySysClkWriteSysclkDiv
 408              		.code	16
 409              		.thumb_func
 410              		.type	CySysClkWriteSysclkDiv, %function
 411              	CySysClkWriteSysclkDiv:
 412              	.LFB6:
 352:Generated_Source\PSoC4/CyLib.c **** 
 353:Generated_Source\PSoC4/CyLib.c **** 
 354:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 355:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 356:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 357:Generated_Source\PSoC4/CyLib.c **** *
 358:Generated_Source\PSoC4/CyLib.c **** * Summary:
 359:Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 360:Generated_Source\PSoC4/CyLib.c **** *
 361:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 362:Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 363:Generated_Source\PSoC4/CyLib.c **** *
 364:Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 365:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 366:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 367:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 368:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 369:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 370:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 371:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 372:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 373:Generated_Source\PSoC4/CyLib.c **** *
 374:Generated_Source\PSoC4/CyLib.c **** * Return:
 375:Generated_Source\PSoC4/CyLib.c **** *  None
 376:Generated_Source\PSoC4/CyLib.c **** *
 377:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 378:Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 379:Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 380:Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 15


 381:Generated_Source\PSoC4/CyLib.c **** *
 382:Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 383:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 384:Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from Flash.
 385:Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency decreases, you can call
 386:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 387:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 388:Generated_Source\PSoC4/CyLib.c **** *
 389:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 390:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 391:Generated_Source\PSoC4/CyLib.c **** {
 413              		.loc 1 391 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 16
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417 0000 90B5     		push	{r4, r7, lr}
 418              		.cfi_def_cfa_offset 12
 419              		.cfi_offset 4, -12
 420              		.cfi_offset 7, -8
 421              		.cfi_offset 14, -4
 422 0002 85B0     		sub	sp, sp, #20
 423              		.cfi_def_cfa_offset 32
 424 0004 00AF     		add	r7, sp, #0
 425              		.cfi_def_cfa_register 7
 426 0006 7860     		str	r0, [r7, #4]
 392:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 393:Generated_Source\PSoC4/CyLib.c **** 
 394:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 427              		.loc 1 394 0
 428 0008 0F23     		movs	r3, #15
 429 000a FC18     		adds	r4, r7, r3
 430 000c FFF7FEFF 		bl	CyEnterCriticalSection
 431 0010 0300     		movs	r3, r0
 432 0012 2370     		strb	r3, [r4]
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 433              		.loc 1 396 0
 434 0014 0A4B     		ldr	r3, .L25
 435 0016 7A68     		ldr	r2, [r7, #4]
 436 0018 D104     		lsls	r1, r2, #19
 437 001a E022     		movs	r2, #224
 438 001c 9203     		lsls	r2, r2, #14
 439 001e 1140     		ands	r1, r2
 397:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 398:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 440              		.loc 1 398 0
 441 0020 074A     		ldr	r2, .L25
 442 0022 1268     		ldr	r2, [r2]
 443 0024 0748     		ldr	r0, .L25+4
 444 0026 0240     		ands	r2, r0
 397:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 445              		.loc 1 397 0
 446 0028 0A43     		orrs	r2, r1
 396:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 447              		.loc 1 396 0
 448 002a 1A60     		str	r2, [r3]
 399:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 16


 400:Generated_Source\PSoC4/CyLib.c **** 
 401:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 449              		.loc 1 401 0
 450 002c 0F23     		movs	r3, #15
 451 002e FB18     		adds	r3, r7, r3
 452 0030 1B78     		ldrb	r3, [r3]
 453 0032 1800     		movs	r0, r3
 454 0034 FFF7FEFF 		bl	CyExitCriticalSection
 402:Generated_Source\PSoC4/CyLib.c **** }
 455              		.loc 1 402 0
 456 0038 C046     		nop
 457 003a BD46     		mov	sp, r7
 458 003c 05B0     		add	sp, sp, #20
 459              		@ sp needed
 460 003e 90BD     		pop	{r4, r7, pc}
 461              	.L26:
 462              		.align	2
 463              	.L25:
 464 0040 00010B40 		.word	1074462976
 465 0044 FFFFC7FF 		.word	-3670017
 466              		.cfi_endproc
 467              	.LFE6:
 468              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 469              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 470              		.align	2
 471              		.global	CySysClkWriteImoFreq
 472              		.code	16
 473              		.thumb_func
 474              		.type	CySysClkWriteImoFreq, %function
 475              	CySysClkWriteImoFreq:
 476              	.LFB7:
 403:Generated_Source\PSoC4/CyLib.c **** 
 404:Generated_Source\PSoC4/CyLib.c **** 
 405:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 408:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteImoFreq
 409:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 410:Generated_Source\PSoC4/CyLib.c ****     *
 411:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 412:Generated_Source\PSoC4/CyLib.c ****     *  Sets the frequency of the IMO.
 413:Generated_Source\PSoC4/CyLib.c ****     *
 414:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 415:Generated_Source\PSoC4/CyLib.c ****     *  freq: Valid range [3-48].  Frequency for operation of the IMO.
 416:Generated_Source\PSoC4/CyLib.c ****     *  Note: Invalid frequency will be ignored.
 417:Generated_Source\PSoC4/CyLib.c ****     *
 418:Generated_Source\PSoC4/CyLib.c ****     * Return:
 419:Generated_Source\PSoC4/CyLib.c ****     *  None
 420:Generated_Source\PSoC4/CyLib.c ****     *
 421:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 422:Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 423:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 424:Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from Flash.
 425:Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency decreases, you can call
 426:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance.
 427:Generated_Source\PSoC4/CyLib.c ****     *  See CySysFlashSetWaitCycles() description for more information.
 428:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 17


 429:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 430:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 431:Generated_Source\PSoC4/CyLib.c ****     {
 477              		.loc 1 431 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 16
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481 0000 90B5     		push	{r4, r7, lr}
 482              		.cfi_def_cfa_offset 12
 483              		.cfi_offset 4, -12
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 85B0     		sub	sp, sp, #20
 487              		.cfi_def_cfa_offset 32
 488 0004 00AF     		add	r7, sp, #0
 489              		.cfi_def_cfa_register 7
 490 0006 7860     		str	r0, [r7, #4]
 432:Generated_Source\PSoC4/CyLib.c ****         uint8  bgTrim4;
 433:Generated_Source\PSoC4/CyLib.c ****         uint8  bgTrim5;
 434:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 435:Generated_Source\PSoC4/CyLib.c ****         uint8  newImoTrim2Value;
 436:Generated_Source\PSoC4/CyLib.c ****         uint8  currentImoTrim2Value;
 437:Generated_Source\PSoC4/CyLib.c **** 
 438:Generated_Source\PSoC4/CyLib.c **** 
 439:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 491              		.loc 1 439 0
 492 0008 7B68     		ldr	r3, [r7, #4]
 493 000a 022B     		cmp	r3, #2
 494 000c 00D8     		bhi	.LCB311
 495 000e BBE0     		b	.L28	@long jump
 496              	.LCB311:
 497              		.loc 1 439 0 is_stmt 0 discriminator 1
 498 0010 7B68     		ldr	r3, [r7, #4]
 499 0012 302B     		cmp	r3, #48
 500 0014 00D9     		bls	.LCB314
 501 0016 B7E0     		b	.L28	@long jump
 502              	.LCB314:
 440:Generated_Source\PSoC4/CyLib.c ****         {
 441:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 503              		.loc 1 441 0 is_stmt 1
 504 0018 5F4B     		ldr	r3, .L39
 505 001a 1B78     		ldrb	r3, [r3]
 506 001c DBB2     		uxtb	r3, r3
 507 001e 1A00     		movs	r2, r3
 508 0020 7B68     		ldr	r3, [r7, #4]
 509 0022 9A42     		cmp	r2, r3
 510 0024 0AD3     		bcc	.L29
 442:Generated_Source\PSoC4/CyLib.c ****             {
 443:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 511              		.loc 1 443 0
 512 0026 5D4A     		ldr	r2, .L39+4
 513 0028 0F23     		movs	r3, #15
 514 002a FB18     		adds	r3, r7, r3
 515 002c 1278     		ldrb	r2, [r2]
 516 002e 1A70     		strb	r2, [r3]
 444:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 517              		.loc 1 444 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 18


 518 0030 5B4A     		ldr	r2, .L39+8
 519 0032 0E23     		movs	r3, #14
 520 0034 FB18     		adds	r3, r7, r3
 521 0036 1278     		ldrb	r2, [r2]
 522 0038 1A70     		strb	r2, [r3]
 523 003a 3FE0     		b	.L30
 524              	.L29:
 445:Generated_Source\PSoC4/CyLib.c ****             }
 446:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 525              		.loc 1 446 0
 526 003c 594B     		ldr	r3, .L39+12
 527 003e 1B78     		ldrb	r3, [r3]
 528 0040 DBB2     		uxtb	r3, r3
 529 0042 1A00     		movs	r2, r3
 530 0044 7B68     		ldr	r3, [r7, #4]
 531 0046 9A42     		cmp	r2, r3
 532 0048 0AD3     		bcc	.L31
 447:Generated_Source\PSoC4/CyLib.c ****             {
 448:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 533              		.loc 1 448 0
 534 004a 574A     		ldr	r2, .L39+16
 535 004c 0F23     		movs	r3, #15
 536 004e FB18     		adds	r3, r7, r3
 537 0050 1278     		ldrb	r2, [r2]
 538 0052 1A70     		strb	r2, [r3]
 449:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 539              		.loc 1 449 0
 540 0054 554A     		ldr	r2, .L39+20
 541 0056 0E23     		movs	r3, #14
 542 0058 FB18     		adds	r3, r7, r3
 543 005a 1278     		ldrb	r2, [r2]
 544 005c 1A70     		strb	r2, [r3]
 545 005e 2DE0     		b	.L30
 546              	.L31:
 450:Generated_Source\PSoC4/CyLib.c ****             }
 451:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 547              		.loc 1 451 0
 548 0060 534B     		ldr	r3, .L39+24
 549 0062 1B78     		ldrb	r3, [r3]
 550 0064 DBB2     		uxtb	r3, r3
 551 0066 1A00     		movs	r2, r3
 552 0068 7B68     		ldr	r3, [r7, #4]
 553 006a 9A42     		cmp	r2, r3
 554 006c 0AD3     		bcc	.L32
 452:Generated_Source\PSoC4/CyLib.c ****             {
 453:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 555              		.loc 1 453 0
 556 006e 514A     		ldr	r2, .L39+28
 557 0070 0F23     		movs	r3, #15
 558 0072 FB18     		adds	r3, r7, r3
 559 0074 1278     		ldrb	r2, [r2]
 560 0076 1A70     		strb	r2, [r3]
 454:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 561              		.loc 1 454 0
 562 0078 4F4A     		ldr	r2, .L39+32
 563 007a 0E23     		movs	r3, #14
 564 007c FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 19


 565 007e 1278     		ldrb	r2, [r2]
 566 0080 1A70     		strb	r2, [r3]
 567 0082 1BE0     		b	.L30
 568              	.L32:
 455:Generated_Source\PSoC4/CyLib.c ****             }
 456:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 569              		.loc 1 456 0
 570 0084 4D4B     		ldr	r3, .L39+36
 571 0086 1B78     		ldrb	r3, [r3]
 572 0088 DBB2     		uxtb	r3, r3
 573 008a 1A00     		movs	r2, r3
 574 008c 7B68     		ldr	r3, [r7, #4]
 575 008e 9A42     		cmp	r2, r3
 576 0090 0AD3     		bcc	.L33
 457:Generated_Source\PSoC4/CyLib.c ****             {
 458:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 577              		.loc 1 458 0
 578 0092 4B4A     		ldr	r2, .L39+40
 579 0094 0F23     		movs	r3, #15
 580 0096 FB18     		adds	r3, r7, r3
 581 0098 1278     		ldrb	r2, [r2]
 582 009a 1A70     		strb	r2, [r3]
 459:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 583              		.loc 1 459 0
 584 009c 494A     		ldr	r2, .L39+44
 585 009e 0E23     		movs	r3, #14
 586 00a0 FB18     		adds	r3, r7, r3
 587 00a2 1278     		ldrb	r2, [r2]
 588 00a4 1A70     		strb	r2, [r3]
 589 00a6 09E0     		b	.L30
 590              	.L33:
 460:Generated_Source\PSoC4/CyLib.c ****             }
 461:Generated_Source\PSoC4/CyLib.c ****             else
 462:Generated_Source\PSoC4/CyLib.c ****             {
 463:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 591              		.loc 1 463 0
 592 00a8 474A     		ldr	r2, .L39+48
 593 00aa 0F23     		movs	r3, #15
 594 00ac FB18     		adds	r3, r7, r3
 595 00ae 1278     		ldrb	r2, [r2]
 596 00b0 1A70     		strb	r2, [r3]
 464:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 597              		.loc 1 464 0
 598 00b2 464A     		ldr	r2, .L39+52
 599 00b4 0E23     		movs	r3, #14
 600 00b6 FB18     		adds	r3, r7, r3
 601 00b8 1278     		ldrb	r2, [r2]
 602 00ba 1A70     		strb	r2, [r3]
 603              	.L30:
 465:Generated_Source\PSoC4/CyLib.c ****             }
 466:Generated_Source\PSoC4/CyLib.c **** 
 467:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 468:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 604              		.loc 1 468 0
 605 00bc 7B68     		ldr	r3, [r7, #4]
 606 00be DA1E     		subs	r2, r3, #3
 607 00c0 0C23     		movs	r3, #12
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 20


 608 00c2 FB18     		adds	r3, r7, r3
 609 00c4 4249     		ldr	r1, .L39+56
 610 00c6 8A5C     		ldrb	r2, [r1, r2]
 611 00c8 1A70     		strb	r2, [r3]
 469:Generated_Source\PSoC4/CyLib.c **** 
 470:Generated_Source\PSoC4/CyLib.c **** 
 471:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 612              		.loc 1 471 0
 613 00ca 0B23     		movs	r3, #11
 614 00cc FC18     		adds	r4, r7, r3
 615 00ce FFF7FEFF 		bl	CyEnterCriticalSection
 616 00d2 0300     		movs	r3, r0
 617 00d4 2370     		strb	r3, [r4]
 472:Generated_Source\PSoC4/CyLib.c **** 
 473:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 474:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 475:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 476:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 477:Generated_Source\PSoC4/CyLib.c ****             *
 478:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 479:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 480:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 481:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 482:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 618              		.loc 1 482 0
 619 00d6 0C23     		movs	r3, #12
 620 00d8 FB18     		adds	r3, r7, r3
 621 00da 1B78     		ldrb	r3, [r3]
 622 00dc 2F2B     		cmp	r3, #47
 623 00de 0DD9     		bls	.L34
 624              		.loc 1 482 0 is_stmt 0 discriminator 1
 625 00e0 7B68     		ldr	r3, [r7, #4]
 626 00e2 2A2B     		cmp	r3, #42
 627 00e4 0AD9     		bls	.L34
 483:Generated_Source\PSoC4/CyLib.c ****             {
 484:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 485:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 628              		.loc 1 485 0 is_stmt 1
 629 00e6 3B4B     		ldr	r3, .L39+60
 630 00e8 1922     		movs	r2, #25
 631 00ea 1A60     		str	r2, [r3]
 486:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 487:Generated_Source\PSoC4/CyLib.c **** 
 488:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 632              		.loc 1 488 0
 633 00ec 0520     		movs	r0, #5
 634 00ee FFF7FEFF 		bl	CyDelayCycles
 489:Generated_Source\PSoC4/CyLib.c **** 
 490:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 635              		.loc 1 490 0
 636 00f2 0D23     		movs	r3, #13
 637 00f4 FB18     		adds	r3, r7, r3
 638 00f6 1922     		movs	r2, #25
 639 00f8 1A70     		strb	r2, [r3]
 640 00fa 07E0     		b	.L35
 641              	.L34:
 491:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 21


 492:Generated_Source\PSoC4/CyLib.c ****             else
 493:Generated_Source\PSoC4/CyLib.c ****             {
 494:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 642              		.loc 1 494 0
 643 00fc 354B     		ldr	r3, .L39+60
 644 00fe 1B68     		ldr	r3, [r3]
 645 0100 DAB2     		uxtb	r2, r3
 646 0102 0D23     		movs	r3, #13
 647 0104 FB18     		adds	r3, r7, r3
 648 0106 3F21     		movs	r1, #63
 649 0108 0A40     		ands	r2, r1
 650 010a 1A70     		strb	r2, [r3]
 651              	.L35:
 495:Generated_Source\PSoC4/CyLib.c ****             }
 496:Generated_Source\PSoC4/CyLib.c **** 
 497:Generated_Source\PSoC4/CyLib.c **** 
 498:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 499:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 500:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 501:Generated_Source\PSoC4/CyLib.c ****             *
 502:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 503:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 504:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 505:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 506:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 652              		.loc 1 506 0
 653 010c 0C23     		movs	r3, #12
 654 010e FA18     		adds	r2, r7, r3
 655 0110 0D23     		movs	r3, #13
 656 0112 FB18     		adds	r3, r7, r3
 657 0114 1278     		ldrb	r2, [r2]
 658 0116 1B78     		ldrb	r3, [r3]
 659 0118 9A42     		cmp	r2, r3
 660 011a 08D2     		bcs	.L36
 507:Generated_Source\PSoC4/CyLib.c ****             {
 508:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 509:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 661              		.loc 1 509 0
 662 011c 2D4B     		ldr	r3, .L39+60
 663 011e 7A68     		ldr	r2, [r7, #4]
 664 0120 033A     		subs	r2, r2, #3
 665 0122 2B49     		ldr	r1, .L39+56
 666 0124 8A5C     		ldrb	r2, [r1, r2]
 667 0126 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 668              		.loc 1 510 0
 669 0128 0520     		movs	r0, #5
 670 012a FFF7FEFF 		bl	CyDelayCycles
 671              	.L36:
 511:Generated_Source\PSoC4/CyLib.c ****             }
 512:Generated_Source\PSoC4/CyLib.c **** 
 513:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 514:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 672              		.loc 1 514 0
 673 012e 2A4B     		ldr	r3, .L39+64
 674 0130 7A68     		ldr	r2, [r7, #4]
 675 0132 2649     		ldr	r1, .L39+52
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 22


 676 0134 8C46     		mov	ip, r1
 677 0136 6244     		add	r2, r2, ip
 678 0138 1278     		ldrb	r2, [r2]
 679 013a D2B2     		uxtb	r2, r2
 680 013c 1A60     		str	r2, [r3]
 515:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 681              		.loc 1 515 0
 682 013e 274B     		ldr	r3, .L39+68
 683 0140 0F22     		movs	r2, #15
 684 0142 BA18     		adds	r2, r7, r2
 685 0144 1278     		ldrb	r2, [r2]
 686 0146 1A60     		str	r2, [r3]
 516:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 687              		.loc 1 516 0
 688 0148 254B     		ldr	r3, .L39+72
 689 014a 0E22     		movs	r2, #14
 690 014c BA18     		adds	r2, r7, r2
 691 014e 1278     		ldrb	r2, [r2]
 692 0150 1A60     		str	r2, [r3]
 517:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 693              		.loc 1 517 0
 694 0152 0520     		movs	r0, #5
 695 0154 FFF7FEFF 		bl	CyDelayUs
 518:Generated_Source\PSoC4/CyLib.c **** 
 519:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 696              		.loc 1 519 0
 697 0158 0C23     		movs	r3, #12
 698 015a FA18     		adds	r2, r7, r3
 699 015c 0D23     		movs	r3, #13
 700 015e FB18     		adds	r3, r7, r3
 701 0160 1278     		ldrb	r2, [r2]
 702 0162 1B78     		ldrb	r3, [r3]
 703 0164 9A42     		cmp	r2, r3
 704 0166 08D9     		bls	.L37
 520:Generated_Source\PSoC4/CyLib.c ****             {
 521:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 522:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 705              		.loc 1 522 0
 706 0168 1A4B     		ldr	r3, .L39+60
 707 016a 7A68     		ldr	r2, [r7, #4]
 708 016c 033A     		subs	r2, r2, #3
 709 016e 1849     		ldr	r1, .L39+56
 710 0170 8A5C     		ldrb	r2, [r1, r2]
 711 0172 1A60     		str	r2, [r3]
 523:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 712              		.loc 1 523 0
 713 0174 0520     		movs	r0, #5
 714 0176 FFF7FEFF 		bl	CyDelayCycles
 715              	.L37:
 524:Generated_Source\PSoC4/CyLib.c ****             }
 525:Generated_Source\PSoC4/CyLib.c **** 
 526:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 716              		.loc 1 526 0
 717 017a 0B23     		movs	r3, #11
 718 017c FB18     		adds	r3, r7, r3
 719 017e 1B78     		ldrb	r3, [r3]
 720 0180 1800     		movs	r0, r3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 23


 721 0182 FFF7FEFF 		bl	CyExitCriticalSection
 722 0186 02E0     		b	.L38
 723              	.L28:
 527:Generated_Source\PSoC4/CyLib.c ****         }
 528:Generated_Source\PSoC4/CyLib.c ****         else
 529:Generated_Source\PSoC4/CyLib.c ****         {
 530:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 531:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 724              		.loc 1 531 0 discriminator 1
 725 0188 0020     		movs	r0, #0
 726 018a FFF7FEFF 		bl	CyHalt
 727              	.L38:
 532:Generated_Source\PSoC4/CyLib.c ****         }
 533:Generated_Source\PSoC4/CyLib.c ****     }
 728              		.loc 1 533 0
 729 018e C046     		nop
 730 0190 BD46     		mov	sp, r7
 731 0192 05B0     		add	sp, sp, #20
 732              		@ sp needed
 733 0194 90BD     		pop	{r4, r7, pc}
 734              	.L40:
 735 0196 C046     		.align	2
 736              	.L39:
 737 0198 C0F1FF0F 		.word	268431808
 738 019c C1F1FF0F 		.word	268431809
 739 01a0 C2F1FF0F 		.word	268431810
 740 01a4 C3F1FF0F 		.word	268431811
 741 01a8 C4F1FF0F 		.word	268431812
 742 01ac C5F1FF0F 		.word	268431813
 743 01b0 C6F1FF0F 		.word	268431814
 744 01b4 C7F1FF0F 		.word	268431815
 745 01b8 C8F1FF0F 		.word	268431816
 746 01bc C9F1FF0F 		.word	268431817
 747 01c0 CAF1FF0F 		.word	268431818
 748 01c4 CBF1FF0F 		.word	268431819
 749 01c8 CCF1FF0F 		.word	268431820
 750 01cc CDF1FF0F 		.word	268431821
 751 01d0 00000000 		.word	cyImoFreqMhz2Reg
 752 01d4 2CFF0B40 		.word	1074528044
 753 01d8 28FF0B40 		.word	1074528040
 754 01dc 1CFF0B40 		.word	1074528028
 755 01e0 20FF0B40 		.word	1074528032
 756              		.cfi_endproc
 757              	.LFE7:
 758              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 759              		.section	.text.CySysWdtLock,"ax",%progbits
 760              		.align	2
 761              		.global	CySysWdtLock
 762              		.code	16
 763              		.thumb_func
 764              		.type	CySysWdtLock, %function
 765              	CySysWdtLock:
 766              	.LFB8:
 534:Generated_Source\PSoC4/CyLib.c **** 
 535:Generated_Source\PSoC4/CyLib.c **** 
 536:Generated_Source\PSoC4/CyLib.c **** #else
 537:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 24


 538:Generated_Source\PSoC4/CyLib.c **** 
 539:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 540:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 541:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 542:Generated_Source\PSoC4/CyLib.c ****     *
 543:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 544:Generated_Source\PSoC4/CyLib.c ****     *  Selects HF clk predivider value.
 545:Generated_Source\PSoC4/CyLib.c ****     *
 546:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 547:Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 548:Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 549:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 550:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 551:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 552:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 553:Generated_Source\PSoC4/CyLib.c ****     *
 554:Generated_Source\PSoC4/CyLib.c ****     * Return:
 555:Generated_Source\PSoC4/CyLib.c ****     *  None
 556:Generated_Source\PSoC4/CyLib.c ****     *
 557:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 558:Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 559:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 560:Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from Flash.
 561:Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency decreases, you can call
 562:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 564:Generated_Source\PSoC4/CyLib.c ****     *
 565:Generated_Source\PSoC4/CyLib.c **** 
 566:Generated_Source\PSoC4/CyLib.c ****     *
 567:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 568:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 569:Generated_Source\PSoC4/CyLib.c ****     {
 570:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 571:Generated_Source\PSoC4/CyLib.c **** 
 572:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 573:Generated_Source\PSoC4/CyLib.c **** 
 574:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 575:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 576:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 577:Generated_Source\PSoC4/CyLib.c **** 
 578:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 579:Generated_Source\PSoC4/CyLib.c ****     }
 580:Generated_Source\PSoC4/CyLib.c **** 
 581:Generated_Source\PSoC4/CyLib.c **** 
 582:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 583:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteImoFreq
 584:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 585:Generated_Source\PSoC4/CyLib.c ****     *
 586:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 587:Generated_Source\PSoC4/CyLib.c ****     *  Sets the frequency of the IMO.
 588:Generated_Source\PSoC4/CyLib.c ****     *
 589:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 590:Generated_Source\PSoC4/CyLib.c ****     *  freq: Valid values are 24, 32 and 48 MHz.
 591:Generated_Source\PSoC4/CyLib.c ****     *
 592:Generated_Source\PSoC4/CyLib.c ****     *  Note: The CPU is halted if new frequency is invalid and project is
 593:Generated_Source\PSoC4/CyLib.c ****     *  compiled in debug mode.
 594:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 25


 595:Generated_Source\PSoC4/CyLib.c ****     * Return:
 596:Generated_Source\PSoC4/CyLib.c ****     *  None
 597:Generated_Source\PSoC4/CyLib.c ****     *
 598:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 599:Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 600:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 601:Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from Flash.
 602:Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency decreases, you can call
 603:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 604:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 605:Generated_Source\PSoC4/CyLib.c ****     *
 606:Generated_Source\PSoC4/CyLib.c ****     *  The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK and SYSCLK
 607:Generated_Source\PSoC4/CyLib.c ****     *  dividers should be selected in a way, to not to exceed 16 MHz for the System
 608:Generated_Source\PSoC4/CyLib.c ****     *  clock.
 609:Generated_Source\PSoC4/CyLib.c ****     *
 610:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 611:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 612:Generated_Source\PSoC4/CyLib.c ****     {
 613:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 614:Generated_Source\PSoC4/CyLib.c **** 
 615:Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 616:Generated_Source\PSoC4/CyLib.c ****         {
 617:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 618:Generated_Source\PSoC4/CyLib.c **** 
 619:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 621:Generated_Source\PSoC4/CyLib.c **** 
 622:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 623:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 624:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 625:Generated_Source\PSoC4/CyLib.c **** 
 626:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 627:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 628:Generated_Source\PSoC4/CyLib.c **** 
 629:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 630:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 631:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 632:Generated_Source\PSoC4/CyLib.c **** 
 633:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 634:Generated_Source\PSoC4/CyLib.c **** 
 635:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 636:Generated_Source\PSoC4/CyLib.c ****             {
 637:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 638:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 639:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 642:Generated_Source\PSoC4/CyLib.c **** 
 643:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 644:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 645:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 646:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 647:Generated_Source\PSoC4/CyLib.c ****             }
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 650:Generated_Source\PSoC4/CyLib.c ****         }
 651:Generated_Source\PSoC4/CyLib.c ****         else
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 26


 652:Generated_Source\PSoC4/CyLib.c ****         {
 653:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 654:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 655:Generated_Source\PSoC4/CyLib.c ****         }
 656:Generated_Source\PSoC4/CyLib.c ****     }
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c **** 
 661:Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 662:Generated_Source\PSoC4/CyLib.c **** 
 663:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 664:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 665:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 666:Generated_Source\PSoC4/CyLib.c ****     *
 667:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 668:Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 669:Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 670:Generated_Source\PSoC4/CyLib.c ****     *
 671:Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 672:Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 673:Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 674:Generated_Source\PSoC4/CyLib.c ****     *
 675:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 676:Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 677:Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 678:Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 679:Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 680:Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 681:Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 682:Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 683:Generated_Source\PSoC4/CyLib.c ****     *
 684:Generated_Source\PSoC4/CyLib.c ****     * Return:
 685:Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 686:Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 687:Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 688:Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 689:Generated_Source\PSoC4/CyLib.c ****     *
 690:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 691:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 692:Generated_Source\PSoC4/CyLib.c ****     {
 693:Generated_Source\PSoC4/CyLib.c ****         cystatus status = CYRET_SUCCESS;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         /* Enable the RF oscillator band gap */
 696:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 697:Generated_Source\PSoC4/CyLib.c **** 
 698:Generated_Source\PSoC4/CyLib.c ****         /* Update trimming register */
 699:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 700:Generated_Source\PSoC4/CyLib.c **** 
 701:Generated_Source\PSoC4/CyLib.c ****         /* Enable the Crystal */
 702:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 703:Generated_Source\PSoC4/CyLib.c **** 
 704:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 705:Generated_Source\PSoC4/CyLib.c ****         {
 706:Generated_Source\PSoC4/CyLib.c ****             status = CYRET_TIMEOUT;
 707:Generated_Source\PSoC4/CyLib.c **** 
 708:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 27


 709:Generated_Source\PSoC4/CyLib.c ****             {
 710:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 711:Generated_Source\PSoC4/CyLib.c **** 
 712:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 713:Generated_Source\PSoC4/CyLib.c ****                 {
 714:Generated_Source\PSoC4/CyLib.c ****                     status = CYRET_SUCCESS;
 715:Generated_Source\PSoC4/CyLib.c ****                     break;
 716:Generated_Source\PSoC4/CyLib.c ****                 }
 717:Generated_Source\PSoC4/CyLib.c ****             }
 718:Generated_Source\PSoC4/CyLib.c **** 
 719:Generated_Source\PSoC4/CyLib.c ****         }
 720:Generated_Source\PSoC4/CyLib.c **** 
 721:Generated_Source\PSoC4/CyLib.c ****         return(status);
 722:Generated_Source\PSoC4/CyLib.c ****     }
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 726:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
 727:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 728:Generated_Source\PSoC4/CyLib.c ****     *
 729:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 730:Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
 731:Generated_Source\PSoC4/CyLib.c ****     *
 732:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 733:Generated_Source\PSoC4/CyLib.c ****     *  None
 734:Generated_Source\PSoC4/CyLib.c ****     *
 735:Generated_Source\PSoC4/CyLib.c ****     * Return:
 736:Generated_Source\PSoC4/CyLib.c ****     *  None
 737:Generated_Source\PSoC4/CyLib.c ****     *
 738:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 739:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
 740:Generated_Source\PSoC4/CyLib.c ****     {
 741:Generated_Source\PSoC4/CyLib.c ****         /* Disable the RF oscillator band gap */
 742:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****         /* Disable the Crystal */
 745:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 746:Generated_Source\PSoC4/CyLib.c ****     }
 747:Generated_Source\PSoC4/CyLib.c **** 
 748:Generated_Source\PSoC4/CyLib.c **** 
 749:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 750:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
 751:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 752:Generated_Source\PSoC4/CyLib.c ****     *
 753:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 754:Generated_Source\PSoC4/CyLib.c ****     *  Read status bit (50 ppm reached) for the megahertz crystal.
 755:Generated_Source\PSoC4/CyLib.c ****     *
 756:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 757:Generated_Source\PSoC4/CyLib.c ****     *  None
 758:Generated_Source\PSoC4/CyLib.c ****     *
 759:Generated_Source\PSoC4/CyLib.c ****     * Return:
 760:Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that XTAL output reached 50 ppm.
 761:Generated_Source\PSoC4/CyLib.c ****     *
 762:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 763:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
 764:Generated_Source\PSoC4/CyLib.c ****     {
 765:Generated_Source\PSoC4/CyLib.c ****         return (CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT);
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 28


 766:Generated_Source\PSoC4/CyLib.c ****     }
 767:Generated_Source\PSoC4/CyLib.c **** 
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 770:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteEcoDiv
 771:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 772:Generated_Source\PSoC4/CyLib.c ****     *
 773:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 774:Generated_Source\PSoC4/CyLib.c ****     *  Selects value for the ECO divider.
 775:Generated_Source\PSoC4/CyLib.c ****     *
 776:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 777:Generated_Source\PSoC4/CyLib.c ****     *  divider: Power of 2 divider selection.
 778:Generated_Source\PSoC4/CyLib.c ****     *
 779:Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 780:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
 781:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
 782:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
 783:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
 784:Generated_Source\PSoC4/CyLib.c ****     *
 785:Generated_Source\PSoC4/CyLib.c ****     * Return:
 786:Generated_Source\PSoC4/CyLib.c ****     *  None
 787:Generated_Source\PSoC4/CyLib.c ****     *
 788:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 789:Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 790:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 791:Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from Flash.
 792:Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency decreases, you can call
 793:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 794:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 795:Generated_Source\PSoC4/CyLib.c ****     *
 796:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 797:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteEcoDiv(uint32 divider)
 798:Generated_Source\PSoC4/CyLib.c ****     {
 799:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 804:Generated_Source\PSoC4/CyLib.c ****                                               (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint32) ~CY_S
 805:Generated_Source\PSoC4/CyLib.c **** 
 806:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 807:Generated_Source\PSoC4/CyLib.c ****     }
 808:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 809:Generated_Source\PSoC4/CyLib.c **** 
 810:Generated_Source\PSoC4/CyLib.c **** 
 811:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_WCO)
 812:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 813:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWcoStart
 814:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 815:Generated_Source\PSoC4/CyLib.c ****     *
 816:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 817:Generated_Source\PSoC4/CyLib.c ****     *  Enables the Watch Crystal Oscillator (WCO). The WCO is used as a source for
 818:Generated_Source\PSoC4/CyLib.c ****     *  LFCLK.  Similar to ILO, WCO is also available in all modes except Hibernate
 819:Generated_Source\PSoC4/CyLib.c ****     *  and Stop modes.
 820:Generated_Source\PSoC4/CyLib.c ****     *
 821:Generated_Source\PSoC4/CyLib.c ****     *  The WCO is always enabled in High Power Mode (HPM). Refer to the device
 822:Generated_Source\PSoC4/CyLib.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 29


 823:Generated_Source\PSoC4/CyLib.c ****     *  switched to the Low Power Mode (LPM). Note that oscillator can be unstable
 824:Generated_Source\PSoC4/CyLib.c ****     *  during switch and hence its output should not be used at the moment.
 825:Generated_Source\PSoC4/CyLib.c ****     *
 826:Generated_Source\PSoC4/CyLib.c ****     *  The CySysClkWcoSetPowerMode() function configures WCO power mode.
 827:Generated_Source\PSoC4/CyLib.c ****     *
 828:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 829:Generated_Source\PSoC4/CyLib.c ****     *  None
 830:Generated_Source\PSoC4/CyLib.c ****     *
 831:Generated_Source\PSoC4/CyLib.c ****     * Return:
 832:Generated_Source\PSoC4/CyLib.c ****     *  None
 833:Generated_Source\PSoC4/CyLib.c ****     *
 834:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 835:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWcoStart(void)
 836:Generated_Source\PSoC4/CyLib.c ****     {
 837:Generated_Source\PSoC4/CyLib.c ****         CySysClkWcoSetHighPowerMode();
 838:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 839:Generated_Source\PSoC4/CyLib.c ****     }
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 843:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWcoStop
 844:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 845:Generated_Source\PSoC4/CyLib.c ****     *
 846:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 847:Generated_Source\PSoC4/CyLib.c ****     *  Disables the 32KHz Crystal Oscillator.
 848:Generated_Source\PSoC4/CyLib.c ****     *
 849:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 850:Generated_Source\PSoC4/CyLib.c ****     *  None
 851:Generated_Source\PSoC4/CyLib.c ****     *
 852:Generated_Source\PSoC4/CyLib.c ****     * Return:
 853:Generated_Source\PSoC4/CyLib.c ****     *  None
 854:Generated_Source\PSoC4/CyLib.c ****     *
 855:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 856:Generated_Source\PSoC4/CyLib.c ****     void  CySysClkWcoStop(void)
 857:Generated_Source\PSoC4/CyLib.c ****     {
 858:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 859:Generated_Source\PSoC4/CyLib.c **** 
 860:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 861:Generated_Source\PSoC4/CyLib.c ****         {
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 864:Generated_Source\PSoC4/CyLib.c ****             {
 865:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 866:Generated_Source\PSoC4/CyLib.c ****                 CySysClkLfclkPosedgeCatch();
 867:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 868:Generated_Source\PSoC4/CyLib.c ****                 CySysClkLfclkPosedgeRestore();
 869:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 870:Generated_Source\PSoC4/CyLib.c ****             }
 871:Generated_Source\PSoC4/CyLib.c ****             else /* Safe to disable - shortened pulse does not impact peripheral */
 872:Generated_Source\PSoC4/CyLib.c ****             {
 873:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 874:Generated_Source\PSoC4/CyLib.c ****             }
 875:Generated_Source\PSoC4/CyLib.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 876:Generated_Source\PSoC4/CyLib.c ****     }
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 30


 880:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWcoEnabled
 881:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 882:Generated_Source\PSoC4/CyLib.c ****     *
 883:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 884:Generated_Source\PSoC4/CyLib.c ****     *  Reports WCO enable state.
 885:Generated_Source\PSoC4/CyLib.c ****     *
 886:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 887:Generated_Source\PSoC4/CyLib.c ****     *  None
 888:Generated_Source\PSoC4/CyLib.c ****     *
 889:Generated_Source\PSoC4/CyLib.c ****     * Return:
 890:Generated_Source\PSoC4/CyLib.c ****     *  1 if WCO is enabled, and 0 if WCO is disabled.
 891:Generated_Source\PSoC4/CyLib.c ****     *
 892:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 893:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkWcoEnabled(void)
 894:Generated_Source\PSoC4/CyLib.c ****     {
 895:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 896:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 897:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 898:Generated_Source\PSoC4/CyLib.c ****     }
 899:Generated_Source\PSoC4/CyLib.c **** 
 900:Generated_Source\PSoC4/CyLib.c **** 
 901:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 902:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWcoSetPowerMode
 903:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 904:Generated_Source\PSoC4/CyLib.c ****     *
 905:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 906:Generated_Source\PSoC4/CyLib.c ****     *  Sets the power mode for the 32 KHz WCO.
 907:Generated_Source\PSoC4/CyLib.c ****     *
 908:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 909:Generated_Source\PSoC4/CyLib.c ****     *  uint32 mode:
 910:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_WCO_HPM  - High power mode
 911:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_WCO_LPM  - Low power mode
 912:Generated_Source\PSoC4/CyLib.c ****     *
 913:Generated_Source\PSoC4/CyLib.c ****     * Return:
 914:Generated_Source\PSoC4/CyLib.c ****     *  Previous power mode. The same as parameters.
 915:Generated_Source\PSoC4/CyLib.c ****     *
 916:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 917:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 918:Generated_Source\PSoC4/CyLib.c ****     {
 919:Generated_Source\PSoC4/CyLib.c ****         uint32 status;
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****         status = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_LPM;
 922:Generated_Source\PSoC4/CyLib.c **** 
 923:Generated_Source\PSoC4/CyLib.c ****         switch(mode)
 924:Generated_Source\PSoC4/CyLib.c ****         {
 925:Generated_Source\PSoC4/CyLib.c ****         case CY_SYS_CLK_WCO_HPM:
 926:Generated_Source\PSoC4/CyLib.c ****                 CySysClkWcoSetHighPowerMode();
 927:Generated_Source\PSoC4/CyLib.c ****             break;
 928:Generated_Source\PSoC4/CyLib.c **** 
 929:Generated_Source\PSoC4/CyLib.c ****         case CY_SYS_CLK_WCO_LPM:
 930:Generated_Source\PSoC4/CyLib.c ****                 CySysClkWcoSetLowPowerMode();
 931:Generated_Source\PSoC4/CyLib.c ****             break;
 932:Generated_Source\PSoC4/CyLib.c **** 
 933:Generated_Source\PSoC4/CyLib.c ****         default:
 934:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 935:Generated_Source\PSoC4/CyLib.c ****             break;
 936:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 31


 937:Generated_Source\PSoC4/CyLib.c **** 
 938:Generated_Source\PSoC4/CyLib.c ****         return (status);
 939:Generated_Source\PSoC4/CyLib.c ****     }
 940:Generated_Source\PSoC4/CyLib.c **** 
 941:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_WCO) */
 942:Generated_Source\PSoC4/CyLib.c **** 
 943:Generated_Source\PSoC4/CyLib.c **** 
 944:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtLock
 949:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 950:Generated_Source\PSoC4/CyLib.c ****     *
 951:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 952:Generated_Source\PSoC4/CyLib.c ****     *  Locks out configuration changes to the Watchdog timer registers and ILO
 953:Generated_Source\PSoC4/CyLib.c ****     *  configuration register.
 954:Generated_Source\PSoC4/CyLib.c ****     *
 955:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 956:Generated_Source\PSoC4/CyLib.c ****     *  None
 957:Generated_Source\PSoC4/CyLib.c ****     *
 958:Generated_Source\PSoC4/CyLib.c ****     * Return:
 959:Generated_Source\PSoC4/CyLib.c ****     *  None
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * Side effects:
 962:Generated_Source\PSoC4/CyLib.c ****     *  After this function was called, ILO clock can't be disabled until
 963:Generated_Source\PSoC4/CyLib.c ****     *  CySysWdtUnlock() is called.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 966:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtLock(void)
 967:Generated_Source\PSoC4/CyLib.c ****     {
 767              		.loc 1 967 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 8
 770              		@ frame_needed = 1, uses_anonymous_args = 0
 771 0000 90B5     		push	{r4, r7, lr}
 772              		.cfi_def_cfa_offset 12
 773              		.cfi_offset 4, -12
 774              		.cfi_offset 7, -8
 775              		.cfi_offset 14, -4
 776 0002 83B0     		sub	sp, sp, #12
 777              		.cfi_def_cfa_offset 24
 778 0004 00AF     		add	r7, sp, #0
 779              		.cfi_def_cfa_register 7
 968:Generated_Source\PSoC4/CyLib.c ****         uint8 interruptState;
 969:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 780              		.loc 1 969 0
 781 0006 FC1D     		adds	r4, r7, #7
 782 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 783 000c 0300     		movs	r3, r0
 784 000e 2370     		strb	r3, [r4]
 970:Generated_Source\PSoC4/CyLib.c **** 
 971:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 785              		.loc 1 971 0
 786 0010 074B     		ldr	r3, .L42
 787 0012 074A     		ldr	r2, .L42
 788 0014 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 32


 789 0016 C021     		movs	r1, #192
 790 0018 0902     		lsls	r1, r1, #8
 791 001a 0A43     		orrs	r2, r1
 792 001c 1A60     		str	r2, [r3]
 972:Generated_Source\PSoC4/CyLib.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 973:Generated_Source\PSoC4/CyLib.c **** 
 974:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 793              		.loc 1 974 0
 794 001e FB1D     		adds	r3, r7, #7
 795 0020 1B78     		ldrb	r3, [r3]
 796 0022 1800     		movs	r0, r3
 797 0024 FFF7FEFF 		bl	CyExitCriticalSection
 975:Generated_Source\PSoC4/CyLib.c ****     }
 798              		.loc 1 975 0
 799 0028 C046     		nop
 800 002a BD46     		mov	sp, r7
 801 002c 03B0     		add	sp, sp, #12
 802              		@ sp needed
 803 002e 90BD     		pop	{r4, r7, pc}
 804              	.L43:
 805              		.align	2
 806              	.L42:
 807 0030 00010B40 		.word	1074462976
 808              		.cfi_endproc
 809              	.LFE8:
 810              		.size	CySysWdtLock, .-CySysWdtLock
 811              		.section	.text.CySysWdtLocked,"ax",%progbits
 812              		.align	2
 813              		.code	16
 814              		.thumb_func
 815              		.type	CySysWdtLocked, %function
 816              	CySysWdtLocked:
 817              	.LFB9:
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 979:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtLocked
 980:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 981:Generated_Source\PSoC4/CyLib.c ****     *
 982:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 983:Generated_Source\PSoC4/CyLib.c ****     *  Reports WDT lock state.
 984:Generated_Source\PSoC4/CyLib.c ****     *
 985:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 986:Generated_Source\PSoC4/CyLib.c ****     *  None
 987:Generated_Source\PSoC4/CyLib.c ****     *
 988:Generated_Source\PSoC4/CyLib.c ****     * Return:
 989:Generated_Source\PSoC4/CyLib.c ****     *  1 - WDT is locked, and 0 - WDT is unlocked.
 990:Generated_Source\PSoC4/CyLib.c ****     *
 991:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 992:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysWdtLocked(void)
 993:Generated_Source\PSoC4/CyLib.c ****     {
 818              		.loc 1 993 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822 0000 80B5     		push	{r7, lr}
 823              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 33


 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 0002 00AF     		add	r7, sp, #0
 827              		.cfi_def_cfa_register 7
 994:Generated_Source\PSoC4/CyLib.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 995:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 828              		.loc 1 995 0
 829 0004 054B     		ldr	r3, .L48
 830 0006 1A68     		ldr	r2, [r3]
 831 0008 C023     		movs	r3, #192
 832 000a 1B02     		lsls	r3, r3, #8
 833 000c 1340     		ands	r3, r2
 834 000e 01D0     		beq	.L45
 835              		.loc 1 995 0 is_stmt 0 discriminator 1
 836 0010 0123     		movs	r3, #1
 837 0012 00E0     		b	.L47
 838              	.L45:
 839              		.loc 1 995 0 discriminator 2
 840 0014 0023     		movs	r3, #0
 841              	.L47:
 996:Generated_Source\PSoC4/CyLib.c ****     }
 842              		.loc 1 996 0 is_stmt 1 discriminator 5
 843 0016 1800     		movs	r0, r3
 844 0018 BD46     		mov	sp, r7
 845              		@ sp needed
 846 001a 80BD     		pop	{r7, pc}
 847              	.L49:
 848              		.align	2
 849              	.L48:
 850 001c 00010B40 		.word	1074462976
 851              		.cfi_endproc
 852              	.LFE9:
 853              		.size	CySysWdtLocked, .-CySysWdtLocked
 854              		.section	.text.CySysWdtUnlock,"ax",%progbits
 855              		.align	2
 856              		.global	CySysWdtUnlock
 857              		.code	16
 858              		.thumb_func
 859              		.type	CySysWdtUnlock, %function
 860              	CySysWdtUnlock:
 861              	.LFB10:
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c **** 
 999:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtUnlock
1001:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1002:Generated_Source\PSoC4/CyLib.c ****     *
1003:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1004:Generated_Source\PSoC4/CyLib.c ****     *  Unlocks the Watchdog Timer configuration register.
1005:Generated_Source\PSoC4/CyLib.c ****     *
1006:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1007:Generated_Source\PSoC4/CyLib.c ****     *  None
1008:Generated_Source\PSoC4/CyLib.c ****     *
1009:Generated_Source\PSoC4/CyLib.c ****     * Return:
1010:Generated_Source\PSoC4/CyLib.c ****     *  None
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 34


1013:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtUnlock(void)
1014:Generated_Source\PSoC4/CyLib.c ****     {
 862              		.loc 1 1014 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 8
 865              		@ frame_needed = 1, uses_anonymous_args = 0
 866 0000 90B5     		push	{r4, r7, lr}
 867              		.cfi_def_cfa_offset 12
 868              		.cfi_offset 4, -12
 869              		.cfi_offset 7, -8
 870              		.cfi_offset 14, -4
 871 0002 83B0     		sub	sp, sp, #12
 872              		.cfi_def_cfa_offset 24
 873 0004 00AF     		add	r7, sp, #0
 874              		.cfi_def_cfa_register 7
1015:Generated_Source\PSoC4/CyLib.c ****         uint8 interruptState;
1016:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 875              		.loc 1 1016 0
 876 0006 FC1D     		adds	r4, r7, #7
 877 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 878 000c 0300     		movs	r3, r0
 879 000e 2370     		strb	r3, [r4]
1017:Generated_Source\PSoC4/CyLib.c **** 
1018:Generated_Source\PSoC4/CyLib.c ****         /* Removing WDT lock requires two writes */
1019:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 880              		.loc 1 1019 0
 881 0010 0D4B     		ldr	r3, .L51
 882 0012 0D4A     		ldr	r2, .L51
 883 0014 1268     		ldr	r2, [r2]
 884 0016 0D49     		ldr	r1, .L51+4
 885 0018 0A40     		ands	r2, r1
 886 001a 8021     		movs	r1, #128
 887 001c C901     		lsls	r1, r1, #7
 888 001e 0A43     		orrs	r2, r1
 889 0020 1A60     		str	r2, [r3]
1020:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
1021:Generated_Source\PSoC4/CyLib.c **** 
1022:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 890              		.loc 1 1022 0
 891 0022 094B     		ldr	r3, .L51
 892 0024 084A     		ldr	r2, .L51
 893 0026 1268     		ldr	r2, [r2]
 894 0028 0849     		ldr	r1, .L51+4
 895 002a 0A40     		ands	r2, r1
 896 002c 8021     		movs	r1, #128
 897 002e 0902     		lsls	r1, r1, #8
 898 0030 0A43     		orrs	r2, r1
 899 0032 1A60     		str	r2, [r3]
1023:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
1024:Generated_Source\PSoC4/CyLib.c **** 
1025:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 900              		.loc 1 1025 0
 901 0034 FB1D     		adds	r3, r7, #7
 902 0036 1B78     		ldrb	r3, [r3]
 903 0038 1800     		movs	r0, r3
 904 003a FFF7FEFF 		bl	CyExitCriticalSection
1026:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 35


 905              		.loc 1 1026 0
 906 003e C046     		nop
 907 0040 BD46     		mov	sp, r7
 908 0042 03B0     		add	sp, sp, #12
 909              		@ sp needed
 910 0044 90BD     		pop	{r4, r7, pc}
 911              	.L52:
 912 0046 C046     		.align	2
 913              	.L51:
 914 0048 00010B40 		.word	1074462976
 915 004c FF3FFFFF 		.word	-49153
 916              		.cfi_endproc
 917              	.LFE10:
 918              		.size	CySysWdtUnlock, .-CySysWdtUnlock
 919              		.section	.text.CySysWdtReadEnabledStatus,"ax",%progbits
 920              		.align	2
 921              		.global	CySysWdtReadEnabledStatus
 922              		.code	16
 923              		.thumb_func
 924              		.type	CySysWdtReadEnabledStatus, %function
 925              	CySysWdtReadEnabledStatus:
 926              	.LFB11:
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c **** 
1029:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1030:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtReadEnabledStatus
1031:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1032:Generated_Source\PSoC4/CyLib.c ****     *
1033:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1034:Generated_Source\PSoC4/CyLib.c ****     *  Reads the enabled status of one of the three WDT counters.
1035:Generated_Source\PSoC4/CyLib.c ****     *
1036:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1037:Generated_Source\PSoC4/CyLib.c ****     *  counterNum: Valid range [0-2].  Number of the WDT counter.
1038:Generated_Source\PSoC4/CyLib.c ****     *
1039:Generated_Source\PSoC4/CyLib.c ****     * Return:
1040:Generated_Source\PSoC4/CyLib.c ****     *  Status of WDT counter:
1041:Generated_Source\PSoC4/CyLib.c ****     *   0 - counter is disabled
1042:Generated_Source\PSoC4/CyLib.c ****     *   1 - counter is enabled
1043:Generated_Source\PSoC4/CyLib.c ****     *
1044:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1045:Generated_Source\PSoC4/CyLib.c ****     *  This function returns actual WDT counter status from status register. It may
1046:Generated_Source\PSoC4/CyLib.c ****     *  take up to 3 LFCLK cycles since WDT counter was enabled for WDT status
1047:Generated_Source\PSoC4/CyLib.c ****     *  register to contain actual data.
1048:Generated_Source\PSoC4/CyLib.c ****     *
1049:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1050:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtReadEnabledStatus(uint32 counterNum)
1051:Generated_Source\PSoC4/CyLib.c ****     {
 927              		.loc 1 1051 0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 8
 930              		@ frame_needed = 1, uses_anonymous_args = 0
 931 0000 80B5     		push	{r7, lr}
 932              		.cfi_def_cfa_offset 8
 933              		.cfi_offset 7, -8
 934              		.cfi_offset 14, -4
 935 0002 82B0     		sub	sp, sp, #8
 936              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 36


 937 0004 00AF     		add	r7, sp, #0
 938              		.cfi_def_cfa_register 7
 939 0006 7860     		str	r0, [r7, #4]
1052:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 940              		.loc 1 1052 0
 941 0008 7B68     		ldr	r3, [r7, #4]
 942 000a 022B     		cmp	r3, #2
 943 000c 02D9     		bls	.L54
 944              		.loc 1 1052 0 is_stmt 0 discriminator 1
 945 000e 0020     		movs	r0, #0
 946 0010 FFF7FEFF 		bl	CyHalt
 947              	.L54:
1053:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
 948              		.loc 1 1053 0 is_stmt 1
 949 0014 064B     		ldr	r3, .L56
 950 0016 1A68     		ldr	r2, [r3]
 951 0018 7B68     		ldr	r3, [r7, #4]
 952 001a DB00     		lsls	r3, r3, #3
 953 001c 0133     		adds	r3, r3, #1
 954 001e DA40     		lsrs	r2, r2, r3
 955 0020 1300     		movs	r3, r2
 956 0022 0122     		movs	r2, #1
 957 0024 1340     		ands	r3, r2
1054:Generated_Source\PSoC4/CyLib.c ****     }
 958              		.loc 1 1054 0
 959 0026 1800     		movs	r0, r3
 960 0028 BD46     		mov	sp, r7
 961 002a 02B0     		add	sp, sp, #8
 962              		@ sp needed
 963 002c 80BD     		pop	{r7, pc}
 964              	.L57:
 965 002e C046     		.align	2
 966              	.L56:
 967 0030 10020B40 		.word	1074463248
 968              		.cfi_endproc
 969              	.LFE11:
 970              		.size	CySysWdtReadEnabledStatus, .-CySysWdtReadEnabledStatus
 971              		.section	.text.CySysWdtWriteMode,"ax",%progbits
 972              		.align	2
 973              		.global	CySysWdtWriteMode
 974              		.code	16
 975              		.thumb_func
 976              		.type	CySysWdtWriteMode, %function
 977              	CySysWdtWriteMode:
 978              	.LFB12:
1055:Generated_Source\PSoC4/CyLib.c **** 
1056:Generated_Source\PSoC4/CyLib.c **** 
1057:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1058:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtWriteMode
1059:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1060:Generated_Source\PSoC4/CyLib.c ****     *
1061:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1062:Generated_Source\PSoC4/CyLib.c ****     *   Writes the mode of one of the three WDT counters.
1063:Generated_Source\PSoC4/CyLib.c ****     *
1064:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1065:Generated_Source\PSoC4/CyLib.c ****     *   counterNum: Valid range [0-2].  Number of the WDT counter.
1066:Generated_Source\PSoC4/CyLib.c ****     *   mode:       Mode of operation for the counter
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 37


1067:Generated_Source\PSoC4/CyLib.c ****     *       Define                   Mode
1068:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_WDT_MODE_NONE       Free running
1069:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_WDT_MODE_INT        Interrupt generated on match for counter 0
1070:Generated_Source\PSoC4/CyLib.c ****     *                               and 1, and on bit toggle for counter 2.
1071:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_WDT_MODE_RESET      Reset on match (valid for counter 0 and 1
1072:Generated_Source\PSoC4/CyLib.c ****     *                               only)
1073:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_WDT_MODE_INT_RESET  Generate an interrupt.  Generate a reset on
1074:Generated_Source\PSoC4/CyLib.c ****     *                                    the 3rd unhandled interrupt.
1075:Generated_Source\PSoC4/CyLib.c ****     *                                    (valid for counter 0 and 1 only)
1076:Generated_Source\PSoC4/CyLib.c ****     * Return:
1077:Generated_Source\PSoC4/CyLib.c ****     *   None
1078:Generated_Source\PSoC4/CyLib.c ****     *
1079:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1080:Generated_Source\PSoC4/CyLib.c ****     *   WDT counter counterNum should be disabled to set mode. Otherwise this
1081:Generated_Source\PSoC4/CyLib.c ****     *   function call will have no effect. If the specified counter is enabled,
1082:Generated_Source\PSoC4/CyLib.c ****     *   call CySysWdtDisable() function with the corresponding parameter to
1083:Generated_Source\PSoC4/CyLib.c ****     *   disable specified counter and wait for it to stop.
1084:Generated_Source\PSoC4/CyLib.c ****     *
1085:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1086:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtWriteMode(uint32 counterNum, uint32 mode)
1087:Generated_Source\PSoC4/CyLib.c ****     {
 979              		.loc 1 1087 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 16
 982              		@ frame_needed = 1, uses_anonymous_args = 0
 983 0000 80B5     		push	{r7, lr}
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 7, -8
 986              		.cfi_offset 14, -4
 987 0002 84B0     		sub	sp, sp, #16
 988              		.cfi_def_cfa_offset 24
 989 0004 00AF     		add	r7, sp, #0
 990              		.cfi_def_cfa_register 7
 991 0006 7860     		str	r0, [r7, #4]
 992 0008 3960     		str	r1, [r7]
1088:Generated_Source\PSoC4/CyLib.c ****         uint32 configRegValue;
1089:Generated_Source\PSoC4/CyLib.c **** 
1090:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 993              		.loc 1 1090 0
 994 000a 7B68     		ldr	r3, [r7, #4]
 995 000c 022B     		cmp	r3, #2
 996 000e 02D9     		bls	.L59
 997              		.loc 1 1090 0 is_stmt 0 discriminator 1
 998 0010 0020     		movs	r0, #0
 999 0012 FFF7FEFF 		bl	CyHalt
 1000              	.L59:
1091:Generated_Source\PSoC4/CyLib.c **** 
1092:Generated_Source\PSoC4/CyLib.c ****         if(0u == CySysWdtReadEnabledStatus(counterNum))
 1001              		.loc 1 1092 0 is_stmt 1
 1002 0016 7B68     		ldr	r3, [r7, #4]
 1003 0018 1800     		movs	r0, r3
 1004 001a FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1005 001e 031E     		subs	r3, r0, #0
 1006 0020 16D1     		bne	.L61
1093:Generated_Source\PSoC4/CyLib.c ****         {
1094:Generated_Source\PSoC4/CyLib.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
 1007              		.loc 1 1094 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 38


 1008 0022 0D4B     		ldr	r3, .L62
 1009 0024 1B68     		ldr	r3, [r3]
1095:Generated_Source\PSoC4/CyLib.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1010              		.loc 1 1095 0
 1011 0026 7A68     		ldr	r2, [r7, #4]
 1012 0028 D200     		lsls	r2, r2, #3
 1013 002a 0321     		movs	r1, #3
 1014 002c 9140     		lsls	r1, r1, r2
 1015 002e 0A00     		movs	r2, r1
 1016 0030 D243     		mvns	r2, r2
1094:Generated_Source\PSoC4/CyLib.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1017              		.loc 1 1094 0
 1018 0032 1340     		ands	r3, r2
 1019 0034 FB60     		str	r3, [r7, #12]
1096:Generated_Source\PSoC4/CyLib.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
 1020              		.loc 1 1096 0
 1021 0036 3B68     		ldr	r3, [r7]
 1022 0038 0322     		movs	r2, #3
 1023 003a 1A40     		ands	r2, r3
 1024 003c 7B68     		ldr	r3, [r7, #4]
 1025 003e DB00     		lsls	r3, r3, #3
 1026 0040 9A40     		lsls	r2, r2, r3
 1027 0042 1300     		movs	r3, r2
 1028 0044 FA68     		ldr	r2, [r7, #12]
 1029 0046 1343     		orrs	r3, r2
 1030 0048 FB60     		str	r3, [r7, #12]
1097:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1031              		.loc 1 1097 0
 1032 004a 034B     		ldr	r3, .L62
 1033 004c FA68     		ldr	r2, [r7, #12]
 1034 004e 1A60     		str	r2, [r3]
 1035              	.L61:
1098:Generated_Source\PSoC4/CyLib.c ****         }
1099:Generated_Source\PSoC4/CyLib.c ****     }
 1036              		.loc 1 1099 0
 1037 0050 C046     		nop
 1038 0052 BD46     		mov	sp, r7
 1039 0054 04B0     		add	sp, sp, #16
 1040              		@ sp needed
 1041 0056 80BD     		pop	{r7, pc}
 1042              	.L63:
 1043              		.align	2
 1044              	.L62:
 1045 0058 0C020B40 		.word	1074463244
 1046              		.cfi_endproc
 1047              	.LFE12:
 1048              		.size	CySysWdtWriteMode, .-CySysWdtWriteMode
 1049              		.section	.text.CySysWdtReadMode,"ax",%progbits
 1050              		.align	2
 1051              		.global	CySysWdtReadMode
 1052              		.code	16
 1053              		.thumb_func
 1054              		.type	CySysWdtReadMode, %function
 1055              	CySysWdtReadMode:
 1056              	.LFB13:
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 39


1102:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1103:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtReadMode
1104:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1105:Generated_Source\PSoC4/CyLib.c ****     *
1106:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1107:Generated_Source\PSoC4/CyLib.c ****     *  Reads the mode of one of the three WDT counters.
1108:Generated_Source\PSoC4/CyLib.c ****     *
1109:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1110:Generated_Source\PSoC4/CyLib.c ****     *  counterNum: Valid range [0-2].  Number of the WDT counter.
1111:Generated_Source\PSoC4/CyLib.c ****     *
1112:Generated_Source\PSoC4/CyLib.c ****     * Return:
1113:Generated_Source\PSoC4/CyLib.c ****     *  Mode of the counter.  Same enumerated values as mode parameter used in
1114:Generated_Source\PSoC4/CyLib.c ****     *  CySysWdtWriteMode().
1115:Generated_Source\PSoC4/CyLib.c ****     *
1116:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1117:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtReadMode(uint32 counterNum)
1118:Generated_Source\PSoC4/CyLib.c ****     {
 1057              		.loc 1 1118 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 8
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061 0000 80B5     		push	{r7, lr}
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 7, -8
 1064              		.cfi_offset 14, -4
 1065 0002 82B0     		sub	sp, sp, #8
 1066              		.cfi_def_cfa_offset 16
 1067 0004 00AF     		add	r7, sp, #0
 1068              		.cfi_def_cfa_register 7
 1069 0006 7860     		str	r0, [r7, #4]
1119:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
 1070              		.loc 1 1119 0
 1071 0008 054B     		ldr	r3, .L66
 1072 000a 1A68     		ldr	r2, [r3]
 1073 000c 7B68     		ldr	r3, [r7, #4]
 1074 000e DB00     		lsls	r3, r3, #3
 1075 0010 DA40     		lsrs	r2, r2, r3
 1076 0012 1300     		movs	r3, r2
 1077 0014 0322     		movs	r2, #3
 1078 0016 1340     		ands	r3, r2
1120:Generated_Source\PSoC4/CyLib.c ****     }
 1079              		.loc 1 1120 0
 1080 0018 1800     		movs	r0, r3
 1081 001a BD46     		mov	sp, r7
 1082 001c 02B0     		add	sp, sp, #8
 1083              		@ sp needed
 1084 001e 80BD     		pop	{r7, pc}
 1085              	.L67:
 1086              		.align	2
 1087              	.L66:
 1088 0020 0C020B40 		.word	1074463244
 1089              		.cfi_endproc
 1090              	.LFE13:
 1091              		.size	CySysWdtReadMode, .-CySysWdtReadMode
 1092              		.section	.text.CySysWdtWriteClearOnMatch,"ax",%progbits
 1093              		.align	2
 1094              		.global	CySysWdtWriteClearOnMatch
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 40


 1095              		.code	16
 1096              		.thumb_func
 1097              		.type	CySysWdtWriteClearOnMatch, %function
 1098              	CySysWdtWriteClearOnMatch:
 1099              	.LFB14:
1121:Generated_Source\PSoC4/CyLib.c **** 
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtWriteClearOnMatch
1125:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1126:Generated_Source\PSoC4/CyLib.c ****     *
1127:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1128:Generated_Source\PSoC4/CyLib.c ****     *  Configures the WDT counter clear on a match setting.  If configured to clear
1129:Generated_Source\PSoC4/CyLib.c ****     *  on match, the counter will count from 0 to the MatchValue giving it a
1130:Generated_Source\PSoC4/CyLib.c ****     *  period of (MatchValue + 1).
1131:Generated_Source\PSoC4/CyLib.c ****     *
1132:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1133:Generated_Source\PSoC4/CyLib.c ****     *  counterNum:
1134:Generated_Source\PSoC4/CyLib.c ****     *   Valid range [0-1].  Number of the WDT counter.  Match values are not
1135:Generated_Source\PSoC4/CyLib.c ****     *   supported by counter 2.
1136:Generated_Source\PSoC4/CyLib.c ****     *
1137:Generated_Source\PSoC4/CyLib.c ****     * enable:
1138:Generated_Source\PSoC4/CyLib.c ****     *   0 to disable, 1 to enable
1139:Generated_Source\PSoC4/CyLib.c ****     *
1140:Generated_Source\PSoC4/CyLib.c ****     * Return:
1141:Generated_Source\PSoC4/CyLib.c ****     *   None
1142:Generated_Source\PSoC4/CyLib.c ****     *
1143:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1144:Generated_Source\PSoC4/CyLib.c ****     *   WDT counter counterNum should be disabled. Otherwise this function call will
1145:Generated_Source\PSoC4/CyLib.c ****     *   have no effect. If the specified counter is enabled, call CySysWdtDisable()
1146:Generated_Source\PSoC4/CyLib.c ****     *   function with the corresponding parameter to disable specified counter and
1147:Generated_Source\PSoC4/CyLib.c ****     *   wait for it to stop. This may take up to three LFCLK cycles.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1150:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtWriteClearOnMatch(uint32 counterNum, uint32 enable)
1151:Generated_Source\PSoC4/CyLib.c ****     {
 1100              		.loc 1 1151 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 16
 1103              		@ frame_needed = 1, uses_anonymous_args = 0
 1104 0000 80B5     		push	{r7, lr}
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 84B0     		sub	sp, sp, #16
 1109              		.cfi_def_cfa_offset 24
 1110 0004 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 1112 0006 7860     		str	r0, [r7, #4]
 1113 0008 3960     		str	r1, [r7]
1152:Generated_Source\PSoC4/CyLib.c ****         uint32 configRegValue;
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1114              		.loc 1 1154 0
 1115 000a 7B68     		ldr	r3, [r7, #4]
 1116 000c 002B     		cmp	r3, #0
 1117 000e 02D0     		beq	.L69
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 41


 1118              		.loc 1 1154 0 is_stmt 0 discriminator 2
 1119 0010 7B68     		ldr	r3, [r7, #4]
 1120 0012 012B     		cmp	r3, #1
 1121 0014 01D1     		bne	.L70
 1122              	.L69:
 1123              		.loc 1 1154 0 discriminator 3
 1124 0016 0123     		movs	r3, #1
 1125 0018 00E0     		b	.L71
 1126              	.L70:
 1127              		.loc 1 1154 0 discriminator 4
 1128 001a 0023     		movs	r3, #0
 1129              	.L71:
 1130              		.loc 1 1154 0 discriminator 6
 1131 001c 002B     		cmp	r3, #0
 1132 001e 02D1     		bne	.L72
 1133              		.loc 1 1154 0 discriminator 7
 1134 0020 0020     		movs	r0, #0
 1135 0022 FFF7FEFF 		bl	CyHalt
 1136              	.L72:
1155:Generated_Source\PSoC4/CyLib.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c ****         if(0u == CySysWdtReadEnabledStatus(counterNum))
 1137              		.loc 1 1157 0 is_stmt 1
 1138 0026 7B68     		ldr	r3, [r7, #4]
 1139 0028 1800     		movs	r0, r3
 1140 002a FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1141 002e 031E     		subs	r3, r0, #0
 1142 0030 16D1     		bne	.L74
1158:Generated_Source\PSoC4/CyLib.c ****         {
1159:Generated_Source\PSoC4/CyLib.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
 1143              		.loc 1 1159 0
 1144 0032 0D4B     		ldr	r3, .L75
 1145 0034 1B68     		ldr	r3, [r3]
1160:Generated_Source\PSoC4/CyLib.c ****                 (uint32)~((uint32)((uint32)1u << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_
 1146              		.loc 1 1160 0
 1147 0036 7A68     		ldr	r2, [r7, #4]
 1148 0038 D200     		lsls	r2, r2, #3
 1149 003a 0232     		adds	r2, r2, #2
 1150 003c 0121     		movs	r1, #1
 1151 003e 9140     		lsls	r1, r1, r2
 1152 0040 0A00     		movs	r2, r1
 1153 0042 D243     		mvns	r2, r2
1159:Generated_Source\PSoC4/CyLib.c ****                 (uint32)~((uint32)((uint32)1u << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_
 1154              		.loc 1 1159 0
 1155 0044 1340     		ands	r3, r2
 1156 0046 FB60     		str	r3, [r7, #12]
1161:Generated_Source\PSoC4/CyLib.c **** 
1162:Generated_Source\PSoC4/CyLib.c ****             configRegValue
1163:Generated_Source\PSoC4/CyLib.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
 1157              		.loc 1 1163 0
 1158 0048 7B68     		ldr	r3, [r7, #4]
 1159 004a DB00     		lsls	r3, r3, #3
 1160 004c 0233     		adds	r3, r3, #2
 1161 004e 3A68     		ldr	r2, [r7]
 1162 0050 9A40     		lsls	r2, r2, r3
 1163 0052 1300     		movs	r3, r2
 1164 0054 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 42


 1165 0056 1343     		orrs	r3, r2
 1166 0058 FB60     		str	r3, [r7, #12]
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1167              		.loc 1 1165 0
 1168 005a 034B     		ldr	r3, .L75
 1169 005c FA68     		ldr	r2, [r7, #12]
 1170 005e 1A60     		str	r2, [r3]
 1171              	.L74:
1166:Generated_Source\PSoC4/CyLib.c ****         }
1167:Generated_Source\PSoC4/CyLib.c ****     }
 1172              		.loc 1 1167 0
 1173 0060 C046     		nop
 1174 0062 BD46     		mov	sp, r7
 1175 0064 04B0     		add	sp, sp, #16
 1176              		@ sp needed
 1177 0066 80BD     		pop	{r7, pc}
 1178              	.L76:
 1179              		.align	2
 1180              	.L75:
 1181 0068 0C020B40 		.word	1074463244
 1182              		.cfi_endproc
 1183              	.LFE14:
 1184              		.size	CySysWdtWriteClearOnMatch, .-CySysWdtWriteClearOnMatch
 1185              		.section	.text.CySysWdtReadClearOnMatch,"ax",%progbits
 1186              		.align	2
 1187              		.global	CySysWdtReadClearOnMatch
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	CySysWdtReadClearOnMatch, %function
 1191              	CySysWdtReadClearOnMatch:
 1192              	.LFB15:
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1171:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtReadClearOnMatch
1172:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     *
1174:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1175:Generated_Source\PSoC4/CyLib.c ****     *  Reads the clear on match setting for the specified counter.
1176:Generated_Source\PSoC4/CyLib.c ****     *
1177:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1178:Generated_Source\PSoC4/CyLib.c ****     *   counterNum: Valid range [0-1].  Number of the WDT counter.  Match values are
1179:Generated_Source\PSoC4/CyLib.c ****     *               not supported by counter 2.
1180:Generated_Source\PSoC4/CyLib.c ****     *
1181:Generated_Source\PSoC4/CyLib.c ****     * Return:
1182:Generated_Source\PSoC4/CyLib.c ****     *   Clear on Match status: 1 if enabled, 0 if disabled
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1185:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtReadClearOnMatch(uint32 counterNum)
1186:Generated_Source\PSoC4/CyLib.c ****     {
 1193              		.loc 1 1186 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 8
 1196              		@ frame_needed = 1, uses_anonymous_args = 0
 1197 0000 80B5     		push	{r7, lr}
 1198              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 43


 1199              		.cfi_offset 7, -8
 1200              		.cfi_offset 14, -4
 1201 0002 82B0     		sub	sp, sp, #8
 1202              		.cfi_def_cfa_offset 16
 1203 0004 00AF     		add	r7, sp, #0
 1204              		.cfi_def_cfa_register 7
 1205 0006 7860     		str	r0, [r7, #4]
1187:Generated_Source\PSoC4/CyLib.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1206              		.loc 1 1187 0
 1207 0008 7B68     		ldr	r3, [r7, #4]
 1208 000a 002B     		cmp	r3, #0
 1209 000c 02D0     		beq	.L78
 1210              		.loc 1 1187 0 is_stmt 0 discriminator 2
 1211 000e 7B68     		ldr	r3, [r7, #4]
 1212 0010 012B     		cmp	r3, #1
 1213 0012 01D1     		bne	.L79
 1214              	.L78:
 1215              		.loc 1 1187 0 discriminator 3
 1216 0014 0123     		movs	r3, #1
 1217 0016 00E0     		b	.L80
 1218              	.L79:
 1219              		.loc 1 1187 0 discriminator 4
 1220 0018 0023     		movs	r3, #0
 1221              	.L80:
 1222              		.loc 1 1187 0 discriminator 6
 1223 001a 002B     		cmp	r3, #0
 1224 001c 02D1     		bne	.L81
 1225              		.loc 1 1187 0 discriminator 7
 1226 001e 0020     		movs	r0, #0
 1227 0020 FFF7FEFF 		bl	CyHalt
 1228              	.L81:
1188:Generated_Source\PSoC4/CyLib.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1189:Generated_Source\PSoC4/CyLib.c **** 
1190:Generated_Source\PSoC4/CyLib.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
 1229              		.loc 1 1190 0 is_stmt 1
 1230 0024 064B     		ldr	r3, .L83
 1231 0026 1A68     		ldr	r2, [r3]
1191:Generated_Source\PSoC4/CyLib.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 1232              		.loc 1 1191 0
 1233 0028 7B68     		ldr	r3, [r7, #4]
 1234 002a DB00     		lsls	r3, r3, #3
 1235 002c 0233     		adds	r3, r3, #2
1190:Generated_Source\PSoC4/CyLib.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 1236              		.loc 1 1190 0
 1237 002e DA40     		lsrs	r2, r2, r3
 1238 0030 1300     		movs	r3, r2
 1239 0032 0122     		movs	r2, #1
 1240 0034 1340     		ands	r3, r2
1192:Generated_Source\PSoC4/CyLib.c ****     }
 1241              		.loc 1 1192 0
 1242 0036 1800     		movs	r0, r3
 1243 0038 BD46     		mov	sp, r7
 1244 003a 02B0     		add	sp, sp, #8
 1245              		@ sp needed
 1246 003c 80BD     		pop	{r7, pc}
 1247              	.L84:
 1248 003e C046     		.align	2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 44


 1249              	.L83:
 1250 0040 0C020B40 		.word	1074463244
 1251              		.cfi_endproc
 1252              	.LFE15:
 1253              		.size	CySysWdtReadClearOnMatch, .-CySysWdtReadClearOnMatch
 1254              		.section	.text.CySysWdtEnable,"ax",%progbits
 1255              		.align	2
 1256              		.global	CySysWdtEnable
 1257              		.code	16
 1258              		.thumb_func
 1259              		.type	CySysWdtEnable, %function
 1260              	CySysWdtEnable:
 1261              	.LFB16:
1193:Generated_Source\PSoC4/CyLib.c **** 
1194:Generated_Source\PSoC4/CyLib.c **** 
1195:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1196:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtEnable
1197:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1198:Generated_Source\PSoC4/CyLib.c ****     *
1199:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1200:Generated_Source\PSoC4/CyLib.c ****     *  Enables the specified WDT counters.  All the counters specified in the mask are
1201:Generated_Source\PSoC4/CyLib.c ****     *  enabled.
1202:Generated_Source\PSoC4/CyLib.c ****     *
1203:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1204:Generated_Source\PSoC4/CyLib.c ****     *  counterMask: Mask of all counters to enable
1205:Generated_Source\PSoC4/CyLib.c ****     *       Define                       Counter
1206:Generated_Source\PSoC4/CyLib.c ****     *      CY_SYS_WDT_COUNTER0_MASK      0
1207:Generated_Source\PSoC4/CyLib.c ****     *      CY_SYS_WDT_COUNTER1_MASK      1
1208:Generated_Source\PSoC4/CyLib.c ****     *      CY_SYS_WDT_COUNTER2_MASK      2
1209:Generated_Source\PSoC4/CyLib.c ****     *
1210:Generated_Source\PSoC4/CyLib.c ****     * Return:
1211:Generated_Source\PSoC4/CyLib.c ****     *  None
1212:Generated_Source\PSoC4/CyLib.c ****     *
1213:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1214:Generated_Source\PSoC4/CyLib.c ****     *  Enabling or disabling a WDT requires 3 LFCLK cycles to come into effect.
1215:Generated_Source\PSoC4/CyLib.c ****     *  Therefore, the WDT enable state must not be changed more than once in
1216:Generated_Source\PSoC4/CyLib.c ****     *  that period.
1217:Generated_Source\PSoC4/CyLib.c ****     *
1218:Generated_Source\PSoC4/CyLib.c ****     *  After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1219:Generated_Source\PSoC4/CyLib.c ****     *  and control (WDT_CONTROL) registers. That means that all WDT functions that
1220:Generated_Source\PSoC4/CyLib.c ****     *  contain 'write' in the name (with the exception of CySysWdtWriteMatch()
1221:Generated_Source\PSoC4/CyLib.c ****     *  function) are illegal to call once WDT enabled.
1222:Generated_Source\PSoC4/CyLib.c ****     *
1223:Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4100 / PSoC 4200:
1224:Generated_Source\PSoC4/CyLib.c ****     *  This function enables the ILO.
1225:Generated_Source\PSoC4/CyLib.c ****     *
1226:Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4100-BL / PSoC 4200-BL:
1227:Generated_Source\PSoC4/CyLib.c ****     *  The LFLCK should be configured before calling this function. The desired
1228:Generated_Source\PSoC4/CyLib.c ****     *  source should be enabled and configured to be the source for the LFCLK.
1229:Generated_Source\PSoC4/CyLib.c ****     *
1230:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1231:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtEnable(uint32 counterMask)
1232:Generated_Source\PSoC4/CyLib.c ****     {
 1262              		.loc 1 1232 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 8
 1265              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 45


 1266 0000 80B5     		push	{r7, lr}
 1267              		.cfi_def_cfa_offset 8
 1268              		.cfi_offset 7, -8
 1269              		.cfi_offset 14, -4
 1270 0002 82B0     		sub	sp, sp, #8
 1271              		.cfi_def_cfa_offset 16
 1272 0004 00AF     		add	r7, sp, #0
 1273              		.cfi_def_cfa_register 7
 1274 0006 7860     		str	r0, [r7, #4]
1233:Generated_Source\PSoC4/CyLib.c ****         #if (!CY_IP_WCO)
1234:Generated_Source\PSoC4/CyLib.c ****             CySysClkIloStart();
 1275              		.loc 1 1234 0
 1276 0008 FFF7FEFF 		bl	CySysClkIloStart
1235:Generated_Source\PSoC4/CyLib.c ****         #endif /* (!CY_IP_WCO) */
1236:Generated_Source\PSoC4/CyLib.c **** 
1237:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
 1277              		.loc 1 1237 0
 1278 000c 144B     		ldr	r3, .L93
 1279 000e 144A     		ldr	r2, .L93
 1280 0010 1168     		ldr	r1, [r2]
 1281 0012 7A68     		ldr	r2, [r7, #4]
 1282 0014 0A43     		orrs	r2, r1
 1283 0016 1A60     		str	r2, [r3]
1238:Generated_Source\PSoC4/CyLib.c **** 
1239:Generated_Source\PSoC4/CyLib.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 1284              		.loc 1 1239 0
 1285 0018 7B68     		ldr	r3, [r7, #4]
 1286 001a 0122     		movs	r2, #1
 1287 001c 1340     		ands	r3, r2
 1288 001e 05D0     		beq	.L86
1240:Generated_Source\PSoC4/CyLib.c ****         {
1241:Generated_Source\PSoC4/CyLib.c ****             while (0u == CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER0))
 1289              		.loc 1 1241 0
 1290 0020 C046     		nop
 1291              	.L87:
 1292              		.loc 1 1241 0 is_stmt 0 discriminator 1
 1293 0022 0020     		movs	r0, #0
 1294 0024 FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1295 0028 031E     		subs	r3, r0, #0
 1296 002a FAD0     		beq	.L87
 1297              	.L86:
1242:Generated_Source\PSoC4/CyLib.c ****             {
1243:Generated_Source\PSoC4/CyLib.c ****                 /* Wait for the changes to come into effect */
1244:Generated_Source\PSoC4/CyLib.c ****             }
1245:Generated_Source\PSoC4/CyLib.c ****         }
1246:Generated_Source\PSoC4/CyLib.c **** 
1247:Generated_Source\PSoC4/CyLib.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 1298              		.loc 1 1247 0 is_stmt 1
 1299 002c 7A68     		ldr	r2, [r7, #4]
 1300 002e 8023     		movs	r3, #128
 1301 0030 5B00     		lsls	r3, r3, #1
 1302 0032 1340     		ands	r3, r2
 1303 0034 05D0     		beq	.L88
1248:Generated_Source\PSoC4/CyLib.c ****         {
1249:Generated_Source\PSoC4/CyLib.c ****             while (0u == CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER1))
 1304              		.loc 1 1249 0
 1305 0036 C046     		nop
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 46


 1306              	.L89:
 1307              		.loc 1 1249 0 is_stmt 0 discriminator 1
 1308 0038 0120     		movs	r0, #1
 1309 003a FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1310 003e 031E     		subs	r3, r0, #0
 1311 0040 FAD0     		beq	.L89
 1312              	.L88:
1250:Generated_Source\PSoC4/CyLib.c ****             {
1251:Generated_Source\PSoC4/CyLib.c ****                 /* Wait for the changes to come into effect */
1252:Generated_Source\PSoC4/CyLib.c ****             }
1253:Generated_Source\PSoC4/CyLib.c ****         }
1254:Generated_Source\PSoC4/CyLib.c **** 
1255:Generated_Source\PSoC4/CyLib.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 1313              		.loc 1 1255 0 is_stmt 1
 1314 0042 7A68     		ldr	r2, [r7, #4]
 1315 0044 8023     		movs	r3, #128
 1316 0046 5B02     		lsls	r3, r3, #9
 1317 0048 1340     		ands	r3, r2
 1318 004a 05D0     		beq	.L92
1256:Generated_Source\PSoC4/CyLib.c ****         {
1257:Generated_Source\PSoC4/CyLib.c ****             while (0u == CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER2))
 1319              		.loc 1 1257 0
 1320 004c C046     		nop
 1321              	.L91:
 1322              		.loc 1 1257 0 is_stmt 0 discriminator 1
 1323 004e 0220     		movs	r0, #2
 1324 0050 FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1325 0054 031E     		subs	r3, r0, #0
 1326 0056 FAD0     		beq	.L91
 1327              	.L92:
1258:Generated_Source\PSoC4/CyLib.c ****             {
1259:Generated_Source\PSoC4/CyLib.c ****                 /* Wait for the changes to come into effect */
1260:Generated_Source\PSoC4/CyLib.c ****             }
1261:Generated_Source\PSoC4/CyLib.c ****         }
1262:Generated_Source\PSoC4/CyLib.c ****     }
 1328              		.loc 1 1262 0 is_stmt 1
 1329 0058 C046     		nop
 1330 005a BD46     		mov	sp, r7
 1331 005c 02B0     		add	sp, sp, #8
 1332              		@ sp needed
 1333 005e 80BD     		pop	{r7, pc}
 1334              	.L94:
 1335              		.align	2
 1336              	.L93:
 1337 0060 10020B40 		.word	1074463248
 1338              		.cfi_endproc
 1339              	.LFE16:
 1340              		.size	CySysWdtEnable, .-CySysWdtEnable
 1341              		.section	.text.CySysWdtDisable,"ax",%progbits
 1342              		.align	2
 1343              		.global	CySysWdtDisable
 1344              		.code	16
 1345              		.thumb_func
 1346              		.type	CySysWdtDisable, %function
 1347              	CySysWdtDisable:
 1348              	.LFB17:
1263:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 47


1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1266:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtDisable
1267:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1268:Generated_Source\PSoC4/CyLib.c ****     *
1269:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1270:Generated_Source\PSoC4/CyLib.c ****     *  Disables the specified WDT counters. All the counters specified in the mask
1271:Generated_Source\PSoC4/CyLib.c ****     *  are disabled. The function waits for the changes to come into effect.
1272:Generated_Source\PSoC4/CyLib.c ****     *
1273:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1274:Generated_Source\PSoC4/CyLib.c ****     *  uint32 counterMask: Mask of all counters to disable
1275:Generated_Source\PSoC4/CyLib.c ****     *    Define                       Counter
1276:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER0_MASK      0
1277:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER1_MASK      1
1278:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER2_MASK      2
1279:Generated_Source\PSoC4/CyLib.c ****     *
1280:Generated_Source\PSoC4/CyLib.c ****     * Return:
1281:Generated_Source\PSoC4/CyLib.c ****     *   None
1282:Generated_Source\PSoC4/CyLib.c ****     *
1283:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1284:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtDisable(uint32 counterMask)
1285:Generated_Source\PSoC4/CyLib.c ****     {
 1349              		.loc 1 1285 0
 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 8
 1352              		@ frame_needed = 1, uses_anonymous_args = 0
 1353 0000 80B5     		push	{r7, lr}
 1354              		.cfi_def_cfa_offset 8
 1355              		.cfi_offset 7, -8
 1356              		.cfi_offset 14, -4
 1357 0002 82B0     		sub	sp, sp, #8
 1358              		.cfi_def_cfa_offset 16
 1359 0004 00AF     		add	r7, sp, #0
 1360              		.cfi_def_cfa_register 7
 1361 0006 7860     		str	r0, [r7, #4]
1286:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_WDT_CONTROL_REG &= ~counterMask;
 1362              		.loc 1 1286 0
 1363 0008 154B     		ldr	r3, .L103
 1364 000a 154A     		ldr	r2, .L103
 1365 000c 1268     		ldr	r2, [r2]
 1366 000e 7968     		ldr	r1, [r7, #4]
 1367 0010 C943     		mvns	r1, r1
 1368 0012 0A40     		ands	r2, r1
 1369 0014 1A60     		str	r2, [r3]
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 1370              		.loc 1 1288 0
 1371 0016 7B68     		ldr	r3, [r7, #4]
 1372 0018 0122     		movs	r2, #1
 1373 001a 1340     		ands	r3, r2
 1374 001c 05D0     		beq	.L96
1289:Generated_Source\PSoC4/CyLib.c ****         {
1290:Generated_Source\PSoC4/CyLib.c ****             while (0u != CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER0))
 1375              		.loc 1 1290 0
 1376 001e C046     		nop
 1377              	.L97:
 1378              		.loc 1 1290 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 48


 1379 0020 0020     		movs	r0, #0
 1380 0022 FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1381 0026 031E     		subs	r3, r0, #0
 1382 0028 FAD1     		bne	.L97
 1383              	.L96:
1291:Generated_Source\PSoC4/CyLib.c ****             {
1292:Generated_Source\PSoC4/CyLib.c ****                 /* Wait for the changes to come into effect */
1293:Generated_Source\PSoC4/CyLib.c ****             }
1294:Generated_Source\PSoC4/CyLib.c ****         }
1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 1384              		.loc 1 1296 0 is_stmt 1
 1385 002a 7A68     		ldr	r2, [r7, #4]
 1386 002c 8023     		movs	r3, #128
 1387 002e 5B00     		lsls	r3, r3, #1
 1388 0030 1340     		ands	r3, r2
 1389 0032 05D0     		beq	.L98
1297:Generated_Source\PSoC4/CyLib.c ****         {
1298:Generated_Source\PSoC4/CyLib.c ****             while (0u != CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER1))
 1390              		.loc 1 1298 0
 1391 0034 C046     		nop
 1392              	.L99:
 1393              		.loc 1 1298 0 is_stmt 0 discriminator 1
 1394 0036 0120     		movs	r0, #1
 1395 0038 FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1396 003c 031E     		subs	r3, r0, #0
 1397 003e FAD1     		bne	.L99
 1398              	.L98:
1299:Generated_Source\PSoC4/CyLib.c ****             {
1300:Generated_Source\PSoC4/CyLib.c ****                 /* Wait for the changes to come into effect */
1301:Generated_Source\PSoC4/CyLib.c ****             }
1302:Generated_Source\PSoC4/CyLib.c ****         }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 1399              		.loc 1 1304 0 is_stmt 1
 1400 0040 7A68     		ldr	r2, [r7, #4]
 1401 0042 8023     		movs	r3, #128
 1402 0044 5B02     		lsls	r3, r3, #9
 1403 0046 1340     		ands	r3, r2
 1404 0048 05D0     		beq	.L102
1305:Generated_Source\PSoC4/CyLib.c ****         {
1306:Generated_Source\PSoC4/CyLib.c ****             while (0u != CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER2))
 1405              		.loc 1 1306 0
 1406 004a C046     		nop
 1407              	.L101:
 1408              		.loc 1 1306 0 is_stmt 0 discriminator 1
 1409 004c 0220     		movs	r0, #2
 1410 004e FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1411 0052 031E     		subs	r3, r0, #0
 1412 0054 FAD1     		bne	.L101
 1413              	.L102:
1307:Generated_Source\PSoC4/CyLib.c ****             {
1308:Generated_Source\PSoC4/CyLib.c ****                 /* Wait for the changes to come into effect */
1309:Generated_Source\PSoC4/CyLib.c ****             }
1310:Generated_Source\PSoC4/CyLib.c ****         }
1311:Generated_Source\PSoC4/CyLib.c ****     }
 1414              		.loc 1 1311 0 is_stmt 1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 49


 1415 0056 C046     		nop
 1416 0058 BD46     		mov	sp, r7
 1417 005a 02B0     		add	sp, sp, #8
 1418              		@ sp needed
 1419 005c 80BD     		pop	{r7, pc}
 1420              	.L104:
 1421 005e C046     		.align	2
 1422              	.L103:
 1423 0060 10020B40 		.word	1074463248
 1424              		.cfi_endproc
 1425              	.LFE17:
 1426              		.size	CySysWdtDisable, .-CySysWdtDisable
 1427              		.section	.text.CySysWdtWriteCascade,"ax",%progbits
 1428              		.align	2
 1429              		.global	CySysWdtWriteCascade
 1430              		.code	16
 1431              		.thumb_func
 1432              		.type	CySysWdtWriteCascade, %function
 1433              	CySysWdtWriteCascade:
 1434              	.LFB18:
1312:Generated_Source\PSoC4/CyLib.c **** 
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1315:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtWriteCascade
1316:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1317:Generated_Source\PSoC4/CyLib.c ****     *
1318:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1319:Generated_Source\PSoC4/CyLib.c ****     *   Writes the two WDT cascade values based on the combination of mask values
1320:Generated_Source\PSoC4/CyLib.c ****     *   specified.
1321:Generated_Source\PSoC4/CyLib.c ****     *
1322:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1323:Generated_Source\PSoC4/CyLib.c ****     *   cascadeMask: Mask value used to set or clear the cascade values.
1324:Generated_Source\PSoC4/CyLib.c ****     *   Define                     Cascade
1325:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_CASCADE_NONE    Neither
1326:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_CASCADE_01      Cascade 01
1327:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_CASCADE_12      Cascade 12
1328:Generated_Source\PSoC4/CyLib.c ****     *
1329:Generated_Source\PSoC4/CyLib.c ****     *   To set both cascade modes, two defines should be ORed:
1330:Generated_Source\PSoC4/CyLib.c ****     *   (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12)
1331:Generated_Source\PSoC4/CyLib.c ****     *
1332:Generated_Source\PSoC4/CyLib.c ****     * Return:
1333:Generated_Source\PSoC4/CyLib.c ****     *   None
1334:Generated_Source\PSoC4/CyLib.c ****     *
1335:Generated_Source\PSoC4/CyLib.c ****     * Side effects:
1336:Generated_Source\PSoC4/CyLib.c ****     *   If only one cascade mask is specified, the second cascade is disabled.
1337:Generated_Source\PSoC4/CyLib.c ****     *   To set both cascade modes two defines should be ORed:
1338:Generated_Source\PSoC4/CyLib.c ****     *    (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12).
1339:Generated_Source\PSoC4/CyLib.c ****     *
1340:Generated_Source\PSoC4/CyLib.c ****     *   WDT counters that are part of the specified cascade, should be disabled.
1341:Generated_Source\PSoC4/CyLib.c ****     *   Otherwise this function call will have no effect. If the specified
1342:Generated_Source\PSoC4/CyLib.c ****     *   counter is enabled, call CySysWdtDisable() function with the corresponding
1343:Generated_Source\PSoC4/CyLib.c ****     *   parameter to disable specified counter and wait for it to stop. This may
1344:Generated_Source\PSoC4/CyLib.c ****     *   take up to 3 LFCLK cycles.
1345:Generated_Source\PSoC4/CyLib.c ****     *
1346:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1347:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtWriteCascade(uint32 cascadeMask)
1348:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 50


 1435              		.loc 1 1348 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 16
 1438              		@ frame_needed = 1, uses_anonymous_args = 0
 1439 0000 90B5     		push	{r4, r7, lr}
 1440              		.cfi_def_cfa_offset 12
 1441              		.cfi_offset 4, -12
 1442              		.cfi_offset 7, -8
 1443              		.cfi_offset 14, -4
 1444 0002 85B0     		sub	sp, sp, #20
 1445              		.cfi_def_cfa_offset 32
 1446 0004 00AF     		add	r7, sp, #0
 1447              		.cfi_def_cfa_register 7
 1448 0006 7860     		str	r0, [r7, #4]
1349:Generated_Source\PSoC4/CyLib.c ****         uint32 configRegValue;
1350:Generated_Source\PSoC4/CyLib.c ****         uint32 countersEnableStatus;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****         countersEnableStatus = CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER0) |
 1449              		.loc 1 1352 0
 1450 0008 0020     		movs	r0, #0
 1451 000a FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1452 000e 0400     		movs	r4, r0
1353:Generated_Source\PSoC4/CyLib.c ****                             CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER1) |
 1453              		.loc 1 1353 0
 1454 0010 0120     		movs	r0, #1
 1455 0012 FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1456 0016 0300     		movs	r3, r0
1352:Generated_Source\PSoC4/CyLib.c ****                             CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER1) |
 1457              		.loc 1 1352 0
 1458 0018 1C43     		orrs	r4, r3
1354:Generated_Source\PSoC4/CyLib.c ****                             CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER2);
 1459              		.loc 1 1354 0
 1460 001a 0220     		movs	r0, #2
 1461 001c FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1462 0020 0300     		movs	r3, r0
1352:Generated_Source\PSoC4/CyLib.c ****                             CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER1) |
 1463              		.loc 1 1352 0
 1464 0022 2343     		orrs	r3, r4
 1465 0024 FB60     		str	r3, [r7, #12]
1355:Generated_Source\PSoC4/CyLib.c **** 
1356:Generated_Source\PSoC4/CyLib.c ****         if (0u == countersEnableStatus)
 1466              		.loc 1 1356 0
 1467 0026 FB68     		ldr	r3, [r7, #12]
 1468 0028 002B     		cmp	r3, #0
 1469 002a 0DD1     		bne	.L107
1357:Generated_Source\PSoC4/CyLib.c ****         {
1358:Generated_Source\PSoC4/CyLib.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 1470              		.loc 1 1358 0
 1471 002c 084B     		ldr	r3, .L108
 1472 002e 1B68     		ldr	r3, [r3]
 1473 0030 BB60     		str	r3, [r7, #8]
1359:Generated_Source\PSoC4/CyLib.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
 1474              		.loc 1 1359 0
 1475 0032 BB68     		ldr	r3, [r7, #8]
 1476 0034 074A     		ldr	r2, .L108+4
 1477 0036 1340     		ands	r3, r2
 1478 0038 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 51


1360:Generated_Source\PSoC4/CyLib.c ****             configRegValue |= cascadeMask;
 1479              		.loc 1 1360 0
 1480 003a BA68     		ldr	r2, [r7, #8]
 1481 003c 7B68     		ldr	r3, [r7, #4]
 1482 003e 1343     		orrs	r3, r2
 1483 0040 BB60     		str	r3, [r7, #8]
1361:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1484              		.loc 1 1361 0
 1485 0042 034B     		ldr	r3, .L108
 1486 0044 BA68     		ldr	r2, [r7, #8]
 1487 0046 1A60     		str	r2, [r3]
 1488              	.L107:
1362:Generated_Source\PSoC4/CyLib.c ****         }
1363:Generated_Source\PSoC4/CyLib.c ****     }
 1489              		.loc 1 1363 0
 1490 0048 C046     		nop
 1491 004a BD46     		mov	sp, r7
 1492 004c 05B0     		add	sp, sp, #20
 1493              		@ sp needed
 1494 004e 90BD     		pop	{r4, r7, pc}
 1495              	.L109:
 1496              		.align	2
 1497              	.L108:
 1498 0050 0C020B40 		.word	1074463244
 1499 0054 F7F7FFFF 		.word	-2057
 1500              		.cfi_endproc
 1501              	.LFE18:
 1502              		.size	CySysWdtWriteCascade, .-CySysWdtWriteCascade
 1503              		.section	.text.CySysWdtReadCascade,"ax",%progbits
 1504              		.align	2
 1505              		.global	CySysWdtReadCascade
 1506              		.code	16
 1507              		.thumb_func
 1508              		.type	CySysWdtReadCascade, %function
 1509              	CySysWdtReadCascade:
 1510              	.LFB19:
1364:Generated_Source\PSoC4/CyLib.c **** 
1365:Generated_Source\PSoC4/CyLib.c **** 
1366:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1367:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtReadCascade
1368:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1369:Generated_Source\PSoC4/CyLib.c ****     *
1370:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1371:Generated_Source\PSoC4/CyLib.c ****     *   Reads the two WDT cascade values returning a mask of the bits set.
1372:Generated_Source\PSoC4/CyLib.c ****     *
1373:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1374:Generated_Source\PSoC4/CyLib.c ****     *   None
1375:Generated_Source\PSoC4/CyLib.c ****     *
1376:Generated_Source\PSoC4/CyLib.c ****     * Return:
1377:Generated_Source\PSoC4/CyLib.c ****     *   Mask of cascade values set.
1378:Generated_Source\PSoC4/CyLib.c ****     *   Define                     Cascade
1379:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_CASCADE_NONE    Neither
1380:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_CASCADE_01      Cascade 01
1381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_CASCADE_12      Cascade 12
1382:Generated_Source\PSoC4/CyLib.c ****     *
1383:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1384:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtReadCascade(void)
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 52


1385:Generated_Source\PSoC4/CyLib.c ****     {
 1511              		.loc 1 1385 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 1, uses_anonymous_args = 0
 1515 0000 80B5     		push	{r7, lr}
 1516              		.cfi_def_cfa_offset 8
 1517              		.cfi_offset 7, -8
 1518              		.cfi_offset 14, -4
 1519 0002 00AF     		add	r7, sp, #0
 1520              		.cfi_def_cfa_register 7
1386:Generated_Source\PSoC4/CyLib.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
 1521              		.loc 1 1386 0
 1522 0004 034B     		ldr	r3, .L112
 1523 0006 1B68     		ldr	r3, [r3]
 1524 0008 034A     		ldr	r2, .L112+4
 1525 000a 1340     		ands	r3, r2
1387:Generated_Source\PSoC4/CyLib.c ****     }
 1526              		.loc 1 1387 0
 1527 000c 1800     		movs	r0, r3
 1528 000e BD46     		mov	sp, r7
 1529              		@ sp needed
 1530 0010 80BD     		pop	{r7, pc}
 1531              	.L113:
 1532 0012 C046     		.align	2
 1533              	.L112:
 1534 0014 0C020B40 		.word	1074463244
 1535 0018 08080000 		.word	2056
 1536              		.cfi_endproc
 1537              	.LFE19:
 1538              		.size	CySysWdtReadCascade, .-CySysWdtReadCascade
 1539              		.section	.text.CySysWdtWriteMatch,"ax",%progbits
 1540              		.align	2
 1541              		.global	CySysWdtWriteMatch
 1542              		.code	16
 1543              		.thumb_func
 1544              		.type	CySysWdtWriteMatch, %function
 1545              	CySysWdtWriteMatch:
 1546              	.LFB20:
1388:Generated_Source\PSoC4/CyLib.c **** 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1391:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtWriteMatch
1392:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1393:Generated_Source\PSoC4/CyLib.c ****     *
1394:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1395:Generated_Source\PSoC4/CyLib.c ****     *  Configures the WDT counter match comparison value.
1396:Generated_Source\PSoC4/CyLib.c ****     *
1397:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1398:Generated_Source\PSoC4/CyLib.c ****     *  counterNum:
1399:Generated_Source\PSoC4/CyLib.c ****     *   Valid range [0-1]. Number of the WDT counter. Match values are not
1400:Generated_Source\PSoC4/CyLib.c ****     *   supported by counter 2.
1401:Generated_Source\PSoC4/CyLib.c ****     *
1402:Generated_Source\PSoC4/CyLib.c ****     *  match:
1403:Generated_Source\PSoC4/CyLib.c ****     *   Valid range [0-65535]. Value to be used to match against the counter.
1404:Generated_Source\PSoC4/CyLib.c ****     *
1405:Generated_Source\PSoC4/CyLib.c ****     * Return:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 53


1406:Generated_Source\PSoC4/CyLib.c ****     *   None
1407:Generated_Source\PSoC4/CyLib.c ****     *
1408:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1409:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtWriteMatch(uint32 counterNum, uint32 match)
1410:Generated_Source\PSoC4/CyLib.c ****     {
 1547              		.loc 1 1410 0
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 16
 1550              		@ frame_needed = 1, uses_anonymous_args = 0
 1551 0000 80B5     		push	{r7, lr}
 1552              		.cfi_def_cfa_offset 8
 1553              		.cfi_offset 7, -8
 1554              		.cfi_offset 14, -4
 1555 0002 84B0     		sub	sp, sp, #16
 1556              		.cfi_def_cfa_offset 24
 1557 0004 00AF     		add	r7, sp, #0
 1558              		.cfi_def_cfa_register 7
 1559 0006 7860     		str	r0, [r7, #4]
 1560 0008 3960     		str	r1, [r7]
1411:Generated_Source\PSoC4/CyLib.c ****         uint32 regValue;
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1561              		.loc 1 1413 0
 1562 000a 7B68     		ldr	r3, [r7, #4]
 1563 000c 002B     		cmp	r3, #0
 1564 000e 02D0     		beq	.L115
 1565              		.loc 1 1413 0 is_stmt 0 discriminator 2
 1566 0010 7B68     		ldr	r3, [r7, #4]
 1567 0012 012B     		cmp	r3, #1
 1568 0014 01D1     		bne	.L116
 1569              	.L115:
 1570              		.loc 1 1413 0 discriminator 3
 1571 0016 0123     		movs	r3, #1
 1572 0018 00E0     		b	.L117
 1573              	.L116:
 1574              		.loc 1 1413 0 discriminator 4
 1575 001a 0023     		movs	r3, #0
 1576              	.L117:
 1577              		.loc 1 1413 0 discriminator 6
 1578 001c 002B     		cmp	r3, #0
 1579 001e 02D1     		bne	.L118
 1580              		.loc 1 1413 0 discriminator 7
 1581 0020 0020     		movs	r0, #0
 1582 0022 FFF7FEFF 		bl	CyHalt
 1583              	.L118:
1414:Generated_Source\PSoC4/CyLib.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1415:Generated_Source\PSoC4/CyLib.c **** 
1416:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the previous changes to come into effect */
1417:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
 1584              		.loc 1 1417 0 is_stmt 1
 1585 0026 C920     		movs	r0, #201
 1586 0028 FFF7FEFF 		bl	CyDelayUs
1418:Generated_Source\PSoC4/CyLib.c **** 
1419:Generated_Source\PSoC4/CyLib.c ****         regValue = CY_SYS_WDT_MATCH_REG;
 1587              		.loc 1 1419 0
 1588 002c 0D4B     		ldr	r3, .L119
 1589 002e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 54


 1590 0030 FB60     		str	r3, [r7, #12]
1420:Generated_Source\PSoC4/CyLib.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
 1591              		.loc 1 1420 0
 1592 0032 7B68     		ldr	r3, [r7, #4]
 1593 0034 1B01     		lsls	r3, r3, #4
 1594 0036 0C4A     		ldr	r2, .L119+4
 1595 0038 9A40     		lsls	r2, r2, r3
 1596 003a 1300     		movs	r3, r2
 1597 003c DA43     		mvns	r2, r3
 1598 003e FB68     		ldr	r3, [r7, #12]
 1599 0040 1340     		ands	r3, r2
 1600 0042 FB60     		str	r3, [r7, #12]
1421:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
 1601              		.loc 1 1421 0
 1602 0044 074B     		ldr	r3, .L119
 1603 0046 7A68     		ldr	r2, [r7, #4]
 1604 0048 1201     		lsls	r2, r2, #4
 1605 004a 3968     		ldr	r1, [r7]
 1606 004c 9140     		lsls	r1, r1, r2
 1607 004e FA68     		ldr	r2, [r7, #12]
 1608 0050 0A43     		orrs	r2, r1
 1609 0052 1A60     		str	r2, [r3]
1422:Generated_Source\PSoC4/CyLib.c **** 
1423:Generated_Source\PSoC4/CyLib.c ****         /* Make sure the match synchronization started */
1424:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
 1610              		.loc 1 1424 0
 1611 0054 4320     		movs	r0, #67
 1612 0056 FFF7FEFF 		bl	CyDelayUs
1425:Generated_Source\PSoC4/CyLib.c ****     }
 1613              		.loc 1 1425 0
 1614 005a C046     		nop
 1615 005c BD46     		mov	sp, r7
 1616 005e 04B0     		add	sp, sp, #16
 1617              		@ sp needed
 1618 0060 80BD     		pop	{r7, pc}
 1619              	.L120:
 1620 0062 C046     		.align	2
 1621              	.L119:
 1622 0064 08020B40 		.word	1074463240
 1623 0068 FFFF0000 		.word	65535
 1624              		.cfi_endproc
 1625              	.LFE20:
 1626              		.size	CySysWdtWriteMatch, .-CySysWdtWriteMatch
 1627              		.section	.text.CySysWdtWriteToggleBit,"ax",%progbits
 1628              		.align	2
 1629              		.global	CySysWdtWriteToggleBit
 1630              		.code	16
 1631              		.thumb_func
 1632              		.type	CySysWdtWriteToggleBit, %function
 1633              	CySysWdtWriteToggleBit:
 1634              	.LFB21:
1426:Generated_Source\PSoC4/CyLib.c **** 
1427:Generated_Source\PSoC4/CyLib.c **** 
1428:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1429:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtWriteToggleBit
1430:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1431:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 55


1432:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1433:Generated_Source\PSoC4/CyLib.c ****     *  Configures which bit in the WDT counter 2 to monitor for a toggle. When that
1434:Generated_Source\PSoC4/CyLib.c ****     *  bit toggles, an interrupt is generated if the mode for counter 2 has
1435:Generated_Source\PSoC4/CyLib.c ****     *  interrupts enabled.
1436:Generated_Source\PSoC4/CyLib.c ****     *
1437:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1438:Generated_Source\PSoC4/CyLib.c ****     *  bit:
1439:Generated_Source\PSoC4/CyLib.c ****     *   Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1440:Generated_Source\PSoC4/CyLib.c ****     *
1441:Generated_Source\PSoC4/CyLib.c ****     * Return:
1442:Generated_Source\PSoC4/CyLib.c ****     *   None
1443:Generated_Source\PSoC4/CyLib.c ****     *
1444:Generated_Source\PSoC4/CyLib.c ****     * Side effects:
1445:Generated_Source\PSoC4/CyLib.c ****     *   WDT Counter 2 should be disabled. Otherwise this function call will have no
1446:Generated_Source\PSoC4/CyLib.c ****     *   effect.
1447:Generated_Source\PSoC4/CyLib.c ****     *
1448:Generated_Source\PSoC4/CyLib.c ****     *   If the specified counter is enabled, call CySysWdtDisable() function with
1449:Generated_Source\PSoC4/CyLib.c ****     *   the corresponding parameter to disable specified counter and wait for it to
1450:Generated_Source\PSoC4/CyLib.c ****     *   stop. This may take up to 3 LFCLK cycles.
1451:Generated_Source\PSoC4/CyLib.c ****     *
1452:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1453:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtWriteToggleBit(uint32 bits)
1454:Generated_Source\PSoC4/CyLib.c ****     {
 1635              		.loc 1 1454 0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 16
 1638              		@ frame_needed = 1, uses_anonymous_args = 0
 1639 0000 80B5     		push	{r7, lr}
 1640              		.cfi_def_cfa_offset 8
 1641              		.cfi_offset 7, -8
 1642              		.cfi_offset 14, -4
 1643 0002 84B0     		sub	sp, sp, #16
 1644              		.cfi_def_cfa_offset 24
 1645 0004 00AF     		add	r7, sp, #0
 1646              		.cfi_def_cfa_register 7
 1647 0006 7860     		str	r0, [r7, #4]
1455:Generated_Source\PSoC4/CyLib.c ****         uint32 configRegValue;
1456:Generated_Source\PSoC4/CyLib.c **** 
1457:Generated_Source\PSoC4/CyLib.c ****         if (0u == CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER2))
 1648              		.loc 1 1457 0
 1649 0008 0220     		movs	r0, #2
 1650 000a FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 1651 000e 031E     		subs	r3, r0, #0
 1652 0010 11D1     		bne	.L123
1458:Generated_Source\PSoC4/CyLib.c ****         {
1459:Generated_Source\PSoC4/CyLib.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 1653              		.loc 1 1459 0
 1654 0012 0B4B     		ldr	r3, .L124
 1655 0014 1B68     		ldr	r3, [r3]
 1656 0016 FB60     		str	r3, [r7, #12]
1460:Generated_Source\PSoC4/CyLib.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
 1657              		.loc 1 1460 0
 1658 0018 FB68     		ldr	r3, [r7, #12]
 1659 001a 0A4A     		ldr	r2, .L124+4
 1660 001c 1340     		ands	r3, r2
 1661 001e FB60     		str	r3, [r7, #12]
1461:Generated_Source\PSoC4/CyLib.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 56


 1662              		.loc 1 1461 0
 1663 0020 7B68     		ldr	r3, [r7, #4]
 1664 0022 1A06     		lsls	r2, r3, #24
 1665 0024 F823     		movs	r3, #248
 1666 0026 5B05     		lsls	r3, r3, #21
 1667 0028 1340     		ands	r3, r2
 1668 002a FA68     		ldr	r2, [r7, #12]
 1669 002c 1343     		orrs	r3, r2
 1670 002e FB60     		str	r3, [r7, #12]
1462:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1671              		.loc 1 1462 0
 1672 0030 034B     		ldr	r3, .L124
 1673 0032 FA68     		ldr	r2, [r7, #12]
 1674 0034 1A60     		str	r2, [r3]
 1675              	.L123:
1463:Generated_Source\PSoC4/CyLib.c ****         }
1464:Generated_Source\PSoC4/CyLib.c ****     }
 1676              		.loc 1 1464 0
 1677 0036 C046     		nop
 1678 0038 BD46     		mov	sp, r7
 1679 003a 04B0     		add	sp, sp, #16
 1680              		@ sp needed
 1681 003c 80BD     		pop	{r7, pc}
 1682              	.L125:
 1683 003e C046     		.align	2
 1684              	.L124:
 1685 0040 0C020B40 		.word	1074463244
 1686 0044 FFFFFFE0 		.word	-520093697
 1687              		.cfi_endproc
 1688              	.LFE21:
 1689              		.size	CySysWdtWriteToggleBit, .-CySysWdtWriteToggleBit
 1690              		.section	.text.CySysWdtReadToggleBit,"ax",%progbits
 1691              		.align	2
 1692              		.global	CySysWdtReadToggleBit
 1693              		.code	16
 1694              		.thumb_func
 1695              		.type	CySysWdtReadToggleBit, %function
 1696              	CySysWdtReadToggleBit:
 1697              	.LFB22:
1465:Generated_Source\PSoC4/CyLib.c **** 
1466:Generated_Source\PSoC4/CyLib.c **** 
1467:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1468:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtReadToggleBit
1469:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1470:Generated_Source\PSoC4/CyLib.c ****     *
1471:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1472:Generated_Source\PSoC4/CyLib.c ****     *  Reads which bit in the WDT counter 2 is monitored for a toggle.
1473:Generated_Source\PSoC4/CyLib.c ****     *
1474:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1475:Generated_Source\PSoC4/CyLib.c ****     *  None
1476:Generated_Source\PSoC4/CyLib.c ****     *
1477:Generated_Source\PSoC4/CyLib.c ****     * Return:
1478:Generated_Source\PSoC4/CyLib.c ****     *  The bit that is monitored (range of 0 to 31)
1479:Generated_Source\PSoC4/CyLib.c ****     *
1480:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtReadToggleBit(void)
1482:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 57


 1698              		.loc 1 1482 0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 0
 1701              		@ frame_needed = 1, uses_anonymous_args = 0
 1702 0000 80B5     		push	{r7, lr}
 1703              		.cfi_def_cfa_offset 8
 1704              		.cfi_offset 7, -8
 1705              		.cfi_offset 14, -4
 1706 0002 00AF     		add	r7, sp, #0
 1707              		.cfi_def_cfa_register 7
1483:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
 1708              		.loc 1 1483 0
 1709 0004 034B     		ldr	r3, .L128
 1710 0006 1B68     		ldr	r3, [r3]
 1711 0008 1B0E     		lsrs	r3, r3, #24
 1712 000a 1F22     		movs	r2, #31
 1713 000c 1340     		ands	r3, r2
1484:Generated_Source\PSoC4/CyLib.c ****     }
 1714              		.loc 1 1484 0
 1715 000e 1800     		movs	r0, r3
 1716 0010 BD46     		mov	sp, r7
 1717              		@ sp needed
 1718 0012 80BD     		pop	{r7, pc}
 1719              	.L129:
 1720              		.align	2
 1721              	.L128:
 1722 0014 0C020B40 		.word	1074463244
 1723              		.cfi_endproc
 1724              	.LFE22:
 1725              		.size	CySysWdtReadToggleBit, .-CySysWdtReadToggleBit
 1726              		.section	.text.CySysWdtReadMatch,"ax",%progbits
 1727              		.align	2
 1728              		.global	CySysWdtReadMatch
 1729              		.code	16
 1730              		.thumb_func
 1731              		.type	CySysWdtReadMatch, %function
 1732              	CySysWdtReadMatch:
 1733              	.LFB23:
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtReadMatch
1489:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1490:Generated_Source\PSoC4/CyLib.c ****     *
1491:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1492:Generated_Source\PSoC4/CyLib.c ****     *  Reads the WDT counter match comparison value.
1493:Generated_Source\PSoC4/CyLib.c ****     *
1494:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1495:Generated_Source\PSoC4/CyLib.c ****     *  counterNum: Valid range [0-1].  Number of the WDT counter.  Match values
1496:Generated_Source\PSoC4/CyLib.c ****     *               are not supported by counter 2.
1497:Generated_Source\PSoC4/CyLib.c ****     *
1498:Generated_Source\PSoC4/CyLib.c ****     * Return:
1499:Generated_Source\PSoC4/CyLib.c ****     *  16-bit match value.
1500:Generated_Source\PSoC4/CyLib.c ****     *
1501:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1502:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtReadMatch(uint32 counterNum)
1503:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 58


 1734              		.loc 1 1503 0
 1735              		.cfi_startproc
 1736              		@ args = 0, pretend = 0, frame = 8
 1737              		@ frame_needed = 1, uses_anonymous_args = 0
 1738 0000 80B5     		push	{r7, lr}
 1739              		.cfi_def_cfa_offset 8
 1740              		.cfi_offset 7, -8
 1741              		.cfi_offset 14, -4
 1742 0002 82B0     		sub	sp, sp, #8
 1743              		.cfi_def_cfa_offset 16
 1744 0004 00AF     		add	r7, sp, #0
 1745              		.cfi_def_cfa_register 7
 1746 0006 7860     		str	r0, [r7, #4]
1504:Generated_Source\PSoC4/CyLib.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1747              		.loc 1 1504 0
 1748 0008 7B68     		ldr	r3, [r7, #4]
 1749 000a 002B     		cmp	r3, #0
 1750 000c 02D0     		beq	.L131
 1751              		.loc 1 1504 0 is_stmt 0 discriminator 2
 1752 000e 7B68     		ldr	r3, [r7, #4]
 1753 0010 012B     		cmp	r3, #1
 1754 0012 01D1     		bne	.L132
 1755              	.L131:
 1756              		.loc 1 1504 0 discriminator 3
 1757 0014 0123     		movs	r3, #1
 1758 0016 00E0     		b	.L133
 1759              	.L132:
 1760              		.loc 1 1504 0 discriminator 4
 1761 0018 0023     		movs	r3, #0
 1762              	.L133:
 1763              		.loc 1 1504 0 discriminator 6
 1764 001a 002B     		cmp	r3, #0
 1765 001c 02D1     		bne	.L134
 1766              		.loc 1 1504 0 discriminator 7
 1767 001e 0020     		movs	r0, #0
 1768 0020 FFF7FEFF 		bl	CyHalt
 1769              	.L134:
1505:Generated_Source\PSoC4/CyLib.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1506:Generated_Source\PSoC4/CyLib.c **** 
1507:Generated_Source\PSoC4/CyLib.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SY
 1770              		.loc 1 1507 0 is_stmt 1
 1771 0024 054B     		ldr	r3, .L136
 1772 0026 1A68     		ldr	r2, [r3]
 1773 0028 7B68     		ldr	r3, [r7, #4]
 1774 002a 1B01     		lsls	r3, r3, #4
 1775 002c DA40     		lsrs	r2, r2, r3
 1776 002e 1300     		movs	r3, r2
 1777 0030 1B04     		lsls	r3, r3, #16
 1778 0032 1B0C     		lsrs	r3, r3, #16
1508:Generated_Source\PSoC4/CyLib.c ****     }
 1779              		.loc 1 1508 0
 1780 0034 1800     		movs	r0, r3
 1781 0036 BD46     		mov	sp, r7
 1782 0038 02B0     		add	sp, sp, #8
 1783              		@ sp needed
 1784 003a 80BD     		pop	{r7, pc}
 1785              	.L137:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 59


 1786              		.align	2
 1787              	.L136:
 1788 003c 08020B40 		.word	1074463240
 1789              		.cfi_endproc
 1790              	.LFE23:
 1791              		.size	CySysWdtReadMatch, .-CySysWdtReadMatch
 1792              		.section	.text.CySysWdtReadCount,"ax",%progbits
 1793              		.align	2
 1794              		.global	CySysWdtReadCount
 1795              		.code	16
 1796              		.thumb_func
 1797              		.type	CySysWdtReadCount, %function
 1798              	CySysWdtReadCount:
 1799              	.LFB24:
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1512:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtReadCount
1513:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1514:Generated_Source\PSoC4/CyLib.c ****     *
1515:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1516:Generated_Source\PSoC4/CyLib.c ****     *  Reads the current WDT counter value.
1517:Generated_Source\PSoC4/CyLib.c ****     *
1518:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1519:Generated_Source\PSoC4/CyLib.c ****     *  counterNum: Valid range [0-2].  Number of the WDT counter.
1520:Generated_Source\PSoC4/CyLib.c ****     *
1521:Generated_Source\PSoC4/CyLib.c ****     * Return:
1522:Generated_Source\PSoC4/CyLib.c ****     *  Live counter value.  Counter 0 and 1 are 16 bit counters and counter
1523:Generated_Source\PSoC4/CyLib.c ****     *  2 is a 32 bit counter.
1524:Generated_Source\PSoC4/CyLib.c ****     *
1525:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1526:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtReadCount(uint32 counterNum)
1527:Generated_Source\PSoC4/CyLib.c ****     {
 1800              		.loc 1 1527 0
 1801              		.cfi_startproc
 1802              		@ args = 0, pretend = 0, frame = 16
 1803              		@ frame_needed = 1, uses_anonymous_args = 0
 1804 0000 80B5     		push	{r7, lr}
 1805              		.cfi_def_cfa_offset 8
 1806              		.cfi_offset 7, -8
 1807              		.cfi_offset 14, -4
 1808 0002 84B0     		sub	sp, sp, #16
 1809              		.cfi_def_cfa_offset 24
 1810 0004 00AF     		add	r7, sp, #0
 1811              		.cfi_def_cfa_register 7
 1812 0006 7860     		str	r0, [r7, #4]
1528:Generated_Source\PSoC4/CyLib.c ****         uint32 regValue = 0u;
 1813              		.loc 1 1528 0
 1814 0008 0023     		movs	r3, #0
 1815 000a FB60     		str	r3, [r7, #12]
1529:Generated_Source\PSoC4/CyLib.c **** 
1530:Generated_Source\PSoC4/CyLib.c ****         switch(counterNum)
 1816              		.loc 1 1530 0
 1817 000c 7B68     		ldr	r3, [r7, #4]
 1818 000e 012B     		cmp	r3, #1
 1819 0010 09D0     		beq	.L140
 1820 0012 02D3     		bcc	.L141
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 60


 1821 0014 022B     		cmp	r3, #2
 1822 0016 0BD0     		beq	.L142
 1823 0018 0EE0     		b	.L145
 1824              	.L141:
1531:Generated_Source\PSoC4/CyLib.c ****         {
1532:Generated_Source\PSoC4/CyLib.c ****             /* WDT Counter 0 */
1533:Generated_Source\PSoC4/CyLib.c ****             case 0u:
1534:Generated_Source\PSoC4/CyLib.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
 1825              		.loc 1 1534 0
 1826 001a 0C4B     		ldr	r3, .L146
 1827 001c 1B68     		ldr	r3, [r3]
 1828 001e 1B04     		lsls	r3, r3, #16
 1829 0020 1B0C     		lsrs	r3, r3, #16
 1830 0022 FB60     		str	r3, [r7, #12]
1535:Generated_Source\PSoC4/CyLib.c ****             break;
 1831              		.loc 1 1535 0
 1832 0024 0CE0     		b	.L143
 1833              	.L140:
1536:Generated_Source\PSoC4/CyLib.c **** 
1537:Generated_Source\PSoC4/CyLib.c ****             /* WDT Counter 1 */
1538:Generated_Source\PSoC4/CyLib.c ****             case 1u:
1539:Generated_Source\PSoC4/CyLib.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
 1834              		.loc 1 1539 0
 1835 0026 094B     		ldr	r3, .L146
 1836 0028 1B68     		ldr	r3, [r3]
 1837 002a 1B0C     		lsrs	r3, r3, #16
 1838 002c FB60     		str	r3, [r7, #12]
1540:Generated_Source\PSoC4/CyLib.c ****             break;
 1839              		.loc 1 1540 0
 1840 002e 07E0     		b	.L143
 1841              	.L142:
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****             /* WDT Counter 2 */
1543:Generated_Source\PSoC4/CyLib.c ****             case 2u:
1544:Generated_Source\PSoC4/CyLib.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
 1842              		.loc 1 1544 0
 1843 0030 074B     		ldr	r3, .L146+4
 1844 0032 1B68     		ldr	r3, [r3]
 1845 0034 FB60     		str	r3, [r7, #12]
1545:Generated_Source\PSoC4/CyLib.c ****             break;
 1846              		.loc 1 1545 0
 1847 0036 03E0     		b	.L143
 1848              	.L145:
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****             default:
1548:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
 1849              		.loc 1 1548 0
 1850 0038 0020     		movs	r0, #0
 1851 003a FFF7FEFF 		bl	CyHalt
1549:Generated_Source\PSoC4/CyLib.c ****             break;
 1852              		.loc 1 1549 0
 1853 003e C046     		nop
 1854              	.L143:
1550:Generated_Source\PSoC4/CyLib.c ****         }
1551:Generated_Source\PSoC4/CyLib.c **** 
1552:Generated_Source\PSoC4/CyLib.c ****         return (regValue);
 1855              		.loc 1 1552 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 61


 1856 0040 FB68     		ldr	r3, [r7, #12]
1553:Generated_Source\PSoC4/CyLib.c ****     }
 1857              		.loc 1 1553 0
 1858 0042 1800     		movs	r0, r3
 1859 0044 BD46     		mov	sp, r7
 1860 0046 04B0     		add	sp, sp, #16
 1861              		@ sp needed
 1862 0048 80BD     		pop	{r7, pc}
 1863              	.L147:
 1864 004a C046     		.align	2
 1865              	.L146:
 1866 004c 00020B40 		.word	1074463232
 1867 0050 04020B40 		.word	1074463236
 1868              		.cfi_endproc
 1869              	.LFE24:
 1870              		.size	CySysWdtReadCount, .-CySysWdtReadCount
 1871              		.section	.text.CySysWdtGetInterruptSource,"ax",%progbits
 1872              		.align	2
 1873              		.global	CySysWdtGetInterruptSource
 1874              		.code	16
 1875              		.thumb_func
 1876              		.type	CySysWdtGetInterruptSource, %function
 1877              	CySysWdtGetInterruptSource:
 1878              	.LFB25:
1554:Generated_Source\PSoC4/CyLib.c **** 
1555:Generated_Source\PSoC4/CyLib.c **** 
1556:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1557:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtGetInterruptSource
1558:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1559:Generated_Source\PSoC4/CyLib.c ****     *
1560:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1561:Generated_Source\PSoC4/CyLib.c ****     *   Reads a mask containing all the WDT counters interrupts that are currently
1562:Generated_Source\PSoC4/CyLib.c ****     *   set by the hardware, if a corresponding mode is selected.
1563:Generated_Source\PSoC4/CyLib.c ****     *
1564:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1565:Generated_Source\PSoC4/CyLib.c ****     *   None
1566:Generated_Source\PSoC4/CyLib.c ****     *
1567:Generated_Source\PSoC4/CyLib.c ****     * Return:
1568:Generated_Source\PSoC4/CyLib.c ****     *   Mask of interrupts set.
1569:Generated_Source\PSoC4/CyLib.c ****     *   Define                    Counter
1570:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER0_INT    0
1571:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER1_INT    1
1572:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER2_INT    2
1573:Generated_Source\PSoC4/CyLib.c ****     *
1574:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtGetInterruptSource(void)
1576:Generated_Source\PSoC4/CyLib.c ****     {
 1879              		.loc 1 1576 0
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 1, uses_anonymous_args = 0
 1883 0000 80B5     		push	{r7, lr}
 1884              		.cfi_def_cfa_offset 8
 1885              		.cfi_offset 7, -8
 1886              		.cfi_offset 14, -4
 1887 0002 00AF     		add	r7, sp, #0
 1888              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 62


1577:Generated_Source\PSoC4/CyLib.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
 1889              		.loc 1 1577 0
 1890 0004 034B     		ldr	r3, .L150
 1891 0006 1B68     		ldr	r3, [r3]
 1892 0008 034A     		ldr	r2, .L150+4
 1893 000a 1340     		ands	r3, r2
1578:Generated_Source\PSoC4/CyLib.c ****     }
 1894              		.loc 1 1578 0
 1895 000c 1800     		movs	r0, r3
 1896 000e BD46     		mov	sp, r7
 1897              		@ sp needed
 1898 0010 80BD     		pop	{r7, pc}
 1899              	.L151:
 1900 0012 C046     		.align	2
 1901              	.L150:
 1902 0014 10020B40 		.word	1074463248
 1903 0018 04040400 		.word	263172
 1904              		.cfi_endproc
 1905              	.LFE25:
 1906              		.size	CySysWdtGetInterruptSource, .-CySysWdtGetInterruptSource
 1907              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 1908              		.align	2
 1909              		.global	CySysWdtClearInterrupt
 1910              		.code	16
 1911              		.thumb_func
 1912              		.type	CySysWdtClearInterrupt, %function
 1913              	CySysWdtClearInterrupt:
 1914              	.LFB26:
1579:Generated_Source\PSoC4/CyLib.c **** 
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1582:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtClearInterrupt
1583:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1584:Generated_Source\PSoC4/CyLib.c ****     *
1585:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1586:Generated_Source\PSoC4/CyLib.c ****     *   Clears all the WDT counter interrupts set in the mask. Calling this function
1587:Generated_Source\PSoC4/CyLib.c ****     *   also prevents Reset from happening when the counter mode is set to generate
1588:Generated_Source\PSoC4/CyLib.c ****     *   3 interrupts and then reset the device.
1589:Generated_Source\PSoC4/CyLib.c ****     *
1590:Generated_Source\PSoC4/CyLib.c ****     *   All the WDT interrupts are to be cleared by the firmware, otherwise interrupts
1591:Generated_Source\PSoC4/CyLib.c ****     *   will be generated continuously.
1592:Generated_Source\PSoC4/CyLib.c ****     *
1593:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1594:Generated_Source\PSoC4/CyLib.c ****     *   counterMask: Mask of all counters to enable
1595:Generated_Source\PSoC4/CyLib.c ****     *   Define                    Counter
1596:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER0_INT    0
1597:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER1_INT    1
1598:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER2_INT    2
1599:Generated_Source\PSoC4/CyLib.c ****     *
1600:Generated_Source\PSoC4/CyLib.c ****     * Return:
1601:Generated_Source\PSoC4/CyLib.c ****     *   None
1602:Generated_Source\PSoC4/CyLib.c ****     *
1603:Generated_Source\PSoC4/CyLib.c ****     * Side effects:
1604:Generated_Source\PSoC4/CyLib.c ****     *   This function temporary removes the watchdog lock, if it was set, and
1605:Generated_Source\PSoC4/CyLib.c ****     *   restores the lock state, after cleaning the WDT interrupts, that are set in
1606:Generated_Source\PSoC4/CyLib.c ****     *   a mask.
1607:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 63


1608:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1610:Generated_Source\PSoC4/CyLib.c ****     {
 1915              		.loc 1 1610 0
 1916              		.cfi_startproc
 1917              		@ args = 0, pretend = 0, frame = 16
 1918              		@ frame_needed = 1, uses_anonymous_args = 0
 1919 0000 90B5     		push	{r4, r7, lr}
 1920              		.cfi_def_cfa_offset 12
 1921              		.cfi_offset 4, -12
 1922              		.cfi_offset 7, -8
 1923              		.cfi_offset 14, -4
 1924 0002 85B0     		sub	sp, sp, #20
 1925              		.cfi_def_cfa_offset 32
 1926 0004 00AF     		add	r7, sp, #0
 1927              		.cfi_def_cfa_register 7
 1928 0006 7860     		str	r0, [r7, #4]
1611:Generated_Source\PSoC4/CyLib.c ****         uint8 interruptState;
1612:Generated_Source\PSoC4/CyLib.c ****         uint32 wdtLockState;
1613:Generated_Source\PSoC4/CyLib.c **** 
1614:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 1929              		.loc 1 1614 0
 1930 0008 0B23     		movs	r3, #11
 1931 000a FC18     		adds	r4, r7, r3
 1932 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1933 0010 0300     		movs	r3, r0
 1934 0012 2370     		strb	r3, [r4]
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysWdtLocked())
 1935              		.loc 1 1616 0
 1936 0014 FFF7FEFF 		bl	CySysWdtLocked
 1937 0018 031E     		subs	r3, r0, #0
 1938 001a 04D0     		beq	.L153
1617:Generated_Source\PSoC4/CyLib.c ****         {
1618:Generated_Source\PSoC4/CyLib.c ****             wdtLockState = 1u;
 1939              		.loc 1 1618 0
 1940 001c 0123     		movs	r3, #1
 1941 001e FB60     		str	r3, [r7, #12]
1619:Generated_Source\PSoC4/CyLib.c ****             CySysWdtUnlock();
 1942              		.loc 1 1619 0
 1943 0020 FFF7FEFF 		bl	CySysWdtUnlock
 1944 0024 01E0     		b	.L154
 1945              	.L153:
1620:Generated_Source\PSoC4/CyLib.c ****         }
1621:Generated_Source\PSoC4/CyLib.c ****         else
1622:Generated_Source\PSoC4/CyLib.c ****         {
1623:Generated_Source\PSoC4/CyLib.c ****             wdtLockState = 0u;
 1946              		.loc 1 1623 0
 1947 0026 0023     		movs	r3, #0
 1948 0028 FB60     		str	r3, [r7, #12]
 1949              	.L154:
1624:Generated_Source\PSoC4/CyLib.c ****         }
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         /* Set new WDT control register value */
1627:Generated_Source\PSoC4/CyLib.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
 1950              		.loc 1 1627 0
 1951 002a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 64


 1952 002c 0C4A     		ldr	r2, .L156
 1953 002e 1340     		ands	r3, r2
 1954 0030 7B60     		str	r3, [r7, #4]
1628:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_WDT_COUNTER1_INT |
1629:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_WDT_COUNTER2_INT);
1630:Generated_Source\PSoC4/CyLib.c **** 
1631:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
 1955              		.loc 1 1631 0
 1956 0032 0C4B     		ldr	r3, .L156+4
 1957 0034 0B4A     		ldr	r2, .L156+4
 1958 0036 1268     		ldr	r2, [r2]
 1959 0038 0B49     		ldr	r1, .L156+8
 1960 003a 1140     		ands	r1, r2
 1961 003c 7A68     		ldr	r2, [r7, #4]
 1962 003e 0A43     		orrs	r2, r1
 1963 0040 1A60     		str	r2, [r3]
1632:Generated_Source\PSoC4/CyLib.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1633:Generated_Source\PSoC4/CyLib.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1634:Generated_Source\PSoC4/CyLib.c **** 
1635:Generated_Source\PSoC4/CyLib.c ****         if (1u == wdtLockState)
 1964              		.loc 1 1635 0
 1965 0042 FB68     		ldr	r3, [r7, #12]
 1966 0044 012B     		cmp	r3, #1
 1967 0046 01D1     		bne	.L155
1636:Generated_Source\PSoC4/CyLib.c ****         {
1637:Generated_Source\PSoC4/CyLib.c ****             CySysWdtLock();
 1968              		.loc 1 1637 0
 1969 0048 FFF7FEFF 		bl	CySysWdtLock
 1970              	.L155:
1638:Generated_Source\PSoC4/CyLib.c ****         }
1639:Generated_Source\PSoC4/CyLib.c **** 
1640:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1971              		.loc 1 1640 0
 1972 004c 0B23     		movs	r3, #11
 1973 004e FB18     		adds	r3, r7, r3
 1974 0050 1B78     		ldrb	r3, [r3]
 1975 0052 1800     		movs	r0, r3
 1976 0054 FFF7FEFF 		bl	CyExitCriticalSection
1641:Generated_Source\PSoC4/CyLib.c ****     }
 1977              		.loc 1 1641 0
 1978 0058 C046     		nop
 1979 005a BD46     		mov	sp, r7
 1980 005c 05B0     		add	sp, sp, #20
 1981              		@ sp needed
 1982 005e 90BD     		pop	{r4, r7, pc}
 1983              	.L157:
 1984              		.align	2
 1985              	.L156:
 1986 0060 04040400 		.word	263172
 1987 0064 10020B40 		.word	1074463248
 1988 0068 FBFBFBFF 		.word	-263173
 1989              		.cfi_endproc
 1990              	.LFE26:
 1991              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 1992              		.section	.text.CySysWdtResetCounters,"ax",%progbits
 1993              		.align	2
 1994              		.global	CySysWdtResetCounters
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 65


 1995              		.code	16
 1996              		.thumb_func
 1997              		.type	CySysWdtResetCounters, %function
 1998              	CySysWdtResetCounters:
 1999              	.LFB27:
1642:Generated_Source\PSoC4/CyLib.c **** 
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1645:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtResetCounters
1646:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1647:Generated_Source\PSoC4/CyLib.c ****     *
1648:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1649:Generated_Source\PSoC4/CyLib.c ****     *  Resets all WDT counters set in the mask.
1650:Generated_Source\PSoC4/CyLib.c ****     *
1651:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1652:Generated_Source\PSoC4/CyLib.c ****     *  counterMask: Mask of all counters to reset.
1653:Generated_Source\PSoC4/CyLib.c ****     *   Define                       Counter
1654:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER0_RESET    0
1655:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER1_RESET    1
1656:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_WDT_COUNTER2_RESET    2
1657:Generated_Source\PSoC4/CyLib.c ****     *
1658:Generated_Source\PSoC4/CyLib.c ****     * Return:
1659:Generated_Source\PSoC4/CyLib.c ****     *   None
1660:Generated_Source\PSoC4/CyLib.c ****     *
1661:Generated_Source\PSoC4/CyLib.c ****     * Side effects:
1662:Generated_Source\PSoC4/CyLib.c ****     *   This function will not reset counter values if the Watchdog is locked.
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1665:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtResetCounters(uint32 countersMask)
1666:Generated_Source\PSoC4/CyLib.c ****     {
 2000              		.loc 1 1666 0
 2001              		.cfi_startproc
 2002              		@ args = 0, pretend = 0, frame = 8
 2003              		@ frame_needed = 1, uses_anonymous_args = 0
 2004 0000 80B5     		push	{r7, lr}
 2005              		.cfi_def_cfa_offset 8
 2006              		.cfi_offset 7, -8
 2007              		.cfi_offset 14, -4
 2008 0002 82B0     		sub	sp, sp, #8
 2009              		.cfi_def_cfa_offset 16
 2010 0004 00AF     		add	r7, sp, #0
 2011              		.cfi_def_cfa_register 7
 2012 0006 7860     		str	r0, [r7, #4]
1667:Generated_Source\PSoC4/CyLib.c ****         /* Set new WDT reset value */
1668:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & (CY_SYS_WDT_COUNTER0_RESET |
 2013              		.loc 1 1668 0
 2014 0008 054B     		ldr	r3, .L159
 2015 000a 054A     		ldr	r2, .L159
 2016 000c 1168     		ldr	r1, [r2]
 2017 000e 7A68     		ldr	r2, [r7, #4]
 2018 0010 0448     		ldr	r0, .L159+4
 2019 0012 0240     		ands	r2, r0
 2020 0014 0A43     		orrs	r2, r1
 2021 0016 1A60     		str	r2, [r3]
1669:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_WDT_COUNTER1_RESET | CY_SYS_WDT_COUNTER2_RESET));
1670:Generated_Source\PSoC4/CyLib.c ****     }
 2022              		.loc 1 1670 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 66


 2023 0018 C046     		nop
 2024 001a BD46     		mov	sp, r7
 2025 001c 02B0     		add	sp, sp, #8
 2026              		@ sp needed
 2027 001e 80BD     		pop	{r7, pc}
 2028              	.L160:
 2029              		.align	2
 2030              	.L159:
 2031 0020 10020B40 		.word	1074463248
 2032 0024 08080800 		.word	526344
 2033              		.cfi_endproc
 2034              	.LFE27:
 2035              		.size	CySysWdtResetCounters, .-CySysWdtResetCounters
 2036              		.section	.text.CySysClkLfclkPosedgeCatch,"ax",%progbits
 2037              		.align	2
 2038              		.code	16
 2039              		.thumb_func
 2040              		.type	CySysClkLfclkPosedgeCatch, %function
 2041              	CySysClkLfclkPosedgeCatch:
 2042              	.LFB28:
1671:Generated_Source\PSoC4/CyLib.c **** 
1672:Generated_Source\PSoC4/CyLib.c **** 
1673:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1674:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1675:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1676:Generated_Source\PSoC4/CyLib.c ****     *
1677:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1678:Generated_Source\PSoC4/CyLib.c ****     *  Returns once LFCLK positive edge occurred.
1679:Generated_Source\PSoC4/CyLib.c ****     *
1680:Generated_Source\PSoC4/CyLib.c ****     *  The CySysClkLfclkPosedgeRestore() should be called after this function in
1681:Generated_Source\PSoC4/CyLib.c ****     *  order to restore WDT configuration.
1682:Generated_Source\PSoC4/CyLib.c ****     *
1683:Generated_Source\PSoC4/CyLib.c ****     *  The pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1684:Generated_Source\PSoC4/CyLib.c ****     *  functions expected to be called inside of a critical section.
1685:Generated_Source\PSoC4/CyLib.c ****     *
1686:Generated_Source\PSoC4/CyLib.c ****     *  To ensure that the WDT counter value is read until it changes. The enabled
1687:Generated_Source\PSoC4/CyLib.c ****     *  WDT counter is used for that purpose. If no counters are enabled, the counter
1688:Generated_Source\PSoC4/CyLib.c ****     *  0 is enabled. And after LFCLK source is switched, the counter 0 configuration
1689:Generated_Source\PSoC4/CyLib.c ****     *  is restored back.
1690:Generated_Source\PSoC4/CyLib.c ****     *
1691:Generated_Source\PSoC4/CyLib.c ****     *  Not applicable for the PSoC 4000 devices.
1692:Generated_Source\PSoC4/CyLib.c ****     *
1693:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1694:Generated_Source\PSoC4/CyLib.c ****     *  None
1695:Generated_Source\PSoC4/CyLib.c ****     *
1696:Generated_Source\PSoC4/CyLib.c ****     * Return:
1697:Generated_Source\PSoC4/CyLib.c ****     *  None
1698:Generated_Source\PSoC4/CyLib.c ****     *
1699:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1700:Generated_Source\PSoC4/CyLib.c ****     *  This function will have no effect if the WDT is locked (CySysWdtLock() is
1701:Generated_Source\PSoC4/CyLib.c ****     *  called). Call CySysWdtUnlock() to unlock the WDT.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1704:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkLfclkPosedgeCatch(void)
1705:Generated_Source\PSoC4/CyLib.c ****     {
 2043              		.loc 1 1705 0
 2044              		.cfi_startproc
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 67


 2045              		@ args = 0, pretend = 0, frame = 8
 2046              		@ frame_needed = 1, uses_anonymous_args = 0
 2047 0000 80B5     		push	{r7, lr}
 2048              		.cfi_def_cfa_offset 8
 2049              		.cfi_offset 7, -8
 2050              		.cfi_offset 14, -4
 2051 0002 82B0     		sub	sp, sp, #8
 2052              		.cfi_def_cfa_offset 16
 2053 0004 00AF     		add	r7, sp, #0
 2054              		.cfi_def_cfa_register 7
1706:Generated_Source\PSoC4/CyLib.c ****         uint32 firstCount;
1707:Generated_Source\PSoC4/CyLib.c **** 
1708:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER0))
 2055              		.loc 1 1708 0
 2056 0006 0020     		movs	r0, #0
 2057 0008 FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 2058 000c 031E     		subs	r3, r0, #0
 2059 000e 03D0     		beq	.L162
1709:Generated_Source\PSoC4/CyLib.c ****         {
1710:Generated_Source\PSoC4/CyLib.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 2060              		.loc 1 1710 0
 2061 0010 1E4B     		ldr	r3, .L167
 2062 0012 0022     		movs	r2, #0
 2063 0014 1A60     		str	r2, [r3]
 2064 0016 24E0     		b	.L163
 2065              	.L162:
1711:Generated_Source\PSoC4/CyLib.c ****         }
1712:Generated_Source\PSoC4/CyLib.c ****         else if (0u != CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER1))
 2066              		.loc 1 1712 0
 2067 0018 0120     		movs	r0, #1
 2068 001a FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 2069 001e 031E     		subs	r3, r0, #0
 2070 0020 03D0     		beq	.L164
1713:Generated_Source\PSoC4/CyLib.c ****         {
1714:Generated_Source\PSoC4/CyLib.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
 2071              		.loc 1 1714 0
 2072 0022 1A4B     		ldr	r3, .L167
 2073 0024 0122     		movs	r2, #1
 2074 0026 1A60     		str	r2, [r3]
 2075 0028 1BE0     		b	.L163
 2076              	.L164:
1715:Generated_Source\PSoC4/CyLib.c ****         }
1716:Generated_Source\PSoC4/CyLib.c ****         else if (0u != CySysWdtReadEnabledStatus(CY_SYS_WDT_COUNTER2))
 2077              		.loc 1 1716 0
 2078 002a 0220     		movs	r0, #2
 2079 002c FFF7FEFF 		bl	CySysWdtReadEnabledStatus
 2080 0030 031E     		subs	r3, r0, #0
 2081 0032 03D0     		beq	.L165
1717:Generated_Source\PSoC4/CyLib.c ****         {
1718:Generated_Source\PSoC4/CyLib.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
 2082              		.loc 1 1718 0
 2083 0034 154B     		ldr	r3, .L167
 2084 0036 0222     		movs	r2, #2
 2085 0038 1A60     		str	r2, [r3]
 2086 003a 12E0     		b	.L163
 2087              	.L165:
1719:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 68


1720:Generated_Source\PSoC4/CyLib.c ****         else /* All WDT counters are disabled */
1721:Generated_Source\PSoC4/CyLib.c ****         {
1722:Generated_Source\PSoC4/CyLib.c ****             /* Configure WDT counter # 0 */
1723:Generated_Source\PSoC4/CyLib.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
 2088              		.loc 1 1723 0
 2089 003c 144B     		ldr	r3, .L167+4
 2090 003e 0122     		movs	r2, #1
 2091 0040 1A60     		str	r2, [r3]
1724:Generated_Source\PSoC4/CyLib.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 2092              		.loc 1 1724 0
 2093 0042 124B     		ldr	r3, .L167
 2094 0044 0022     		movs	r2, #0
 2095 0046 1A60     		str	r2, [r3]
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtReadMode(CY_SYS_WDT_COUNTER0);
 2096              		.loc 1 1726 0
 2097 0048 0020     		movs	r0, #0
 2098 004a FFF7FEFF 		bl	CySysWdtReadMode
 2099 004e 0200     		movs	r2, r0
 2100 0050 104B     		ldr	r3, .L167+8
 2101 0052 1A60     		str	r2, [r3]
1727:Generated_Source\PSoC4/CyLib.c ****             CySysWdtWriteMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
 2102              		.loc 1 1727 0
 2103 0054 0021     		movs	r1, #0
 2104 0056 0020     		movs	r0, #0
 2105 0058 FFF7FEFF 		bl	CySysWdtWriteMode
1728:Generated_Source\PSoC4/CyLib.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 2106              		.loc 1 1728 0
 2107 005c 0120     		movs	r0, #1
 2108 005e FFF7FEFF 		bl	CySysWdtEnable
 2109              	.L163:
1729:Generated_Source\PSoC4/CyLib.c ****         }
1730:Generated_Source\PSoC4/CyLib.c **** 
1731:Generated_Source\PSoC4/CyLib.c ****         firstCount = CySysWdtReadCount(lfclkPosedgeEnabledWdtCounter);
 2110              		.loc 1 1731 0
 2111 0062 0A4B     		ldr	r3, .L167
 2112 0064 1B68     		ldr	r3, [r3]
 2113 0066 1800     		movs	r0, r3
 2114 0068 FFF7FEFF 		bl	CySysWdtReadCount
 2115 006c 0300     		movs	r3, r0
 2116 006e 7B60     		str	r3, [r7, #4]
1732:Generated_Source\PSoC4/CyLib.c ****         while (CySysWdtReadCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
 2117              		.loc 1 1732 0
 2118 0070 C046     		nop
 2119              	.L166:
 2120              		.loc 1 1732 0 is_stmt 0 discriminator 1
 2121 0072 064B     		ldr	r3, .L167
 2122 0074 1B68     		ldr	r3, [r3]
 2123 0076 1800     		movs	r0, r3
 2124 0078 FFF7FEFF 		bl	CySysWdtReadCount
 2125 007c 0200     		movs	r2, r0
 2126 007e 7B68     		ldr	r3, [r7, #4]
 2127 0080 9A42     		cmp	r2, r3
 2128 0082 F6D0     		beq	.L166
1733:Generated_Source\PSoC4/CyLib.c ****         {
1734:Generated_Source\PSoC4/CyLib.c ****             /* Wait for counter to increment */
1735:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 69


1736:Generated_Source\PSoC4/CyLib.c ****     }
 2129              		.loc 1 1736 0 is_stmt 1
 2130 0084 C046     		nop
 2131 0086 BD46     		mov	sp, r7
 2132 0088 02B0     		add	sp, sp, #8
 2133              		@ sp needed
 2134 008a 80BD     		pop	{r7, pc}
 2135              	.L168:
 2136              		.align	2
 2137              	.L167:
 2138 008c 00000000 		.word	lfclkPosedgeEnabledWdtCounter
 2139 0090 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 2140 0094 00000000 		.word	lfclkPosedgeWdtCounter0Mode
 2141              		.cfi_endproc
 2142              	.LFE28:
 2143              		.size	CySysClkLfclkPosedgeCatch, .-CySysClkLfclkPosedgeCatch
 2144              		.section	.text.CySysClkLfclkPosedgeRestore,"ax",%progbits
 2145              		.align	2
 2146              		.code	16
 2147              		.thumb_func
 2148              		.type	CySysClkLfclkPosedgeRestore, %function
 2149              	CySysClkLfclkPosedgeRestore:
 2150              	.LFB29:
1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c **** 
1739:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1740:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1741:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1744:Generated_Source\PSoC4/CyLib.c ****     *  Restores WDT configuration after CySysClkLfclkPosedgeCatch() call.
1745:Generated_Source\PSoC4/CyLib.c ****     *
1746:Generated_Source\PSoC4/CyLib.c ****     *  The pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1747:Generated_Source\PSoC4/CyLib.c ****     *  functions expected to be called inside of a critical section.
1748:Generated_Source\PSoC4/CyLib.c ****     *
1749:Generated_Source\PSoC4/CyLib.c ****     *  Not applicable for the PSoC 4000 devices.
1750:Generated_Source\PSoC4/CyLib.c ****     *
1751:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1752:Generated_Source\PSoC4/CyLib.c ****     *  None
1753:Generated_Source\PSoC4/CyLib.c ****     *
1754:Generated_Source\PSoC4/CyLib.c ****     * Return:
1755:Generated_Source\PSoC4/CyLib.c ****     *  None
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1758:Generated_Source\PSoC4/CyLib.c ****     *  This function will have no effect if the WDT is locked (CySysWdtLock() is
1759:Generated_Source\PSoC4/CyLib.c ****     *  called). Call CySysWdtUnlock() to unlock the WDT.
1760:Generated_Source\PSoC4/CyLib.c ****     *
1761:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1762:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkLfclkPosedgeRestore(void)
1763:Generated_Source\PSoC4/CyLib.c ****     {
 2151              		.loc 1 1763 0
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 0
 2154              		@ frame_needed = 1, uses_anonymous_args = 0
 2155 0000 80B5     		push	{r7, lr}
 2156              		.cfi_def_cfa_offset 8
 2157              		.cfi_offset 7, -8
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 70


 2158              		.cfi_offset 14, -4
 2159 0002 00AF     		add	r7, sp, #0
 2160              		.cfi_def_cfa_register 7
1764:Generated_Source\PSoC4/CyLib.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
 2161              		.loc 1 1764 0
 2162 0004 0A4B     		ldr	r3, .L172
 2163 0006 1B68     		ldr	r3, [r3]
 2164 0008 002B     		cmp	r3, #0
 2165 000a 0ED0     		beq	.L171
1765:Generated_Source\PSoC4/CyLib.c ****         {
1766:Generated_Source\PSoC4/CyLib.c ****             /* Restore counter # 0 configuration and force it's shutdown */
1767:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
 2166              		.loc 1 1767 0
 2167 000c 094B     		ldr	r3, .L172+4
 2168 000e 094A     		ldr	r2, .L172+4
 2169 0010 1268     		ldr	r2, [r2]
 2170 0012 0121     		movs	r1, #1
 2171 0014 8A43     		bics	r2, r1
 2172 0016 1A60     		str	r2, [r3]
1768:Generated_Source\PSoC4/CyLib.c ****             CySysWdtWriteMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
 2173              		.loc 1 1768 0
 2174 0018 074B     		ldr	r3, .L172+8
 2175 001a 1B68     		ldr	r3, [r3]
 2176 001c 1900     		movs	r1, r3
 2177 001e 0020     		movs	r0, #0
 2178 0020 FFF7FEFF 		bl	CySysWdtWriteMode
1769:Generated_Source\PSoC4/CyLib.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
 2179              		.loc 1 1769 0
 2180 0024 024B     		ldr	r3, .L172
 2181 0026 0022     		movs	r2, #0
 2182 0028 1A60     		str	r2, [r3]
 2183              	.L171:
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c ****     }
 2184              		.loc 1 1771 0
 2185 002a C046     		nop
 2186 002c BD46     		mov	sp, r7
 2187              		@ sp needed
 2188 002e 80BD     		pop	{r7, pc}
 2189              	.L173:
 2190              		.align	2
 2191              	.L172:
 2192 0030 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 2193 0034 10020B40 		.word	1074463248
 2194 0038 00000000 		.word	lfclkPosedgeWdtCounter0Mode
 2195              		.cfi_endproc
 2196              	.LFE29:
 2197              		.size	CySysClkLfclkPosedgeRestore, .-CySysClkLfclkPosedgeRestore
 2198              		.section	.text.CySysLvdEnable,"ax",%progbits
 2199              		.align	2
 2200              		.global	CySysLvdEnable
 2201              		.code	16
 2202              		.thumb_func
 2203              		.type	CySysLvdEnable, %function
 2204              	CySysLvdEnable:
 2205              	.LFB30:
1772:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 71


1773:Generated_Source\PSoC4/CyLib.c **** #else
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1776:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtReadEnabledStatus
1777:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1778:Generated_Source\PSoC4/CyLib.c ****     *
1779:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1780:Generated_Source\PSoC4/CyLib.c ****     *  Reads the enabled status WDT counter.
1781:Generated_Source\PSoC4/CyLib.c ****     *
1782:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1783:Generated_Source\PSoC4/CyLib.c ****     *  None
1784:Generated_Source\PSoC4/CyLib.c ****     *
1785:Generated_Source\PSoC4/CyLib.c ****     * Return:
1786:Generated_Source\PSoC4/CyLib.c ****     *  Status of WDT counter:
1787:Generated_Source\PSoC4/CyLib.c ****     *   0 - counter is disabled
1788:Generated_Source\PSoC4/CyLib.c ****     *   1 - counter is enabled
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtReadEnabledStatus(void)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
1794:Generated_Source\PSoC4/CyLib.c ****     }
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c **** 
1797:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1798:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtEnable
1799:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1800:Generated_Source\PSoC4/CyLib.c ****     *
1801:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1802:Generated_Source\PSoC4/CyLib.c ****     *  Enables the watchdog timer reset generation. The CySysWdtClearInterrupt()
1803:Generated_Source\PSoC4/CyLib.c ****     *  feeds the watch dog. Two unserviced interrupts will lead to a system reset
1804:Generated_Source\PSoC4/CyLib.c ****     *  (i.e. at the third match).
1805:Generated_Source\PSoC4/CyLib.c ****     *
1806:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1807:Generated_Source\PSoC4/CyLib.c ****     *  None
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * Return:
1810:Generated_Source\PSoC4/CyLib.c ****     *  None
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1813:Generated_Source\PSoC4/CyLib.c ****     *  The ILO is enabled by hardware once WDT is started.
1814:Generated_Source\PSoC4/CyLib.c ****     *
1815:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1816:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtEnable(void)
1817:Generated_Source\PSoC4/CyLib.c ****     {
1818:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
1819:Generated_Source\PSoC4/CyLib.c ****     }
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c **** 
1822:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1823:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtDisable
1824:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1825:Generated_Source\PSoC4/CyLib.c ****     *
1826:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1827:Generated_Source\PSoC4/CyLib.c ****     *  Disables the WDT reset generation.
1828:Generated_Source\PSoC4/CyLib.c ****     *
1829:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 72


1830:Generated_Source\PSoC4/CyLib.c ****     *  None
1831:Generated_Source\PSoC4/CyLib.c ****     *
1832:Generated_Source\PSoC4/CyLib.c ****     * Return:
1833:Generated_Source\PSoC4/CyLib.c ****     *  None
1834:Generated_Source\PSoC4/CyLib.c ****     *
1835:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1836:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtDisable(void)
1837:Generated_Source\PSoC4/CyLib.c ****     {
1838:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
1839:Generated_Source\PSoC4/CyLib.c ****     }
1840:Generated_Source\PSoC4/CyLib.c **** 
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtWriteMatch
1844:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1847:Generated_Source\PSoC4/CyLib.c ****     *  Configures the WDT counter match comparison value.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1850:Generated_Source\PSoC4/CyLib.c ****     *  match:
1851:Generated_Source\PSoC4/CyLib.c ****     *   Valid range [0-65535]. Value to be used to match against the counter.
1852:Generated_Source\PSoC4/CyLib.c ****     *
1853:Generated_Source\PSoC4/CyLib.c ****     * Return:
1854:Generated_Source\PSoC4/CyLib.c ****     *  None
1855:Generated_Source\PSoC4/CyLib.c ****     *
1856:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1857:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtWriteMatch(uint32 match)
1858:Generated_Source\PSoC4/CyLib.c ****     {
1859:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~ (uint32)CY_SYS_WDT_MATCH_MASK)) |
1860:Generated_Source\PSoC4/CyLib.c ****     }
1861:Generated_Source\PSoC4/CyLib.c **** 
1862:Generated_Source\PSoC4/CyLib.c **** 
1863:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1864:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtReadMatch
1865:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1866:Generated_Source\PSoC4/CyLib.c ****     *
1867:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1868:Generated_Source\PSoC4/CyLib.c ****     *  Reads the WDT counter match comparison value.
1869:Generated_Source\PSoC4/CyLib.c ****     *
1870:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1871:Generated_Source\PSoC4/CyLib.c ****     *  None
1872:Generated_Source\PSoC4/CyLib.c ****     *
1873:Generated_Source\PSoC4/CyLib.c ****     * Return:
1874:Generated_Source\PSoC4/CyLib.c ****     *  Counter match value.
1875:Generated_Source\PSoC4/CyLib.c ****     *
1876:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1877:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtReadMatch(void)
1878:Generated_Source\PSoC4/CyLib.c ****     {
1879:Generated_Source\PSoC4/CyLib.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
1880:Generated_Source\PSoC4/CyLib.c ****     }
1881:Generated_Source\PSoC4/CyLib.c **** 
1882:Generated_Source\PSoC4/CyLib.c **** 
1883:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtReadCount
1885:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1886:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 73


1887:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1888:Generated_Source\PSoC4/CyLib.c ****     *  Reads the current WDT counter value.
1889:Generated_Source\PSoC4/CyLib.c ****     *
1890:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1891:Generated_Source\PSoC4/CyLib.c ****     *  None
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * Return:
1894:Generated_Source\PSoC4/CyLib.c ****     *  Live counter value
1895:Generated_Source\PSoC4/CyLib.c ****     *
1896:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1897:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtReadCount(void)
1898:Generated_Source\PSoC4/CyLib.c ****     {
1899:Generated_Source\PSoC4/CyLib.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
1900:Generated_Source\PSoC4/CyLib.c ****     }
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c **** 
1903:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1904:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtWriteIgnoreBits
1905:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1908:Generated_Source\PSoC4/CyLib.c ****     *  Configures the number of the MSB bits of the watchdog timer that are not
1909:Generated_Source\PSoC4/CyLib.c ****     *  checked against the match.
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1912:Generated_Source\PSoC4/CyLib.c ****     *  bitsNum:
1913:Generated_Source\PSoC4/CyLib.c ****     *   Valid range [0-15]. Number of MSB bits.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * Return:
1916:Generated_Source\PSoC4/CyLib.c ****     *  None
1917:Generated_Source\PSoC4/CyLib.c ****     *
1918:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1919:Generated_Source\PSoC4/CyLib.c ****     *  The value of bitsNum provides control over the time-to-reset of the watchdog
1920:Generated_Source\PSoC4/CyLib.c ****     *  (which happens after 3 successive matches).
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1923:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtWriteIgnoreBits(uint32 bitsNum)
1924:Generated_Source\PSoC4/CyLib.c ****     {
1925:Generated_Source\PSoC4/CyLib.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
1926:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
1927:Generated_Source\PSoC4/CyLib.c ****     }
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1931:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtReadIgnoreBits
1932:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1935:Generated_Source\PSoC4/CyLib.c ****     *  Reads the number of the  MSB bits of the watchdog timer that are not
1936:Generated_Source\PSoC4/CyLib.c ****     *  checked against the match.
1937:Generated_Source\PSoC4/CyLib.c ****     *
1938:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1939:Generated_Source\PSoC4/CyLib.c ****     *  None
1940:Generated_Source\PSoC4/CyLib.c ****     *
1941:Generated_Source\PSoC4/CyLib.c ****     * Return:
1942:Generated_Source\PSoC4/CyLib.c ****     *  Number of MSB bits.
1943:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 74


1944:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1945:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysWdtReadIgnoreBits(void)
1946:Generated_Source\PSoC4/CyLib.c ****     {
1947:Generated_Source\PSoC4/CyLib.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
1948:Generated_Source\PSoC4/CyLib.c ****     }
1949:Generated_Source\PSoC4/CyLib.c **** 
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1952:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtClearInterrupt
1953:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1954:Generated_Source\PSoC4/CyLib.c ****     *
1955:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1956:Generated_Source\PSoC4/CyLib.c ****     *  Feeds the watch dog. Cleans the WDT match flag, which is set every time the
1957:Generated_Source\PSoC4/CyLib.c ****     *  WDT counter reaches a WDT match value.  Two unserviced interrupts will lead
1958:Generated_Source\PSoC4/CyLib.c ****     *  to a system reset (i.e. at the third match).
1959:Generated_Source\PSoC4/CyLib.c ****     *
1960:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1961:Generated_Source\PSoC4/CyLib.c ****     *  None
1962:Generated_Source\PSoC4/CyLib.c ****     *
1963:Generated_Source\PSoC4/CyLib.c ****     * Return:
1964:Generated_Source\PSoC4/CyLib.c ****     *  None
1965:Generated_Source\PSoC4/CyLib.c ****     *
1966:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1967:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtClearInterrupt(void)
1968:Generated_Source\PSoC4/CyLib.c ****     {
1969:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
1970:Generated_Source\PSoC4/CyLib.c ****     }
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtMaskInterrupt
1975:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1976:Generated_Source\PSoC4/CyLib.c ****     *
1977:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1978:Generated_Source\PSoC4/CyLib.c ****     *  After masking interrupts from the WDT, they are not passed to the CPU.
1979:Generated_Source\PSoC4/CyLib.c ****     *  This function does not disable the WDT reset generation.
1980:Generated_Source\PSoC4/CyLib.c ****     *
1981:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1982:Generated_Source\PSoC4/CyLib.c ****     *  None
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     * Return:
1985:Generated_Source\PSoC4/CyLib.c ****     *  None
1986:Generated_Source\PSoC4/CyLib.c ****     *
1987:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1988:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtMaskInterrupt(void)
1989:Generated_Source\PSoC4/CyLib.c ****     {
1990:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
1991:Generated_Source\PSoC4/CyLib.c ****     }
1992:Generated_Source\PSoC4/CyLib.c **** 
1993:Generated_Source\PSoC4/CyLib.c **** 
1994:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1995:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysWdtUnmaskInterrupt
1996:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1999:Generated_Source\PSoC4/CyLib.c ****     *  Unmasks WDT interrupts.
2000:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 75


2001:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2002:Generated_Source\PSoC4/CyLib.c ****     *  None
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * Return:
2005:Generated_Source\PSoC4/CyLib.c ****     *  None
2006:Generated_Source\PSoC4/CyLib.c ****     *
2007:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2008:Generated_Source\PSoC4/CyLib.c ****     void CySysWdtUnmaskInterrupt(void)
2009:Generated_Source\PSoC4/CyLib.c ****     {
2010:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2011:Generated_Source\PSoC4/CyLib.c ****     }
2012:Generated_Source\PSoC4/CyLib.c **** 
2013:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2014:Generated_Source\PSoC4/CyLib.c **** 
2015:Generated_Source\PSoC4/CyLib.c **** 
2016:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2017:Generated_Source\PSoC4/CyLib.c **** 
2018:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2019:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2020:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2021:Generated_Source\PSoC4/CyLib.c ****     *
2022:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2023:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2024:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the voltage
2025:Generated_Source\PSoC4/CyLib.c ****     *  trip level.
2026:Generated_Source\PSoC4/CyLib.c ****     *
2027:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2028:Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
2029:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2030:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2031:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2032:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2033:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2034:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2035:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2036:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2037:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2038:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2039:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2040:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2041:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2042:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2043:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2044:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2045:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2046:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2047:Generated_Source\PSoC4/CyLib.c ****     *
2048:Generated_Source\PSoC4/CyLib.c ****     * Return:
2049:Generated_Source\PSoC4/CyLib.c ****     *  None
2050:Generated_Source\PSoC4/CyLib.c ****     *
2051:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2052:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2053:Generated_Source\PSoC4/CyLib.c ****     {
 2206              		.loc 1 2053 0
 2207              		.cfi_startproc
 2208              		@ args = 0, pretend = 0, frame = 8
 2209              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 76


 2210 0000 80B5     		push	{r7, lr}
 2211              		.cfi_def_cfa_offset 8
 2212              		.cfi_offset 7, -8
 2213              		.cfi_offset 14, -4
 2214 0002 82B0     		sub	sp, sp, #8
 2215              		.cfi_def_cfa_offset 16
 2216 0004 00AF     		add	r7, sp, #0
 2217              		.cfi_def_cfa_register 7
 2218 0006 7860     		str	r0, [r7, #4]
2054:Generated_Source\PSoC4/CyLib.c ****         /* Set threshold */
2055:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 2219              		.loc 1 2055 0
 2220 0008 0D4B     		ldr	r3, .L175
 2221 000a 0D4A     		ldr	r2, .L175
 2222 000c 1268     		ldr	r2, [r2]
 2223 000e 1E21     		movs	r1, #30
 2224 0010 8A43     		bics	r2, r1
 2225 0012 1100     		movs	r1, r2
2056:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 2226              		.loc 1 2056 0
 2227 0014 7A68     		ldr	r2, [r7, #4]
 2228 0016 5200     		lsls	r2, r2, #1
 2229 0018 1E20     		movs	r0, #30
 2230 001a 0240     		ands	r2, r0
2055:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 2231              		.loc 1 2055 0
 2232 001c 0A43     		orrs	r2, r1
 2233 001e 1A60     		str	r2, [r3]
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 2234              		.loc 1 2058 0
 2235 0020 074B     		ldr	r3, .L175
 2236 0022 074A     		ldr	r2, .L175
 2237 0024 1268     		ldr	r2, [r2]
 2238 0026 0121     		movs	r1, #1
 2239 0028 0A43     		orrs	r2, r1
 2240 002a 1A60     		str	r2, [r3]
2059:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 2241              		.loc 1 2059 0
 2242 002c 054B     		ldr	r3, .L175+4
 2243 002e 054A     		ldr	r2, .L175+4
 2244 0030 1268     		ldr	r2, [r2]
 2245 0032 0221     		movs	r1, #2
 2246 0034 0A43     		orrs	r2, r1
 2247 0036 1A60     		str	r2, [r3]
2060:Generated_Source\PSoC4/CyLib.c ****     }
 2248              		.loc 1 2060 0
 2249 0038 C046     		nop
 2250 003a BD46     		mov	sp, r7
 2251 003c 02B0     		add	sp, sp, #8
 2252              		@ sp needed
 2253 003e 80BD     		pop	{r7, pc}
 2254              	.L176:
 2255              		.align	2
 2256              	.L175:
 2257 0040 18000B40 		.word	1074462744
 2258 0044 08000B40 		.word	1074462728
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 77


 2259              		.cfi_endproc
 2260              	.LFE30:
 2261              		.size	CySysLvdEnable, .-CySysLvdEnable
 2262              		.section	.text.CySysLvdDisable,"ax",%progbits
 2263              		.align	2
 2264              		.global	CySysLvdDisable
 2265              		.code	16
 2266              		.thumb_func
 2267              		.type	CySysLvdDisable, %function
 2268              	CySysLvdDisable:
 2269              	.LFB31:
2061:Generated_Source\PSoC4/CyLib.c **** 
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2064:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2065:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2066:Generated_Source\PSoC4/CyLib.c ****     *
2067:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2068:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2069:Generated_Source\PSoC4/CyLib.c ****     *
2070:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2071:Generated_Source\PSoC4/CyLib.c ****     *  None
2072:Generated_Source\PSoC4/CyLib.c ****     *
2073:Generated_Source\PSoC4/CyLib.c ****     * Return:
2074:Generated_Source\PSoC4/CyLib.c ****     *  None
2075:Generated_Source\PSoC4/CyLib.c ****     *
2076:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2077:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2078:Generated_Source\PSoC4/CyLib.c ****     {
 2270              		.loc 1 2078 0
 2271              		.cfi_startproc
 2272              		@ args = 0, pretend = 0, frame = 0
 2273              		@ frame_needed = 1, uses_anonymous_args = 0
 2274 0000 80B5     		push	{r7, lr}
 2275              		.cfi_def_cfa_offset 8
 2276              		.cfi_offset 7, -8
 2277              		.cfi_offset 14, -4
 2278 0002 00AF     		add	r7, sp, #0
 2279              		.cfi_def_cfa_register 7
2079:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 2280              		.loc 1 2079 0
 2281 0004 074B     		ldr	r3, .L178
 2282 0006 074A     		ldr	r2, .L178
 2283 0008 1268     		ldr	r2, [r2]
 2284 000a 0221     		movs	r1, #2
 2285 000c 8A43     		bics	r2, r1
 2286 000e 1A60     		str	r2, [r3]
2080:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 2287              		.loc 1 2080 0
 2288 0010 054B     		ldr	r3, .L178+4
 2289 0012 054A     		ldr	r2, .L178+4
 2290 0014 1268     		ldr	r2, [r2]
 2291 0016 0121     		movs	r1, #1
 2292 0018 8A43     		bics	r2, r1
 2293 001a 1A60     		str	r2, [r3]
2081:Generated_Source\PSoC4/CyLib.c ****     }
 2294              		.loc 1 2081 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 78


 2295 001c C046     		nop
 2296 001e BD46     		mov	sp, r7
 2297              		@ sp needed
 2298 0020 80BD     		pop	{r7, pc}
 2299              	.L179:
 2300 0022 C046     		.align	2
 2301              	.L178:
 2302 0024 08000B40 		.word	1074462728
 2303 0028 18000B40 		.word	1074462744
 2304              		.cfi_endproc
 2305              	.LFE31:
 2306              		.size	CySysLvdDisable, .-CySysLvdDisable
 2307              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 2308              		.align	2
 2309              		.global	CySysLvdGetInterruptSource
 2310              		.code	16
 2311              		.thumb_func
 2312              		.type	CySysLvdGetInterruptSource, %function
 2313              	CySysLvdGetInterruptSource:
 2314              	.LFB32:
2082:Generated_Source\PSoC4/CyLib.c **** 
2083:Generated_Source\PSoC4/CyLib.c **** 
2084:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2085:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2086:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2087:Generated_Source\PSoC4/CyLib.c ****     *
2088:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2089:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2090:Generated_Source\PSoC4/CyLib.c ****     *
2091:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2092:Generated_Source\PSoC4/CyLib.c ****     *  None
2093:Generated_Source\PSoC4/CyLib.c ****     *
2094:Generated_Source\PSoC4/CyLib.c ****     * Return:
2095:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2096:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2097:Generated_Source\PSoC4/CyLib.c ****     *
2098:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2099:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2100:Generated_Source\PSoC4/CyLib.c ****     {
 2315              		.loc 1 2100 0
 2316              		.cfi_startproc
 2317              		@ args = 0, pretend = 0, frame = 0
 2318              		@ frame_needed = 1, uses_anonymous_args = 0
 2319 0000 80B5     		push	{r7, lr}
 2320              		.cfi_def_cfa_offset 8
 2321              		.cfi_offset 7, -8
 2322              		.cfi_offset 14, -4
 2323 0002 00AF     		add	r7, sp, #0
 2324              		.cfi_def_cfa_register 7
2101:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 2325              		.loc 1 2101 0
 2326 0004 034B     		ldr	r3, .L182
 2327 0006 1B68     		ldr	r3, [r3]
 2328 0008 0222     		movs	r2, #2
 2329 000a 1340     		ands	r3, r2
2102:Generated_Source\PSoC4/CyLib.c ****     }
 2330              		.loc 1 2102 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 79


 2331 000c 1800     		movs	r0, r3
 2332 000e BD46     		mov	sp, r7
 2333              		@ sp needed
 2334 0010 80BD     		pop	{r7, pc}
 2335              	.L183:
 2336 0012 C046     		.align	2
 2337              	.L182:
 2338 0014 04000B40 		.word	1074462724
 2339              		.cfi_endproc
 2340              	.LFE32:
 2341              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 2342              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 2343              		.align	2
 2344              		.global	CySysLvdClearInterrupt
 2345              		.code	16
 2346              		.thumb_func
 2347              		.type	CySysLvdClearInterrupt, %function
 2348              	CySysLvdClearInterrupt:
 2349              	.LFB33:
2103:Generated_Source\PSoC4/CyLib.c **** 
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2106:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2107:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2108:Generated_Source\PSoC4/CyLib.c ****     *
2109:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2110:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2111:Generated_Source\PSoC4/CyLib.c ****     *
2112:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2113:Generated_Source\PSoC4/CyLib.c ****     *  None
2114:Generated_Source\PSoC4/CyLib.c ****     *
2115:Generated_Source\PSoC4/CyLib.c ****     * Return:
2116:Generated_Source\PSoC4/CyLib.c ****     *  None
2117:Generated_Source\PSoC4/CyLib.c ****     *
2118:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2119:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2120:Generated_Source\PSoC4/CyLib.c ****     {
 2350              		.loc 1 2120 0
 2351              		.cfi_startproc
 2352              		@ args = 0, pretend = 0, frame = 0
 2353              		@ frame_needed = 1, uses_anonymous_args = 0
 2354 0000 80B5     		push	{r7, lr}
 2355              		.cfi_def_cfa_offset 8
 2356              		.cfi_offset 7, -8
 2357              		.cfi_offset 14, -4
 2358 0002 00AF     		add	r7, sp, #0
 2359              		.cfi_def_cfa_register 7
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 2360              		.loc 1 2121 0
 2361 0004 024B     		ldr	r3, .L185
 2362 0006 0222     		movs	r2, #2
 2363 0008 1A60     		str	r2, [r3]
2122:Generated_Source\PSoC4/CyLib.c ****     }
 2364              		.loc 1 2122 0
 2365 000a C046     		nop
 2366 000c BD46     		mov	sp, r7
 2367              		@ sp needed
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 80


 2368 000e 80BD     		pop	{r7, pc}
 2369              	.L186:
 2370              		.align	2
 2371              	.L185:
 2372 0010 04000B40 		.word	1074462724
 2373              		.cfi_endproc
 2374              	.LFE33:
 2375              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 2376              		.section	.text.CySysGetResetReason,"ax",%progbits
 2377              		.align	2
 2378              		.global	CySysGetResetReason
 2379              		.code	16
 2380              		.thumb_func
 2381              		.type	CySysGetResetReason, %function
 2382              	CySysGetResetReason:
 2383              	.LFB34:
2123:Generated_Source\PSoC4/CyLib.c **** 
2124:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2125:Generated_Source\PSoC4/CyLib.c **** 
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2129:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2130:Generated_Source\PSoC4/CyLib.c **** *
2131:Generated_Source\PSoC4/CyLib.c **** * Summary:
2132:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All the
2133:Generated_Source\PSoC4/CyLib.c **** *  bits in the RES_CAUSE register assert when the corresponding reset cause
2134:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the hardware
2135:Generated_Source\PSoC4/CyLib.c **** *  only during XRES, POR, or a detected brown-out.
2136:Generated_Source\PSoC4/CyLib.c **** *
2137:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2138:Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
2139:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2140:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - A protection violation occurred that requires a RESET
2141:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2142:Generated_Source\PSoC4/CyLib.c **** *
2143:Generated_Source\PSoC4/CyLib.c **** * Return:
2144:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2145:Generated_Source\PSoC4/CyLib.c **** *
2146:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2147:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2148:Generated_Source\PSoC4/CyLib.c **** {
 2384              		.loc 1 2148 0
 2385              		.cfi_startproc
 2386              		@ args = 0, pretend = 0, frame = 16
 2387              		@ frame_needed = 1, uses_anonymous_args = 0
 2388 0000 80B5     		push	{r7, lr}
 2389              		.cfi_def_cfa_offset 8
 2390              		.cfi_offset 7, -8
 2391              		.cfi_offset 14, -4
 2392 0002 84B0     		sub	sp, sp, #16
 2393              		.cfi_def_cfa_offset 24
 2394 0004 00AF     		add	r7, sp, #0
 2395              		.cfi_def_cfa_register 7
 2396 0006 7860     		str	r0, [r7, #4]
2149:Generated_Source\PSoC4/CyLib.c ****     uint32 status;
2150:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 81


2151:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 2397              		.loc 1 2151 0
 2398 0008 7B68     		ldr	r3, [r7, #4]
 2399 000a 1922     		movs	r2, #25
 2400 000c 1340     		ands	r3, r2
 2401 000e 7B60     		str	r3, [r7, #4]
2152:Generated_Source\PSoC4/CyLib.c ****     status = CY_SYS_RES_CAUSE_REG &
 2402              		.loc 1 2152 0
 2403 0010 064B     		ldr	r3, .L189
 2404 0012 1B68     		ldr	r3, [r3]
 2405 0014 1922     		movs	r2, #25
 2406 0016 1340     		ands	r3, r2
 2407 0018 FB60     		str	r3, [r7, #12]
2153:Generated_Source\PSoC4/CyLib.c ****              (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2154:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 2408              		.loc 1 2154 0
 2409 001a 044B     		ldr	r3, .L189
 2410 001c 7A68     		ldr	r2, [r7, #4]
 2411 001e 1A60     		str	r2, [r3]
2155:Generated_Source\PSoC4/CyLib.c **** 
2156:Generated_Source\PSoC4/CyLib.c ****     return (status);
 2412              		.loc 1 2156 0
 2413 0020 FB68     		ldr	r3, [r7, #12]
2157:Generated_Source\PSoC4/CyLib.c **** }
 2414              		.loc 1 2157 0
 2415 0022 1800     		movs	r0, r3
 2416 0024 BD46     		mov	sp, r7
 2417 0026 04B0     		add	sp, sp, #16
 2418              		@ sp needed
 2419 0028 80BD     		pop	{r7, pc}
 2420              	.L190:
 2421 002a C046     		.align	2
 2422              	.L189:
 2423 002c 00030B40 		.word	1074463488
 2424              		.cfi_endproc
 2425              	.LFE34:
 2426              		.size	CySysGetResetReason, .-CySysGetResetReason
 2427              		.section	.text.CyDisableInts,"ax",%progbits
 2428              		.align	2
 2429              		.global	CyDisableInts
 2430              		.code	16
 2431              		.thumb_func
 2432              		.type	CyDisableInts, %function
 2433              	CyDisableInts:
 2434              	.LFB35:
2158:Generated_Source\PSoC4/CyLib.c **** 
2159:Generated_Source\PSoC4/CyLib.c **** 
2160:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2161:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2162:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2163:Generated_Source\PSoC4/CyLib.c **** *
2164:Generated_Source\PSoC4/CyLib.c **** * Summary:
2165:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2166:Generated_Source\PSoC4/CyLib.c **** *
2167:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2168:Generated_Source\PSoC4/CyLib.c **** *  None
2169:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 82


2170:Generated_Source\PSoC4/CyLib.c **** * Return:
2171:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2172:Generated_Source\PSoC4/CyLib.c **** *
2173:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2174:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2175:Generated_Source\PSoC4/CyLib.c **** {
 2435              		.loc 1 2175 0
 2436              		.cfi_startproc
 2437              		@ args = 0, pretend = 0, frame = 8
 2438              		@ frame_needed = 1, uses_anonymous_args = 0
 2439 0000 80B5     		push	{r7, lr}
 2440              		.cfi_def_cfa_offset 8
 2441              		.cfi_offset 7, -8
 2442              		.cfi_offset 14, -4
 2443 0002 82B0     		sub	sp, sp, #8
 2444              		.cfi_def_cfa_offset 16
 2445 0004 00AF     		add	r7, sp, #0
 2446              		.cfi_def_cfa_register 7
2176:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2177:Generated_Source\PSoC4/CyLib.c **** 
2178:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2179:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 2447              		.loc 1 2179 0
 2448 0006 064B     		ldr	r3, .L193
 2449 0008 1B68     		ldr	r3, [r3]
 2450 000a 7B60     		str	r3, [r7, #4]
2180:Generated_Source\PSoC4/CyLib.c **** 
2181:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2182:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 2451              		.loc 1 2182 0
 2452 000c 044B     		ldr	r3, .L193
 2453 000e 0122     		movs	r2, #1
 2454 0010 5242     		rsbs	r2, r2, #0
 2455 0012 1A60     		str	r2, [r3]
2183:Generated_Source\PSoC4/CyLib.c **** 
2184:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 2456              		.loc 1 2184 0
 2457 0014 7B68     		ldr	r3, [r7, #4]
2185:Generated_Source\PSoC4/CyLib.c **** }
 2458              		.loc 1 2185 0
 2459 0016 1800     		movs	r0, r3
 2460 0018 BD46     		mov	sp, r7
 2461 001a 02B0     		add	sp, sp, #8
 2462              		@ sp needed
 2463 001c 80BD     		pop	{r7, pc}
 2464              	.L194:
 2465 001e C046     		.align	2
 2466              	.L193:
 2467 0020 80E100E0 		.word	-536813184
 2468              		.cfi_endproc
 2469              	.LFE35:
 2470              		.size	CyDisableInts, .-CyDisableInts
 2471              		.section	.text.CyEnableInts,"ax",%progbits
 2472              		.align	2
 2473              		.global	CyEnableInts
 2474              		.code	16
 2475              		.thumb_func
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 83


 2476              		.type	CyEnableInts, %function
 2477              	CyEnableInts:
 2478              	.LFB36:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** 
2188:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2189:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2190:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** *
2192:Generated_Source\PSoC4/CyLib.c **** * Summary:
2193:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2194:Generated_Source\PSoC4/CyLib.c **** *
2195:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2196:Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
2197:Generated_Source\PSoC4/CyLib.c **** *
2198:Generated_Source\PSoC4/CyLib.c **** * Return:
2199:Generated_Source\PSoC4/CyLib.c **** *  None
2200:Generated_Source\PSoC4/CyLib.c **** *
2201:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2202:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2203:Generated_Source\PSoC4/CyLib.c **** {
 2479              		.loc 1 2203 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 8
 2482              		@ frame_needed = 1, uses_anonymous_args = 0
 2483 0000 80B5     		push	{r7, lr}
 2484              		.cfi_def_cfa_offset 8
 2485              		.cfi_offset 7, -8
 2486              		.cfi_offset 14, -4
 2487 0002 82B0     		sub	sp, sp, #8
 2488              		.cfi_def_cfa_offset 16
 2489 0004 00AF     		add	r7, sp, #0
 2490              		.cfi_def_cfa_register 7
 2491 0006 7860     		str	r0, [r7, #4]
2204:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 2492              		.loc 1 2204 0
 2493 0008 034B     		ldr	r3, .L196
 2494 000a 7A68     		ldr	r2, [r7, #4]
 2495 000c 1A60     		str	r2, [r3]
2205:Generated_Source\PSoC4/CyLib.c **** }
 2496              		.loc 1 2205 0
 2497 000e C046     		nop
 2498 0010 BD46     		mov	sp, r7
 2499 0012 02B0     		add	sp, sp, #8
 2500              		@ sp needed
 2501 0014 80BD     		pop	{r7, pc}
 2502              	.L197:
 2503 0016 C046     		.align	2
 2504              	.L196:
 2505 0018 00E100E0 		.word	-536813312
 2506              		.cfi_endproc
 2507              	.LFE36:
 2508              		.size	CyEnableInts, .-CyEnableInts
 2509              		.section	.text.CyIntSetSysVector,"ax",%progbits
 2510              		.align	2
 2511              		.global	CyIntSetSysVector
 2512              		.code	16
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 84


 2513              		.thumb_func
 2514              		.type	CyIntSetSysVector, %function
 2515              	CyIntSetSysVector:
 2516              	.LFB37:
2206:Generated_Source\PSoC4/CyLib.c **** 
2207:Generated_Source\PSoC4/CyLib.c **** 
2208:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2209:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2210:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2211:Generated_Source\PSoC4/CyLib.c **** *
2212:Generated_Source\PSoC4/CyLib.c **** * Summary:
2213:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2214:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2215:Generated_Source\PSoC4/CyLib.c **** *
2216:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2217:Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2218:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2219:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2220:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2221:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2222:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2223:Generated_Source\PSoC4/CyLib.c **** *
2224:Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
2225:Generated_Source\PSoC4/CyLib.c **** *
2226:Generated_Source\PSoC4/CyLib.c **** * Return:
2227:Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
2228:Generated_Source\PSoC4/CyLib.c **** *
2229:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2230:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2231:Generated_Source\PSoC4/CyLib.c **** {
 2517              		.loc 1 2231 0
 2518              		.cfi_startproc
 2519              		@ args = 0, pretend = 0, frame = 16
 2520              		@ frame_needed = 1, uses_anonymous_args = 0
 2521 0000 80B5     		push	{r7, lr}
 2522              		.cfi_def_cfa_offset 8
 2523              		.cfi_offset 7, -8
 2524              		.cfi_offset 14, -4
 2525 0002 84B0     		sub	sp, sp, #16
 2526              		.cfi_def_cfa_offset 24
 2527 0004 00AF     		add	r7, sp, #0
 2528              		.cfi_def_cfa_register 7
 2529 0006 0200     		movs	r2, r0
 2530 0008 3960     		str	r1, [r7]
 2531 000a FB1D     		adds	r3, r7, #7
 2532 000c 1A70     		strb	r2, [r3]
2232:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2233:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 2533              		.loc 1 2233 0
 2534 000e 8023     		movs	r3, #128
 2535 0010 9B05     		lsls	r3, r3, #22
 2536 0012 FB60     		str	r3, [r7, #12]
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 2537              		.loc 1 2235 0
 2538 0014 FB1D     		adds	r3, r7, #7
 2539 0016 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 85


 2540 0018 0F2B     		cmp	r3, #15
 2541 001a 02D9     		bls	.L199
 2542              		.loc 1 2235 0 is_stmt 0 discriminator 1
 2543 001c 0020     		movs	r0, #0
 2544 001e FFF7FEFF 		bl	CyHalt
 2545              	.L199:
2236:Generated_Source\PSoC4/CyLib.c **** 
2237:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2238:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 2546              		.loc 1 2238 0 is_stmt 1
 2547 0022 FB1D     		adds	r3, r7, #7
 2548 0024 1B78     		ldrb	r3, [r3]
 2549 0026 9B00     		lsls	r3, r3, #2
 2550 0028 FA68     		ldr	r2, [r7, #12]
 2551 002a D318     		adds	r3, r2, r3
 2552 002c 1B68     		ldr	r3, [r3]
 2553 002e BB60     		str	r3, [r7, #8]
2239:Generated_Source\PSoC4/CyLib.c **** 
2240:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2241:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 2554              		.loc 1 2241 0
 2555 0030 FB1D     		adds	r3, r7, #7
 2556 0032 1B78     		ldrb	r3, [r3]
 2557 0034 9B00     		lsls	r3, r3, #2
 2558 0036 FA68     		ldr	r2, [r7, #12]
 2559 0038 D318     		adds	r3, r2, r3
 2560 003a 3A68     		ldr	r2, [r7]
 2561 003c 1A60     		str	r2, [r3]
2242:Generated_Source\PSoC4/CyLib.c **** 
2243:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 2562              		.loc 1 2243 0
 2563 003e BB68     		ldr	r3, [r7, #8]
2244:Generated_Source\PSoC4/CyLib.c **** }
 2564              		.loc 1 2244 0
 2565 0040 1800     		movs	r0, r3
 2566 0042 BD46     		mov	sp, r7
 2567 0044 04B0     		add	sp, sp, #16
 2568              		@ sp needed
 2569 0046 80BD     		pop	{r7, pc}
 2570              		.cfi_endproc
 2571              	.LFE37:
 2572              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 2573              		.section	.text.CyIntGetSysVector,"ax",%progbits
 2574              		.align	2
 2575              		.global	CyIntGetSysVector
 2576              		.code	16
 2577              		.thumb_func
 2578              		.type	CyIntGetSysVector, %function
 2579              	CyIntGetSysVector:
 2580              	.LFB38:
2245:Generated_Source\PSoC4/CyLib.c **** 
2246:Generated_Source\PSoC4/CyLib.c **** 
2247:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2248:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2249:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** * Summary:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 86


2252:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2253:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2254:Generated_Source\PSoC4/CyLib.c **** *
2255:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2256:Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2257:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2258:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2259:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2260:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2261:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2262:Generated_Source\PSoC4/CyLib.c **** *
2263:Generated_Source\PSoC4/CyLib.c **** * Return:
2264:Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
2265:Generated_Source\PSoC4/CyLib.c **** *
2266:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2268:Generated_Source\PSoC4/CyLib.c **** {
 2581              		.loc 1 2268 0
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 16
 2584              		@ frame_needed = 1, uses_anonymous_args = 0
 2585 0000 80B5     		push	{r7, lr}
 2586              		.cfi_def_cfa_offset 8
 2587              		.cfi_offset 7, -8
 2588              		.cfi_offset 14, -4
 2589 0002 84B0     		sub	sp, sp, #16
 2590              		.cfi_def_cfa_offset 24
 2591 0004 00AF     		add	r7, sp, #0
 2592              		.cfi_def_cfa_register 7
 2593 0006 0200     		movs	r2, r0
 2594 0008 FB1D     		adds	r3, r7, #7
 2595 000a 1A70     		strb	r2, [r3]
2269:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 2596              		.loc 1 2269 0
 2597 000c 8023     		movs	r3, #128
 2598 000e 9B05     		lsls	r3, r3, #22
 2599 0010 FB60     		str	r3, [r7, #12]
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 2600              		.loc 1 2271 0
 2601 0012 FB1D     		adds	r3, r7, #7
 2602 0014 1B78     		ldrb	r3, [r3]
 2603 0016 0F2B     		cmp	r3, #15
 2604 0018 02D9     		bls	.L202
 2605              		.loc 1 2271 0 is_stmt 0 discriminator 1
 2606 001a 0020     		movs	r0, #0
 2607 001c FFF7FEFF 		bl	CyHalt
 2608              	.L202:
2272:Generated_Source\PSoC4/CyLib.c **** 
2273:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 2609              		.loc 1 2273 0 is_stmt 1
 2610 0020 FB1D     		adds	r3, r7, #7
 2611 0022 1B78     		ldrb	r3, [r3]
 2612 0024 9B00     		lsls	r3, r3, #2
 2613 0026 FA68     		ldr	r2, [r7, #12]
 2614 0028 D318     		adds	r3, r2, r3
 2615 002a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 87


2274:Generated_Source\PSoC4/CyLib.c **** }
 2616              		.loc 1 2274 0
 2617 002c 1800     		movs	r0, r3
 2618 002e BD46     		mov	sp, r7
 2619 0030 04B0     		add	sp, sp, #16
 2620              		@ sp needed
 2621 0032 80BD     		pop	{r7, pc}
 2622              		.cfi_endproc
 2623              	.LFE38:
 2624              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 2625              		.section	.text.CyIntSetVector,"ax",%progbits
 2626              		.align	2
 2627              		.global	CyIntSetVector
 2628              		.code	16
 2629              		.thumb_func
 2630              		.type	CyIntSetVector, %function
 2631              	CyIntSetVector:
 2632              	.LFB39:
2275:Generated_Source\PSoC4/CyLib.c **** 
2276:Generated_Source\PSoC4/CyLib.c **** 
2277:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2278:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2279:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2280:Generated_Source\PSoC4/CyLib.c **** *
2281:Generated_Source\PSoC4/CyLib.c **** * Summary:
2282:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2283:Generated_Source\PSoC4/CyLib.c **** *
2284:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2285:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2286:Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
2287:Generated_Source\PSoC4/CyLib.c **** *
2288:Generated_Source\PSoC4/CyLib.c **** * Return:
2289:Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
2290:Generated_Source\PSoC4/CyLib.c **** *
2291:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2292:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2293:Generated_Source\PSoC4/CyLib.c **** {
 2633              		.loc 1 2293 0
 2634              		.cfi_startproc
 2635              		@ args = 0, pretend = 0, frame = 16
 2636              		@ frame_needed = 1, uses_anonymous_args = 0
 2637 0000 80B5     		push	{r7, lr}
 2638              		.cfi_def_cfa_offset 8
 2639              		.cfi_offset 7, -8
 2640              		.cfi_offset 14, -4
 2641 0002 84B0     		sub	sp, sp, #16
 2642              		.cfi_def_cfa_offset 24
 2643 0004 00AF     		add	r7, sp, #0
 2644              		.cfi_def_cfa_register 7
 2645 0006 0200     		movs	r2, r0
 2646 0008 3960     		str	r1, [r7]
 2647 000a FB1D     		adds	r3, r7, #7
 2648 000c 1A70     		strb	r2, [r3]
2294:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2295:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 2649              		.loc 1 2295 0
 2650 000e 8023     		movs	r3, #128
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 88


 2651 0010 9B05     		lsls	r3, r3, #22
 2652 0012 FB60     		str	r3, [r7, #12]
2296:Generated_Source\PSoC4/CyLib.c **** 
2297:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 2653              		.loc 1 2297 0
 2654 0014 FB1D     		adds	r3, r7, #7
 2655 0016 1B78     		ldrb	r3, [r3]
 2656 0018 1F2B     		cmp	r3, #31
 2657 001a 02D9     		bls	.L205
 2658              		.loc 1 2297 0 is_stmt 0 discriminator 1
 2659 001c 0020     		movs	r0, #0
 2660 001e FFF7FEFF 		bl	CyHalt
 2661              	.L205:
2298:Generated_Source\PSoC4/CyLib.c **** 
2299:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2300:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 2662              		.loc 1 2300 0 is_stmt 1
 2663 0022 FB1D     		adds	r3, r7, #7
 2664 0024 1B78     		ldrb	r3, [r3]
 2665 0026 1033     		adds	r3, r3, #16
 2666 0028 9B00     		lsls	r3, r3, #2
 2667 002a FA68     		ldr	r2, [r7, #12]
 2668 002c D318     		adds	r3, r2, r3
 2669 002e 1B68     		ldr	r3, [r3]
 2670 0030 BB60     		str	r3, [r7, #8]
2301:Generated_Source\PSoC4/CyLib.c **** 
2302:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2303:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 2671              		.loc 1 2303 0
 2672 0032 FB1D     		adds	r3, r7, #7
 2673 0034 1B78     		ldrb	r3, [r3]
 2674 0036 1033     		adds	r3, r3, #16
 2675 0038 9B00     		lsls	r3, r3, #2
 2676 003a FA68     		ldr	r2, [r7, #12]
 2677 003c D318     		adds	r3, r2, r3
 2678 003e 3A68     		ldr	r2, [r7]
 2679 0040 1A60     		str	r2, [r3]
2304:Generated_Source\PSoC4/CyLib.c **** 
2305:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 2680              		.loc 1 2305 0
 2681 0042 BB68     		ldr	r3, [r7, #8]
2306:Generated_Source\PSoC4/CyLib.c **** }
 2682              		.loc 1 2306 0
 2683 0044 1800     		movs	r0, r3
 2684 0046 BD46     		mov	sp, r7
 2685 0048 04B0     		add	sp, sp, #16
 2686              		@ sp needed
 2687 004a 80BD     		pop	{r7, pc}
 2688              		.cfi_endproc
 2689              	.LFE39:
 2690              		.size	CyIntSetVector, .-CyIntSetVector
 2691              		.section	.text.CyIntGetVector,"ax",%progbits
 2692              		.align	2
 2693              		.global	CyIntGetVector
 2694              		.code	16
 2695              		.thumb_func
 2696              		.type	CyIntGetVector, %function
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 89


 2697              	CyIntGetVector:
 2698              	.LFB40:
2307:Generated_Source\PSoC4/CyLib.c **** 
2308:Generated_Source\PSoC4/CyLib.c **** 
2309:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2310:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2311:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2312:Generated_Source\PSoC4/CyLib.c **** *
2313:Generated_Source\PSoC4/CyLib.c **** * Summary:
2314:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2315:Generated_Source\PSoC4/CyLib.c **** *
2316:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2317:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2318:Generated_Source\PSoC4/CyLib.c **** *
2319:Generated_Source\PSoC4/CyLib.c **** * Return:
2320:Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
2321:Generated_Source\PSoC4/CyLib.c **** *
2322:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2323:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2324:Generated_Source\PSoC4/CyLib.c **** {
 2699              		.loc 1 2324 0
 2700              		.cfi_startproc
 2701              		@ args = 0, pretend = 0, frame = 16
 2702              		@ frame_needed = 1, uses_anonymous_args = 0
 2703 0000 80B5     		push	{r7, lr}
 2704              		.cfi_def_cfa_offset 8
 2705              		.cfi_offset 7, -8
 2706              		.cfi_offset 14, -4
 2707 0002 84B0     		sub	sp, sp, #16
 2708              		.cfi_def_cfa_offset 24
 2709 0004 00AF     		add	r7, sp, #0
 2710              		.cfi_def_cfa_register 7
 2711 0006 0200     		movs	r2, r0
 2712 0008 FB1D     		adds	r3, r7, #7
 2713 000a 1A70     		strb	r2, [r3]
2325:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 2714              		.loc 1 2325 0
 2715 000c 8023     		movs	r3, #128
 2716 000e 9B05     		lsls	r3, r3, #22
 2717 0010 FB60     		str	r3, [r7, #12]
2326:Generated_Source\PSoC4/CyLib.c **** 
2327:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 2718              		.loc 1 2327 0
 2719 0012 FB1D     		adds	r3, r7, #7
 2720 0014 1B78     		ldrb	r3, [r3]
 2721 0016 1F2B     		cmp	r3, #31
 2722 0018 02D9     		bls	.L208
 2723              		.loc 1 2327 0 is_stmt 0 discriminator 1
 2724 001a 0020     		movs	r0, #0
 2725 001c FFF7FEFF 		bl	CyHalt
 2726              	.L208:
2328:Generated_Source\PSoC4/CyLib.c **** 
2329:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 2727              		.loc 1 2329 0 is_stmt 1
 2728 0020 FB1D     		adds	r3, r7, #7
 2729 0022 1B78     		ldrb	r3, [r3]
 2730 0024 1033     		adds	r3, r3, #16
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 90


 2731 0026 9B00     		lsls	r3, r3, #2
 2732 0028 FA68     		ldr	r2, [r7, #12]
 2733 002a D318     		adds	r3, r2, r3
 2734 002c 1B68     		ldr	r3, [r3]
2330:Generated_Source\PSoC4/CyLib.c **** }
 2735              		.loc 1 2330 0
 2736 002e 1800     		movs	r0, r3
 2737 0030 BD46     		mov	sp, r7
 2738 0032 04B0     		add	sp, sp, #16
 2739              		@ sp needed
 2740 0034 80BD     		pop	{r7, pc}
 2741              		.cfi_endproc
 2742              	.LFE40:
 2743              		.size	CyIntGetVector, .-CyIntGetVector
 2744 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 2745              		.align	2
 2746              		.global	CyIntSetPriority
 2747              		.code	16
 2748              		.thumb_func
 2749              		.type	CyIntSetPriority, %function
 2750              	CyIntSetPriority:
 2751              	.LFB41:
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2333:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2334:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2335:Generated_Source\PSoC4/CyLib.c **** *
2336:Generated_Source\PSoC4/CyLib.c **** * Summary:
2337:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2338:Generated_Source\PSoC4/CyLib.c **** *
2339:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2340:Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2341:Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2342:Generated_Source\PSoC4/CyLib.c **** *
2343:Generated_Source\PSoC4/CyLib.c **** * Return:
2344:Generated_Source\PSoC4/CyLib.c **** *  None
2345:Generated_Source\PSoC4/CyLib.c **** *
2346:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2347:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2348:Generated_Source\PSoC4/CyLib.c **** {
 2752              		.loc 1 2348 0
 2753              		.cfi_startproc
 2754              		@ args = 0, pretend = 0, frame = 24
 2755              		@ frame_needed = 1, uses_anonymous_args = 0
 2756 0000 90B5     		push	{r4, r7, lr}
 2757              		.cfi_def_cfa_offset 12
 2758              		.cfi_offset 4, -12
 2759              		.cfi_offset 7, -8
 2760              		.cfi_offset 14, -4
 2761 0002 87B0     		sub	sp, sp, #28
 2762              		.cfi_def_cfa_offset 40
 2763 0004 00AF     		add	r7, sp, #0
 2764              		.cfi_def_cfa_register 7
 2765 0006 0200     		movs	r2, r0
 2766 0008 FB1D     		adds	r3, r7, #7
 2767 000a 1A70     		strb	r2, [r3]
 2768 000c BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 91


 2769 000e 0A1C     		adds	r2, r1, #0
 2770 0010 1A70     		strb	r2, [r3]
2349:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2350:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2351:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 2771              		.loc 1 2353 0
 2772 0012 BB1D     		adds	r3, r7, #6
 2773 0014 1B78     		ldrb	r3, [r3]
 2774 0016 032B     		cmp	r3, #3
 2775 0018 02D9     		bls	.L211
 2776              		.loc 1 2353 0 is_stmt 0 discriminator 1
 2777 001a 0020     		movs	r0, #0
 2778 001c FFF7FEFF 		bl	CyHalt
 2779              	.L211:
2354:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 2780              		.loc 1 2354 0 is_stmt 1
 2781 0020 FB1D     		adds	r3, r7, #7
 2782 0022 1B78     		ldrb	r3, [r3]
 2783 0024 1F2B     		cmp	r3, #31
 2784 0026 02D9     		bls	.L212
 2785              		.loc 1 2354 0 is_stmt 0 discriminator 1
 2786 0028 0020     		movs	r0, #0
 2787 002a FFF7FEFF 		bl	CyHalt
 2788              	.L212:
2355:Generated_Source\PSoC4/CyLib.c **** 
2356:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 2789              		.loc 1 2356 0 is_stmt 1
 2790 002e FB1D     		adds	r3, r7, #7
 2791 0030 1B78     		ldrb	r3, [r3]
 2792 0032 0322     		movs	r2, #3
 2793 0034 1340     		ands	r3, r2
 2794 0036 DB00     		lsls	r3, r3, #3
 2795 0038 0633     		adds	r3, r3, #6
 2796 003a 7B61     		str	r3, [r7, #20]
2357:Generated_Source\PSoC4/CyLib.c **** 
2358:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 2797              		.loc 1 2358 0
 2798 003c 1323     		movs	r3, #19
 2799 003e FC18     		adds	r4, r7, r3
 2800 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 2801 0044 0300     		movs	r3, r0
 2802 0046 2370     		strb	r3, [r4]
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 2803              		.loc 1 2360 0
 2804 0048 FB1D     		adds	r3, r7, #7
 2805 004a 1B78     		ldrb	r3, [r3]
 2806 004c 9B08     		lsrs	r3, r3, #2
 2807 004e DBB2     		uxtb	r3, r3
 2808 0050 9B00     		lsls	r3, r3, #2
 2809 0052 144A     		ldr	r2, .L213
 2810 0054 9446     		mov	ip, r2
 2811 0056 6344     		add	r3, r3, ip
 2812 0058 1B68     		ldr	r3, [r3]
 2813 005a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 92


2361:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 2814              		.loc 1 2361 0
 2815 005c 0322     		movs	r2, #3
 2816 005e 7B69     		ldr	r3, [r7, #20]
 2817 0060 9A40     		lsls	r2, r2, r3
 2818 0062 1300     		movs	r3, r2
 2819 0064 DA43     		mvns	r2, r3
 2820 0066 FB68     		ldr	r3, [r7, #12]
 2821 0068 1340     		ands	r3, r2
 2822 006a FB60     		str	r3, [r7, #12]
2362:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 2823              		.loc 1 2362 0
 2824 006c BB1D     		adds	r3, r7, #6
 2825 006e 1A78     		ldrb	r2, [r3]
 2826 0070 7B69     		ldr	r3, [r7, #20]
 2827 0072 9A40     		lsls	r2, r2, r3
 2828 0074 1300     		movs	r3, r2
 2829 0076 FA68     		ldr	r2, [r7, #12]
 2830 0078 1343     		orrs	r3, r2
 2831 007a FB60     		str	r3, [r7, #12]
2363:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 2832              		.loc 1 2363 0
 2833 007c FB1D     		adds	r3, r7, #7
 2834 007e 1B78     		ldrb	r3, [r3]
 2835 0080 9B08     		lsrs	r3, r3, #2
 2836 0082 DBB2     		uxtb	r3, r3
 2837 0084 9B00     		lsls	r3, r3, #2
 2838 0086 074A     		ldr	r2, .L213
 2839 0088 9446     		mov	ip, r2
 2840 008a 6344     		add	r3, r3, ip
 2841 008c FA68     		ldr	r2, [r7, #12]
 2842 008e 1A60     		str	r2, [r3]
2364:Generated_Source\PSoC4/CyLib.c **** 
2365:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 2843              		.loc 1 2365 0
 2844 0090 1323     		movs	r3, #19
 2845 0092 FB18     		adds	r3, r7, r3
 2846 0094 1B78     		ldrb	r3, [r3]
 2847 0096 1800     		movs	r0, r3
 2848 0098 FFF7FEFF 		bl	CyExitCriticalSection
2366:Generated_Source\PSoC4/CyLib.c **** }
 2849              		.loc 1 2366 0
 2850 009c C046     		nop
 2851 009e BD46     		mov	sp, r7
 2852 00a0 07B0     		add	sp, sp, #28
 2853              		@ sp needed
 2854 00a2 90BD     		pop	{r4, r7, pc}
 2855              	.L214:
 2856              		.align	2
 2857              	.L213:
 2858 00a4 00E400E0 		.word	-536812544
 2859              		.cfi_endproc
 2860              	.LFE41:
 2861              		.size	CyIntSetPriority, .-CyIntSetPriority
 2862              		.section	.text.CyIntGetPriority,"ax",%progbits
 2863              		.align	2
 2864              		.global	CyIntGetPriority
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 93


 2865              		.code	16
 2866              		.thumb_func
 2867              		.type	CyIntGetPriority, %function
 2868              	CyIntGetPriority:
 2869              	.LFB42:
2367:Generated_Source\PSoC4/CyLib.c **** 
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2370:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2371:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** * Summary:
2374:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2377:Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2378:Generated_Source\PSoC4/CyLib.c **** *
2379:Generated_Source\PSoC4/CyLib.c **** * Return:
2380:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2381:Generated_Source\PSoC4/CyLib.c **** *
2382:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2383:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2384:Generated_Source\PSoC4/CyLib.c **** {
 2870              		.loc 1 2384 0
 2871              		.cfi_startproc
 2872              		@ args = 0, pretend = 0, frame = 16
 2873              		@ frame_needed = 1, uses_anonymous_args = 0
 2874 0000 80B5     		push	{r7, lr}
 2875              		.cfi_def_cfa_offset 8
 2876              		.cfi_offset 7, -8
 2877              		.cfi_offset 14, -4
 2878 0002 84B0     		sub	sp, sp, #16
 2879              		.cfi_def_cfa_offset 24
 2880 0004 00AF     		add	r7, sp, #0
 2881              		.cfi_def_cfa_register 7
 2882 0006 0200     		movs	r2, r0
 2883 0008 FB1D     		adds	r3, r7, #7
 2884 000a 1A70     		strb	r2, [r3]
2385:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2386:Generated_Source\PSoC4/CyLib.c **** 
2387:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 2885              		.loc 1 2387 0
 2886 000c FB1D     		adds	r3, r7, #7
 2887 000e 1B78     		ldrb	r3, [r3]
 2888 0010 1F2B     		cmp	r3, #31
 2889 0012 02D9     		bls	.L216
 2890              		.loc 1 2387 0 is_stmt 0 discriminator 1
 2891 0014 0020     		movs	r0, #0
 2892 0016 FFF7FEFF 		bl	CyHalt
 2893              	.L216:
2388:Generated_Source\PSoC4/CyLib.c **** 
2389:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 2894              		.loc 1 2389 0 is_stmt 1
 2895 001a FB1D     		adds	r3, r7, #7
 2896 001c 1B78     		ldrb	r3, [r3]
 2897 001e 9B08     		lsrs	r3, r3, #2
 2898 0020 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 94


 2899 0022 9B00     		lsls	r3, r3, #2
 2900 0024 0B4A     		ldr	r2, .L218
 2901 0026 9446     		mov	ip, r2
 2902 0028 6344     		add	r3, r3, ip
 2903 002a 1A68     		ldr	r2, [r3]
 2904 002c FB1D     		adds	r3, r7, #7
 2905 002e 1B78     		ldrb	r3, [r3]
 2906 0030 0321     		movs	r1, #3
 2907 0032 0B40     		ands	r3, r1
 2908 0034 DB00     		lsls	r3, r3, #3
 2909 0036 0633     		adds	r3, r3, #6
 2910 0038 DA40     		lsrs	r2, r2, r3
 2911 003a 0F23     		movs	r3, #15
 2912 003c FB18     		adds	r3, r7, r3
 2913 003e 1A70     		strb	r2, [r3]
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 2914              		.loc 1 2391 0
 2915 0040 0F23     		movs	r3, #15
 2916 0042 FB18     		adds	r3, r7, r3
 2917 0044 1B78     		ldrb	r3, [r3]
 2918 0046 0322     		movs	r2, #3
 2919 0048 1340     		ands	r3, r2
 2920 004a DBB2     		uxtb	r3, r3
2392:Generated_Source\PSoC4/CyLib.c **** }
 2921              		.loc 1 2392 0
 2922 004c 1800     		movs	r0, r3
 2923 004e BD46     		mov	sp, r7
 2924 0050 04B0     		add	sp, sp, #16
 2925              		@ sp needed
 2926 0052 80BD     		pop	{r7, pc}
 2927              	.L219:
 2928              		.align	2
 2929              	.L218:
 2930 0054 00E400E0 		.word	-536812544
 2931              		.cfi_endproc
 2932              	.LFE42:
 2933              		.size	CyIntGetPriority, .-CyIntGetPriority
 2934              		.section	.text.CyIntEnable,"ax",%progbits
 2935              		.align	2
 2936              		.global	CyIntEnable
 2937              		.code	16
 2938              		.thumb_func
 2939              		.type	CyIntEnable, %function
 2940              	CyIntEnable:
 2941              	.LFB43:
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2397:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2398:Generated_Source\PSoC4/CyLib.c **** *
2399:Generated_Source\PSoC4/CyLib.c **** * Summary:
2400:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2401:Generated_Source\PSoC4/CyLib.c **** *
2402:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2403:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 95


2404:Generated_Source\PSoC4/CyLib.c **** *
2405:Generated_Source\PSoC4/CyLib.c **** * Return:
2406:Generated_Source\PSoC4/CyLib.c **** *  None
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2409:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2410:Generated_Source\PSoC4/CyLib.c **** {
 2942              		.loc 1 2410 0
 2943              		.cfi_startproc
 2944              		@ args = 0, pretend = 0, frame = 8
 2945              		@ frame_needed = 1, uses_anonymous_args = 0
 2946 0000 80B5     		push	{r7, lr}
 2947              		.cfi_def_cfa_offset 8
 2948              		.cfi_offset 7, -8
 2949              		.cfi_offset 14, -4
 2950 0002 82B0     		sub	sp, sp, #8
 2951              		.cfi_def_cfa_offset 16
 2952 0004 00AF     		add	r7, sp, #0
 2953              		.cfi_def_cfa_register 7
 2954 0006 0200     		movs	r2, r0
 2955 0008 FB1D     		adds	r3, r7, #7
 2956 000a 1A70     		strb	r2, [r3]
2411:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 2957              		.loc 1 2411 0
 2958 000c 064B     		ldr	r3, .L221
 2959 000e FA1D     		adds	r2, r7, #7
 2960 0010 1278     		ldrb	r2, [r2]
 2961 0012 1F21     		movs	r1, #31
 2962 0014 0A40     		ands	r2, r1
 2963 0016 0121     		movs	r1, #1
 2964 0018 9140     		lsls	r1, r1, r2
 2965 001a 0A00     		movs	r2, r1
 2966 001c 1A60     		str	r2, [r3]
2412:Generated_Source\PSoC4/CyLib.c **** }
 2967              		.loc 1 2412 0
 2968 001e C046     		nop
 2969 0020 BD46     		mov	sp, r7
 2970 0022 02B0     		add	sp, sp, #8
 2971              		@ sp needed
 2972 0024 80BD     		pop	{r7, pc}
 2973              	.L222:
 2974 0026 C046     		.align	2
 2975              	.L221:
 2976 0028 00E100E0 		.word	-536813312
 2977              		.cfi_endproc
 2978              	.LFE43:
 2979              		.size	CyIntEnable, .-CyIntEnable
 2980              		.section	.text.CyIntGetState,"ax",%progbits
 2981              		.align	2
 2982              		.global	CyIntGetState
 2983              		.code	16
 2984              		.thumb_func
 2985              		.type	CyIntGetState, %function
 2986              	CyIntGetState:
 2987              	.LFB44:
2413:Generated_Source\PSoC4/CyLib.c **** 
2414:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 96


2415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2417:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2418:Generated_Source\PSoC4/CyLib.c **** *
2419:Generated_Source\PSoC4/CyLib.c **** * Summary:
2420:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2423:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2424:Generated_Source\PSoC4/CyLib.c **** *
2425:Generated_Source\PSoC4/CyLib.c **** * Return:
2426:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2427:Generated_Source\PSoC4/CyLib.c **** *
2428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2429:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2430:Generated_Source\PSoC4/CyLib.c **** {
 2988              		.loc 1 2430 0
 2989              		.cfi_startproc
 2990              		@ args = 0, pretend = 0, frame = 8
 2991              		@ frame_needed = 1, uses_anonymous_args = 0
 2992 0000 80B5     		push	{r7, lr}
 2993              		.cfi_def_cfa_offset 8
 2994              		.cfi_offset 7, -8
 2995              		.cfi_offset 14, -4
 2996 0002 82B0     		sub	sp, sp, #8
 2997              		.cfi_def_cfa_offset 16
 2998 0004 00AF     		add	r7, sp, #0
 2999              		.cfi_def_cfa_register 7
 3000 0006 0200     		movs	r2, r0
 3001 0008 FB1D     		adds	r3, r7, #7
 3002 000a 1A70     		strb	r2, [r3]
2431:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2432:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 3003              		.loc 1 2432 0
 3004 000c 074B     		ldr	r3, .L225
 3005 000e 1A68     		ldr	r2, [r3]
 3006 0010 FB1D     		adds	r3, r7, #7
 3007 0012 1B78     		ldrb	r3, [r3]
 3008 0014 1F21     		movs	r1, #31
 3009 0016 0B40     		ands	r3, r1
 3010 0018 DA40     		lsrs	r2, r2, r3
 3011 001a 1300     		movs	r3, r2
 3012 001c DBB2     		uxtb	r3, r3
 3013 001e 0122     		movs	r2, #1
 3014 0020 1340     		ands	r3, r2
 3015 0022 DBB2     		uxtb	r3, r3
2433:Generated_Source\PSoC4/CyLib.c **** }
 3016              		.loc 1 2433 0
 3017 0024 1800     		movs	r0, r3
 3018 0026 BD46     		mov	sp, r7
 3019 0028 02B0     		add	sp, sp, #8
 3020              		@ sp needed
 3021 002a 80BD     		pop	{r7, pc}
 3022              	.L226:
 3023              		.align	2
 3024              	.L225:
 3025 002c 00E100E0 		.word	-536813312
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 97


 3026              		.cfi_endproc
 3027              	.LFE44:
 3028              		.size	CyIntGetState, .-CyIntGetState
 3029              		.section	.text.CyIntDisable,"ax",%progbits
 3030              		.align	2
 3031              		.global	CyIntDisable
 3032              		.code	16
 3033              		.thumb_func
 3034              		.type	CyIntDisable, %function
 3035              	CyIntDisable:
 3036              	.LFB45:
2434:Generated_Source\PSoC4/CyLib.c **** 
2435:Generated_Source\PSoC4/CyLib.c **** 
2436:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2437:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2438:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2439:Generated_Source\PSoC4/CyLib.c **** *
2440:Generated_Source\PSoC4/CyLib.c **** * Summary:
2441:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2442:Generated_Source\PSoC4/CyLib.c **** *
2443:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2444:Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
2445:Generated_Source\PSoC4/CyLib.c **** *
2446:Generated_Source\PSoC4/CyLib.c **** * Return:
2447:Generated_Source\PSoC4/CyLib.c **** *  None
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2450:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2451:Generated_Source\PSoC4/CyLib.c **** {
 3037              		.loc 1 2451 0
 3038              		.cfi_startproc
 3039              		@ args = 0, pretend = 0, frame = 8
 3040              		@ frame_needed = 1, uses_anonymous_args = 0
 3041 0000 80B5     		push	{r7, lr}
 3042              		.cfi_def_cfa_offset 8
 3043              		.cfi_offset 7, -8
 3044              		.cfi_offset 14, -4
 3045 0002 82B0     		sub	sp, sp, #8
 3046              		.cfi_def_cfa_offset 16
 3047 0004 00AF     		add	r7, sp, #0
 3048              		.cfi_def_cfa_register 7
 3049 0006 0200     		movs	r2, r0
 3050 0008 FB1D     		adds	r3, r7, #7
 3051 000a 1A70     		strb	r2, [r3]
2452:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 3052              		.loc 1 2452 0
 3053 000c 064B     		ldr	r3, .L228
 3054 000e FA1D     		adds	r2, r7, #7
 3055 0010 1278     		ldrb	r2, [r2]
 3056 0012 1F21     		movs	r1, #31
 3057 0014 0A40     		ands	r2, r1
 3058 0016 0121     		movs	r1, #1
 3059 0018 9140     		lsls	r1, r1, r2
 3060 001a 0A00     		movs	r2, r1
 3061 001c 1A60     		str	r2, [r3]
2453:Generated_Source\PSoC4/CyLib.c **** }
 3062              		.loc 1 2453 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 98


 3063 001e C046     		nop
 3064 0020 BD46     		mov	sp, r7
 3065 0022 02B0     		add	sp, sp, #8
 3066              		@ sp needed
 3067 0024 80BD     		pop	{r7, pc}
 3068              	.L229:
 3069 0026 C046     		.align	2
 3070              	.L228:
 3071 0028 80E100E0 		.word	-536813184
 3072              		.cfi_endproc
 3073              	.LFE45:
 3074              		.size	CyIntDisable, .-CyIntDisable
 3075              		.section	.text.CyIntSetPending,"ax",%progbits
 3076              		.align	2
 3077              		.global	CyIntSetPending
 3078              		.code	16
 3079              		.thumb_func
 3080              		.type	CyIntSetPending, %function
 3081              	CyIntSetPending:
 3082              	.LFB46:
2454:Generated_Source\PSoC4/CyLib.c **** 
2455:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2456:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2457:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2458:Generated_Source\PSoC4/CyLib.c **** *
2459:Generated_Source\PSoC4/CyLib.c **** * Summary:
2460:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2461:Generated_Source\PSoC4/CyLib.c **** *
2462:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2463:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2464:Generated_Source\PSoC4/CyLib.c **** *
2465:Generated_Source\PSoC4/CyLib.c **** * Return:
2466:Generated_Source\PSoC4/CyLib.c **** *  None
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2469:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2470:Generated_Source\PSoC4/CyLib.c **** {
 3083              		.loc 1 2470 0
 3084              		.cfi_startproc
 3085              		@ args = 0, pretend = 0, frame = 8
 3086              		@ frame_needed = 1, uses_anonymous_args = 0
 3087 0000 80B5     		push	{r7, lr}
 3088              		.cfi_def_cfa_offset 8
 3089              		.cfi_offset 7, -8
 3090              		.cfi_offset 14, -4
 3091 0002 82B0     		sub	sp, sp, #8
 3092              		.cfi_def_cfa_offset 16
 3093 0004 00AF     		add	r7, sp, #0
 3094              		.cfi_def_cfa_register 7
 3095 0006 0200     		movs	r2, r0
 3096 0008 FB1D     		adds	r3, r7, #7
 3097 000a 1A70     		strb	r2, [r3]
2471:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 3098              		.loc 1 2471 0
 3099 000c 064B     		ldr	r3, .L231
 3100 000e FA1D     		adds	r2, r7, #7
 3101 0010 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 99


 3102 0012 1F21     		movs	r1, #31
 3103 0014 0A40     		ands	r2, r1
 3104 0016 0121     		movs	r1, #1
 3105 0018 9140     		lsls	r1, r1, r2
 3106 001a 0A00     		movs	r2, r1
 3107 001c 1A60     		str	r2, [r3]
2472:Generated_Source\PSoC4/CyLib.c **** }
 3108              		.loc 1 2472 0
 3109 001e C046     		nop
 3110 0020 BD46     		mov	sp, r7
 3111 0022 02B0     		add	sp, sp, #8
 3112              		@ sp needed
 3113 0024 80BD     		pop	{r7, pc}
 3114              	.L232:
 3115 0026 C046     		.align	2
 3116              	.L231:
 3117 0028 00E200E0 		.word	-536813056
 3118              		.cfi_endproc
 3119              	.LFE46:
 3120              		.size	CyIntSetPending, .-CyIntSetPending
 3121              		.section	.text.CyIntClearPending,"ax",%progbits
 3122              		.align	2
 3123              		.global	CyIntClearPending
 3124              		.code	16
 3125              		.thumb_func
 3126              		.type	CyIntClearPending, %function
 3127              	CyIntClearPending:
 3128              	.LFB47:
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2477:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2478:Generated_Source\PSoC4/CyLib.c **** *
2479:Generated_Source\PSoC4/CyLib.c **** * Summary:
2480:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2483:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2484:Generated_Source\PSoC4/CyLib.c **** *
2485:Generated_Source\PSoC4/CyLib.c **** * Return:
2486:Generated_Source\PSoC4/CyLib.c **** *  None
2487:Generated_Source\PSoC4/CyLib.c **** *
2488:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2489:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2490:Generated_Source\PSoC4/CyLib.c **** {
 3129              		.loc 1 2490 0
 3130              		.cfi_startproc
 3131              		@ args = 0, pretend = 0, frame = 8
 3132              		@ frame_needed = 1, uses_anonymous_args = 0
 3133 0000 80B5     		push	{r7, lr}
 3134              		.cfi_def_cfa_offset 8
 3135              		.cfi_offset 7, -8
 3136              		.cfi_offset 14, -4
 3137 0002 82B0     		sub	sp, sp, #8
 3138              		.cfi_def_cfa_offset 16
 3139 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 100


 3140              		.cfi_def_cfa_register 7
 3141 0006 0200     		movs	r2, r0
 3142 0008 FB1D     		adds	r3, r7, #7
 3143 000a 1A70     		strb	r2, [r3]
2491:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 3144              		.loc 1 2491 0
 3145 000c 064B     		ldr	r3, .L234
 3146 000e FA1D     		adds	r2, r7, #7
 3147 0010 1278     		ldrb	r2, [r2]
 3148 0012 1F21     		movs	r1, #31
 3149 0014 0A40     		ands	r2, r1
 3150 0016 0121     		movs	r1, #1
 3151 0018 9140     		lsls	r1, r1, r2
 3152 001a 0A00     		movs	r2, r1
 3153 001c 1A60     		str	r2, [r3]
2492:Generated_Source\PSoC4/CyLib.c **** }
 3154              		.loc 1 2492 0
 3155 001e C046     		nop
 3156 0020 BD46     		mov	sp, r7
 3157 0022 02B0     		add	sp, sp, #8
 3158              		@ sp needed
 3159 0024 80BD     		pop	{r7, pc}
 3160              	.L235:
 3161 0026 C046     		.align	2
 3162              	.L234:
 3163 0028 80E200E0 		.word	-536812928
 3164              		.cfi_endproc
 3165              	.LFE47:
 3166              		.size	CyIntClearPending, .-CyIntClearPending
 3167              		.section	.text.CyHalt,"ax",%progbits
 3168              		.align	2
 3169              		.global	CyHalt
 3170              		.code	16
 3171              		.thumb_func
 3172              		.type	CyHalt, %function
 3173              	CyHalt:
 3174              	.LFB48:
2493:Generated_Source\PSoC4/CyLib.c **** 
2494:Generated_Source\PSoC4/CyLib.c **** 
2495:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2496:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2497:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** * Summary:
2500:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2501:Generated_Source\PSoC4/CyLib.c **** *
2502:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2503:Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
2504:Generated_Source\PSoC4/CyLib.c **** *
2505:Generated_Source\PSoC4/CyLib.c **** * Return:
2506:Generated_Source\PSoC4/CyLib.c **** *  None
2507:Generated_Source\PSoC4/CyLib.c **** *
2508:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2509:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2510:Generated_Source\PSoC4/CyLib.c **** {
 3175              		.loc 1 2510 0
 3176              		.cfi_startproc
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 101


 3177              		@ args = 0, pretend = 0, frame = 8
 3178              		@ frame_needed = 1, uses_anonymous_args = 0
 3179 0000 80B5     		push	{r7, lr}
 3180              		.cfi_def_cfa_offset 8
 3181              		.cfi_offset 7, -8
 3182              		.cfi_offset 14, -4
 3183 0002 82B0     		sub	sp, sp, #8
 3184              		.cfi_def_cfa_offset 16
 3185 0004 00AF     		add	r7, sp, #0
 3186              		.cfi_def_cfa_register 7
 3187 0006 0200     		movs	r2, r0
 3188 0008 FB1D     		adds	r3, r7, #7
 3189 000a 1A70     		strb	r2, [r3]
2511:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2512:Generated_Source\PSoC4/CyLib.c ****     {
2513:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2514:Generated_Source\PSoC4/CyLib.c ****     }
2515:Generated_Source\PSoC4/CyLib.c **** 
2516:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2517:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2518:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2519:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 3190              		.loc 1 2519 0
 3191              		.syntax divided
 3192              	@ 2519 "Generated_Source\PSoC4\CyLib.c" 1
 3193 000c 01BE     		    bkpt    1
 3194              	@ 0 "" 2
2520:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2521:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2522:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2523:Generated_Source\PSoC4/CyLib.c **** }
 3195              		.loc 1 2523 0
 3196              		.thumb
 3197              		.syntax unified
 3198 000e C046     		nop
 3199 0010 BD46     		mov	sp, r7
 3200 0012 02B0     		add	sp, sp, #8
 3201              		@ sp needed
 3202 0014 80BD     		pop	{r7, pc}
 3203              		.cfi_endproc
 3204              	.LFE48:
 3205              		.size	CyHalt, .-CyHalt
 3206 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 3207              		.align	2
 3208              		.global	CySoftwareReset
 3209              		.code	16
 3210              		.thumb_func
 3211              		.type	CySoftwareReset, %function
 3212              	CySoftwareReset:
 3213              	.LFB49:
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c **** 
2526:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2527:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2528:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2529:Generated_Source\PSoC4/CyLib.c **** *
2530:Generated_Source\PSoC4/CyLib.c **** * Summary:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 102


2531:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2532:Generated_Source\PSoC4/CyLib.c **** *
2533:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2534:Generated_Source\PSoC4/CyLib.c **** *  None
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** * Return:
2537:Generated_Source\PSoC4/CyLib.c **** *  None
2538:Generated_Source\PSoC4/CyLib.c **** *
2539:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2540:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2541:Generated_Source\PSoC4/CyLib.c **** {
 3214              		.loc 1 2541 0
 3215              		.cfi_startproc
 3216              		@ args = 0, pretend = 0, frame = 0
 3217              		@ frame_needed = 1, uses_anonymous_args = 0
 3218 0000 80B5     		push	{r7, lr}
 3219              		.cfi_def_cfa_offset 8
 3220              		.cfi_offset 7, -8
 3221              		.cfi_offset 14, -4
 3222 0002 00AF     		add	r7, sp, #0
 3223              		.cfi_def_cfa_register 7
2542:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2543:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2544:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2545:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2546:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 3224              		.loc 1 2546 0
 3225 0004 054B     		ldr	r3, .L238
 3226 0006 054A     		ldr	r2, .L238
 3227 0008 1268     		ldr	r2, [r2]
 3228 000a 1204     		lsls	r2, r2, #16
 3229 000c 120C     		lsrs	r2, r2, #16
2547:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 3230              		.loc 1 2547 0
 3231 000e 0449     		ldr	r1, .L238+4
 3232 0010 0A43     		orrs	r2, r1
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 3233              		.loc 1 2546 0
 3234 0012 1A60     		str	r2, [r3]
2548:Generated_Source\PSoC4/CyLib.c **** }
 3235              		.loc 1 2548 0
 3236 0014 C046     		nop
 3237 0016 BD46     		mov	sp, r7
 3238              		@ sp needed
 3239 0018 80BD     		pop	{r7, pc}
 3240              	.L239:
 3241 001a C046     		.align	2
 3242              	.L238:
 3243 001c 0CED00E0 		.word	-536810228
 3244 0020 0400FA05 		.word	100270084
 3245              		.cfi_endproc
 3246              	.LFE49:
 3247              		.size	CySoftwareReset, .-CySoftwareReset
 3248              		.section	.text.CyDelay,"ax",%progbits
 3249              		.align	2
 3250              		.global	CyDelay
 3251              		.code	16
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 103


 3252              		.thumb_func
 3253              		.type	CyDelay, %function
 3254              	CyDelay:
 3255              	.LFB50:
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2553:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2554:Generated_Source\PSoC4/CyLib.c **** *
2555:Generated_Source\PSoC4/CyLib.c **** * Summary:
2556:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2559:Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
2560:Generated_Source\PSoC4/CyLib.c **** *
2561:Generated_Source\PSoC4/CyLib.c **** * Return:
2562:Generated_Source\PSoC4/CyLib.c **** *  None
2563:Generated_Source\PSoC4/CyLib.c **** *
2564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2565:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2566:Generated_Source\PSoC4/CyLib.c **** {
 3256              		.loc 1 2566 0
 3257              		.cfi_startproc
 3258              		@ args = 0, pretend = 0, frame = 8
 3259              		@ frame_needed = 1, uses_anonymous_args = 0
 3260 0000 80B5     		push	{r7, lr}
 3261              		.cfi_def_cfa_offset 8
 3262              		.cfi_offset 7, -8
 3263              		.cfi_offset 14, -4
 3264 0002 82B0     		sub	sp, sp, #8
 3265              		.cfi_def_cfa_offset 16
 3266 0004 00AF     		add	r7, sp, #0
 3267              		.cfi_def_cfa_register 7
 3268 0006 7860     		str	r0, [r7, #4]
2567:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 3269              		.loc 1 2567 0
 3270 0008 09E0     		b	.L241
 3271              	.L242:
2568:Generated_Source\PSoC4/CyLib.c ****     {
2569:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2570:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2571:Generated_Source\PSoC4/CyLib.c ****          */
2572:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 3272              		.loc 1 2572 0
 3273 000a 0D4B     		ldr	r3, .L243
 3274 000c 1B68     		ldr	r3, [r3]
 3275 000e 1800     		movs	r0, r3
 3276 0010 FFF7FEFF 		bl	CyDelayCycles
2573:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 3277              		.loc 1 2573 0
 3278 0014 7B68     		ldr	r3, [r7, #4]
 3279 0016 0B4A     		ldr	r2, .L243+4
 3280 0018 9446     		mov	ip, r2
 3281 001a 6344     		add	r3, r3, ip
 3282 001c 7B60     		str	r3, [r7, #4]
 3283              	.L241:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 104


2567:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 3284              		.loc 1 2567 0
 3285 001e 7A68     		ldr	r2, [r7, #4]
 3286 0020 8023     		movs	r3, #128
 3287 0022 1B02     		lsls	r3, r3, #8
 3288 0024 9A42     		cmp	r2, r3
 3289 0026 F0D8     		bhi	.L242
2574:Generated_Source\PSoC4/CyLib.c ****     }
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 3290              		.loc 1 2576 0
 3291 0028 074B     		ldr	r3, .L243+8
 3292 002a 1B68     		ldr	r3, [r3]
 3293 002c 7A68     		ldr	r2, [r7, #4]
 3294 002e 5343     		muls	r3, r2
 3295 0030 1800     		movs	r0, r3
 3296 0032 FFF7FEFF 		bl	CyDelayCycles
2577:Generated_Source\PSoC4/CyLib.c **** }
 3297              		.loc 1 2577 0
 3298 0036 C046     		nop
 3299 0038 BD46     		mov	sp, r7
 3300 003a 02B0     		add	sp, sp, #8
 3301              		@ sp needed
 3302 003c 80BD     		pop	{r7, pc}
 3303              	.L244:
 3304 003e C046     		.align	2
 3305              	.L243:
 3306 0040 00000000 		.word	cydelay32kMs
 3307 0044 0080FFFF 		.word	-32768
 3308 0048 00000000 		.word	cydelayFreqKhz
 3309              		.cfi_endproc
 3310              	.LFE50:
 3311              		.size	CyDelay, .-CyDelay
 3312              		.section	.text.CyDelayUs,"ax",%progbits
 3313              		.align	2
 3314              		.global	CyDelayUs
 3315              		.code	16
 3316              		.thumb_func
 3317              		.type	CyDelayUs, %function
 3318              	CyDelayUs:
 3319              	.LFB51:
2578:Generated_Source\PSoC4/CyLib.c **** 
2579:Generated_Source\PSoC4/CyLib.c **** 
2580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2582:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2583:Generated_Source\PSoC4/CyLib.c **** * Summary:
2584:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2585:Generated_Source\PSoC4/CyLib.c **** *
2586:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2587:Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
2588:Generated_Source\PSoC4/CyLib.c **** *
2589:Generated_Source\PSoC4/CyLib.c **** * Return:
2590:Generated_Source\PSoC4/CyLib.c **** *  None
2591:Generated_Source\PSoC4/CyLib.c **** *
2592:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2593:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 105


2594:Generated_Source\PSoC4/CyLib.c **** {
 3320              		.loc 1 2594 0
 3321              		.cfi_startproc
 3322              		@ args = 0, pretend = 0, frame = 8
 3323              		@ frame_needed = 1, uses_anonymous_args = 0
 3324 0000 80B5     		push	{r7, lr}
 3325              		.cfi_def_cfa_offset 8
 3326              		.cfi_offset 7, -8
 3327              		.cfi_offset 14, -4
 3328 0002 82B0     		sub	sp, sp, #8
 3329              		.cfi_def_cfa_offset 16
 3330 0004 00AF     		add	r7, sp, #0
 3331              		.cfi_def_cfa_register 7
 3332 0006 0200     		movs	r2, r0
 3333 0008 BB1D     		adds	r3, r7, #6
 3334 000a 1A80     		strh	r2, [r3]
2595:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 3335              		.loc 1 2595 0
 3336 000c BB1D     		adds	r3, r7, #6
 3337 000e 1B88     		ldrh	r3, [r3]
 3338 0010 044A     		ldr	r2, .L246
 3339 0012 1278     		ldrb	r2, [r2]
 3340 0014 5343     		muls	r3, r2
 3341 0016 1800     		movs	r0, r3
 3342 0018 FFF7FEFF 		bl	CyDelayCycles
2596:Generated_Source\PSoC4/CyLib.c **** }
 3343              		.loc 1 2596 0
 3344 001c C046     		nop
 3345 001e BD46     		mov	sp, r7
 3346 0020 02B0     		add	sp, sp, #8
 3347              		@ sp needed
 3348 0022 80BD     		pop	{r7, pc}
 3349              	.L247:
 3350              		.align	2
 3351              	.L246:
 3352 0024 00000000 		.word	cydelayFreqMhz
 3353              		.cfi_endproc
 3354              	.LFE51:
 3355              		.size	CyDelayUs, .-CyDelayUs
 3356              		.global	__aeabi_uidiv
 3357              		.section	.text.CyDelayFreq,"ax",%progbits
 3358              		.align	2
 3359              		.global	CyDelayFreq
 3360              		.code	16
 3361              		.thumb_func
 3362              		.type	CyDelayFreq, %function
 3363              	CyDelayFreq:
 3364              	.LFB52:
2597:Generated_Source\PSoC4/CyLib.c **** 
2598:Generated_Source\PSoC4/CyLib.c **** 
2599:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2600:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2601:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2602:Generated_Source\PSoC4/CyLib.c **** * Summary:
2603:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2604:Generated_Source\PSoC4/CyLib.c **** *
2605:Generated_Source\PSoC4/CyLib.c **** * Parameters:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 106


2606:Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
2607:Generated_Source\PSoC4/CyLib.c **** *
2608:Generated_Source\PSoC4/CyLib.c **** * Return:
2609:Generated_Source\PSoC4/CyLib.c **** *  None
2610:Generated_Source\PSoC4/CyLib.c **** *
2611:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2612:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2613:Generated_Source\PSoC4/CyLib.c **** {
 3365              		.loc 1 2613 0
 3366              		.cfi_startproc
 3367              		@ args = 0, pretend = 0, frame = 8
 3368              		@ frame_needed = 1, uses_anonymous_args = 0
 3369 0000 80B5     		push	{r7, lr}
 3370              		.cfi_def_cfa_offset 8
 3371              		.cfi_offset 7, -8
 3372              		.cfi_offset 14, -4
 3373 0002 82B0     		sub	sp, sp, #8
 3374              		.cfi_def_cfa_offset 16
 3375 0004 00AF     		add	r7, sp, #0
 3376              		.cfi_def_cfa_register 7
 3377 0006 7860     		str	r0, [r7, #4]
2614:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 3378              		.loc 1 2614 0
 3379 0008 7B68     		ldr	r3, [r7, #4]
 3380 000a 002B     		cmp	r3, #0
 3381 000c 03D0     		beq	.L249
2615:Generated_Source\PSoC4/CyLib.c ****     {
2616:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 3382              		.loc 1 2616 0
 3383 000e 154B     		ldr	r3, .L251
 3384 0010 7A68     		ldr	r2, [r7, #4]
 3385 0012 1A60     		str	r2, [r3]
 3386 0014 02E0     		b	.L250
 3387              	.L249:
2617:Generated_Source\PSoC4/CyLib.c ****     }
2618:Generated_Source\PSoC4/CyLib.c ****     else
2619:Generated_Source\PSoC4/CyLib.c ****     {
2620:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 3388              		.loc 1 2620 0
 3389 0016 134B     		ldr	r3, .L251
 3390 0018 134A     		ldr	r2, .L251+4
 3391 001a 1A60     		str	r2, [r3]
 3392              	.L250:
2621:Generated_Source\PSoC4/CyLib.c ****     }
2622:Generated_Source\PSoC4/CyLib.c **** 
2623:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 3393              		.loc 1 2623 0
 3394 001c 114B     		ldr	r3, .L251
 3395 001e 1B68     		ldr	r3, [r3]
 3396 0020 124A     		ldr	r2, .L251+8
 3397 0022 9446     		mov	ip, r2
 3398 0024 6344     		add	r3, r3, ip
 3399 0026 1249     		ldr	r1, .L251+12
 3400 0028 1800     		movs	r0, r3
 3401 002a FFF7FEFF 		bl	__aeabi_uidiv
 3402 002e 0300     		movs	r3, r0
 3403 0030 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 107


 3404 0032 104B     		ldr	r3, .L251+16
 3405 0034 1A70     		strb	r2, [r3]
2624:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 3406              		.loc 1 2624 0
 3407 0036 0B4B     		ldr	r3, .L251
 3408 0038 1B68     		ldr	r3, [r3]
 3409 003a 0F4A     		ldr	r2, .L251+20
 3410 003c 9A18     		adds	r2, r3, r2
 3411 003e FA23     		movs	r3, #250
 3412 0040 9900     		lsls	r1, r3, #2
 3413 0042 1000     		movs	r0, r2
 3414 0044 FFF7FEFF 		bl	__aeabi_uidiv
 3415 0048 0300     		movs	r3, r0
 3416 004a 1A00     		movs	r2, r3
 3417 004c 0B4B     		ldr	r3, .L251+24
 3418 004e 1A60     		str	r2, [r3]
2625:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 3419              		.loc 1 2625 0
 3420 0050 0A4B     		ldr	r3, .L251+24
 3421 0052 1B68     		ldr	r3, [r3]
 3422 0054 DA03     		lsls	r2, r3, #15
 3423 0056 0A4B     		ldr	r3, .L251+28
 3424 0058 1A60     		str	r2, [r3]
2626:Generated_Source\PSoC4/CyLib.c **** }
 3425              		.loc 1 2626 0
 3426 005a C046     		nop
 3427 005c BD46     		mov	sp, r7
 3428 005e 02B0     		add	sp, sp, #8
 3429              		@ sp needed
 3430 0060 80BD     		pop	{r7, pc}
 3431              	.L252:
 3432 0062 C046     		.align	2
 3433              	.L251:
 3434 0064 00000000 		.word	cydelayFreqHz
 3435 0068 00366E01 		.word	24000000
 3436 006c 3F420F00 		.word	999999
 3437 0070 40420F00 		.word	1000000
 3438 0074 00000000 		.word	cydelayFreqMhz
 3439 0078 E7030000 		.word	999
 3440 007c 00000000 		.word	cydelayFreqKhz
 3441 0080 00000000 		.word	cydelay32kMs
 3442              		.cfi_endproc
 3443              	.LFE52:
 3444              		.size	CyDelayFreq, .-CyDelayFreq
 3445              		.section	.text.CySysTickStart,"ax",%progbits
 3446              		.align	2
 3447              		.global	CySysTickStart
 3448              		.code	16
 3449              		.thumb_func
 3450              		.type	CySysTickStart, %function
 3451              	CySysTickStart:
 3452              	.LFB53:
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** 
2629:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2630:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2631:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 108


2632:Generated_Source\PSoC4/CyLib.c **** *
2633:Generated_Source\PSoC4/CyLib.c **** * Summary:
2634:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2635:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2636:Generated_Source\PSoC4/CyLib.c **** *
2637:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2638:Generated_Source\PSoC4/CyLib.c **** *  None
2639:Generated_Source\PSoC4/CyLib.c **** *
2640:Generated_Source\PSoC4/CyLib.c **** * Return:
2641:Generated_Source\PSoC4/CyLib.c **** *  None
2642:Generated_Source\PSoC4/CyLib.c **** *
2643:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2644:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2645:Generated_Source\PSoC4/CyLib.c **** *
2646:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2647:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2648:Generated_Source\PSoC4/CyLib.c **** {
 3453              		.loc 1 2648 0
 3454              		.cfi_startproc
 3455              		@ args = 0, pretend = 0, frame = 0
 3456              		@ frame_needed = 1, uses_anonymous_args = 0
 3457 0000 80B5     		push	{r7, lr}
 3458              		.cfi_def_cfa_offset 8
 3459              		.cfi_offset 7, -8
 3460              		.cfi_offset 14, -4
 3461 0002 00AF     		add	r7, sp, #0
 3462              		.cfi_def_cfa_register 7
2649:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 3463              		.loc 1 2649 0
 3464 0004 064B     		ldr	r3, .L255
 3465 0006 1B68     		ldr	r3, [r3]
 3466 0008 002B     		cmp	r3, #0
 3467 000a 04D1     		bne	.L254
2650:Generated_Source\PSoC4/CyLib.c ****     {
2651:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 3468              		.loc 1 2651 0
 3469 000c FFF7FEFF 		bl	CySysTickInit
2652:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 3470              		.loc 1 2652 0
 3471 0010 034B     		ldr	r3, .L255
 3472 0012 0122     		movs	r2, #1
 3473 0014 1A60     		str	r2, [r3]
 3474              	.L254:
2653:Generated_Source\PSoC4/CyLib.c ****     }
2654:Generated_Source\PSoC4/CyLib.c **** 
2655:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 3475              		.loc 1 2655 0
 3476 0016 FFF7FEFF 		bl	CySysTickEnable
2656:Generated_Source\PSoC4/CyLib.c **** }
 3477              		.loc 1 2656 0
 3478 001a C046     		nop
 3479 001c BD46     		mov	sp, r7
 3480              		@ sp needed
 3481 001e 80BD     		pop	{r7, pc}
 3482              	.L256:
 3483              		.align	2
 3484              	.L255:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 109


 3485 0020 00000000 		.word	CySysTickInitVar
 3486              		.cfi_endproc
 3487              	.LFE53:
 3488              		.size	CySysTickStart, .-CySysTickStart
 3489              		.section	.text.CySysTickInit,"ax",%progbits
 3490              		.align	2
 3491              		.global	CySysTickInit
 3492              		.code	16
 3493              		.thumb_func
 3494              		.type	CySysTickInit, %function
 3495              	CySysTickInit:
 3496              	.LFB54:
2657:Generated_Source\PSoC4/CyLib.c **** 
2658:Generated_Source\PSoC4/CyLib.c **** 
2659:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2660:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2661:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2662:Generated_Source\PSoC4/CyLib.c **** *
2663:Generated_Source\PSoC4/CyLib.c **** * Summary:
2664:Generated_Source\PSoC4/CyLib.c **** *  Sets CySysTickServiceCallbacks() as an ISR for the SysTick exception.
2665:Generated_Source\PSoC4/CyLib.c **** *  The clock source for the SysTick counter is set to the System Clock.
2666:Generated_Source\PSoC4/CyLib.c **** *  The SysTick reload value is configured for the timer to generate interrupt
2667:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms. The System clock value is on the global variables cydelayFreqHz.
2668:Generated_Source\PSoC4/CyLib.c **** *  User is responsible for calling CyDelayFreq() function.
2669:Generated_Source\PSoC4/CyLib.c **** *  Initializes CySysTickCallbacks array.
2670:Generated_Source\PSoC4/CyLib.c **** *
2671:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2672:Generated_Source\PSoC4/CyLib.c **** *  None
2673:Generated_Source\PSoC4/CyLib.c **** *
2674:Generated_Source\PSoC4/CyLib.c **** * Return:
2675:Generated_Source\PSoC4/CyLib.c **** *  None
2676:Generated_Source\PSoC4/CyLib.c **** *
2677:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2678:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2679:Generated_Source\PSoC4/CyLib.c **** *
2680:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2681:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2682:Generated_Source\PSoC4/CyLib.c **** {
 3497              		.loc 1 2682 0
 3498              		.cfi_startproc
 3499              		@ args = 0, pretend = 0, frame = 8
 3500              		@ frame_needed = 1, uses_anonymous_args = 0
 3501 0000 80B5     		push	{r7, lr}
 3502              		.cfi_def_cfa_offset 8
 3503              		.cfi_offset 7, -8
 3504              		.cfi_offset 14, -4
 3505 0002 82B0     		sub	sp, sp, #8
 3506              		.cfi_def_cfa_offset 16
 3507 0004 00AF     		add	r7, sp, #0
 3508              		.cfi_def_cfa_register 7
2683:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 3509              		.loc 1 2685 0
 3510 0006 0023     		movs	r3, #0
 3511 0008 7B60     		str	r3, [r7, #4]
 3512 000a 07E0     		b	.L258
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 110


 3513              	.L259:
2686:Generated_Source\PSoC4/CyLib.c ****     {
2687:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 3514              		.loc 1 2687 0 discriminator 3
 3515 000c 114B     		ldr	r3, .L260
 3516 000e 7A68     		ldr	r2, [r7, #4]
 3517 0010 9200     		lsls	r2, r2, #2
 3518 0012 0021     		movs	r1, #0
 3519 0014 D150     		str	r1, [r2, r3]
2685:Generated_Source\PSoC4/CyLib.c ****     {
 3520              		.loc 1 2685 0 discriminator 3
 3521 0016 7B68     		ldr	r3, [r7, #4]
 3522 0018 0133     		adds	r3, r3, #1
 3523 001a 7B60     		str	r3, [r7, #4]
 3524              	.L258:
2685:Generated_Source\PSoC4/CyLib.c ****     {
 3525              		.loc 1 2685 0 is_stmt 0 discriminator 1
 3526 001c 7B68     		ldr	r3, [r7, #4]
 3527 001e 042B     		cmp	r3, #4
 3528 0020 F4D9     		bls	.L259
2688:Generated_Source\PSoC4/CyLib.c ****     }
2689:Generated_Source\PSoC4/CyLib.c **** 
2690:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 3529              		.loc 1 2690 0 is_stmt 1
 3530 0022 0D4B     		ldr	r3, .L260+4
 3531 0024 1900     		movs	r1, r3
 3532 0026 0F20     		movs	r0, #15
 3533 0028 FFF7FEFF 		bl	CyIntSetSysVector
2691:Generated_Source\PSoC4/CyLib.c **** 
2692:Generated_Source\PSoC4/CyLib.c ****     #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL || CY_PSOC5)
2693:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2694:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL || CY_PSOC5) */
2695:Generated_Source\PSoC4/CyLib.c **** 
2696:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 3534              		.loc 1 2696 0
 3535 002c 0B4B     		ldr	r3, .L260+8
 3536 002e 1A68     		ldr	r2, [r3]
 3537 0030 FA23     		movs	r3, #250
 3538 0032 9900     		lsls	r1, r3, #2
 3539 0034 1000     		movs	r0, r2
 3540 0036 FFF7FEFF 		bl	__aeabi_uidiv
 3541 003a 0300     		movs	r3, r0
 3542 003c 1800     		movs	r0, r3
 3543 003e FFF7FEFF 		bl	CySysTickSetReload
2697:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 3544              		.loc 1 2697 0
 3545 0042 FFF7FEFF 		bl	CySysTickClear
2698:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 3546              		.loc 1 2698 0
 3547 0046 0F20     		movs	r0, #15
 3548 0048 FFF7FEFF 		bl	CyIntEnable
2699:Generated_Source\PSoC4/CyLib.c **** }
 3549              		.loc 1 2699 0
 3550 004c C046     		nop
 3551 004e BD46     		mov	sp, r7
 3552 0050 02B0     		add	sp, sp, #8
 3553              		@ sp needed
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 111


 3554 0052 80BD     		pop	{r7, pc}
 3555              	.L261:
 3556              		.align	2
 3557              	.L260:
 3558 0054 0C000000 		.word	CySysTickCallbacks
 3559 0058 00000000 		.word	CySysTickServiceCallbacks
 3560 005c 00000000 		.word	cydelayFreqHz
 3561              		.cfi_endproc
 3562              	.LFE54:
 3563              		.size	CySysTickInit, .-CySysTickInit
 3564              		.section	.text.CySysTickEnable,"ax",%progbits
 3565              		.align	2
 3566              		.global	CySysTickEnable
 3567              		.code	16
 3568              		.thumb_func
 3569              		.type	CySysTickEnable, %function
 3570              	CySysTickEnable:
 3571              	.LFB55:
2700:Generated_Source\PSoC4/CyLib.c **** 
2701:Generated_Source\PSoC4/CyLib.c **** 
2702:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2703:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2704:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** * Summary:
2707:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2708:Generated_Source\PSoC4/CyLib.c **** *
2709:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2710:Generated_Source\PSoC4/CyLib.c **** *  None
2711:Generated_Source\PSoC4/CyLib.c **** *
2712:Generated_Source\PSoC4/CyLib.c **** * Return:
2713:Generated_Source\PSoC4/CyLib.c **** *  None
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2716:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2717:Generated_Source\PSoC4/CyLib.c **** *
2718:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2719:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2720:Generated_Source\PSoC4/CyLib.c **** {
 3572              		.loc 1 2720 0
 3573              		.cfi_startproc
 3574              		@ args = 0, pretend = 0, frame = 0
 3575              		@ frame_needed = 1, uses_anonymous_args = 0
 3576 0000 80B5     		push	{r7, lr}
 3577              		.cfi_def_cfa_offset 8
 3578              		.cfi_offset 7, -8
 3579              		.cfi_offset 14, -4
 3580 0002 00AF     		add	r7, sp, #0
 3581              		.cfi_def_cfa_register 7
2721:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 3582              		.loc 1 2721 0
 3583 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 3584              		.loc 1 2722 0
 3585 0008 044B     		ldr	r3, .L263
 3586 000a 044A     		ldr	r2, .L263
 3587 000c 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 112


 3588 000e 0121     		movs	r1, #1
 3589 0010 0A43     		orrs	r2, r1
 3590 0012 1A60     		str	r2, [r3]
2723:Generated_Source\PSoC4/CyLib.c **** }
 3591              		.loc 1 2723 0
 3592 0014 C046     		nop
 3593 0016 BD46     		mov	sp, r7
 3594              		@ sp needed
 3595 0018 80BD     		pop	{r7, pc}
 3596              	.L264:
 3597 001a C046     		.align	2
 3598              	.L263:
 3599 001c 10E000E0 		.word	-536813552
 3600              		.cfi_endproc
 3601              	.LFE55:
 3602              		.size	CySysTickEnable, .-CySysTickEnable
 3603              		.section	.text.CySysTickStop,"ax",%progbits
 3604              		.align	2
 3605              		.global	CySysTickStop
 3606              		.code	16
 3607              		.thumb_func
 3608              		.type	CySysTickStop, %function
 3609              	CySysTickStop:
 3610              	.LFB56:
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2728:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** * Summary:
2731:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2734:Generated_Source\PSoC4/CyLib.c **** *  None
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** * Return:
2737:Generated_Source\PSoC4/CyLib.c **** *  None
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2740:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2743:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2744:Generated_Source\PSoC4/CyLib.c **** {
 3611              		.loc 1 2744 0
 3612              		.cfi_startproc
 3613              		@ args = 0, pretend = 0, frame = 0
 3614              		@ frame_needed = 1, uses_anonymous_args = 0
 3615 0000 80B5     		push	{r7, lr}
 3616              		.cfi_def_cfa_offset 8
 3617              		.cfi_offset 7, -8
 3618              		.cfi_offset 14, -4
 3619 0002 00AF     		add	r7, sp, #0
 3620              		.cfi_def_cfa_register 7
2745:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 3621              		.loc 1 2745 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 113


 3622 0004 044B     		ldr	r3, .L266
 3623 0006 044A     		ldr	r2, .L266
 3624 0008 1268     		ldr	r2, [r2]
 3625 000a 0121     		movs	r1, #1
 3626 000c 8A43     		bics	r2, r1
 3627 000e 1A60     		str	r2, [r3]
2746:Generated_Source\PSoC4/CyLib.c **** }
 3628              		.loc 1 2746 0
 3629 0010 C046     		nop
 3630 0012 BD46     		mov	sp, r7
 3631              		@ sp needed
 3632 0014 80BD     		pop	{r7, pc}
 3633              	.L267:
 3634 0016 C046     		.align	2
 3635              	.L266:
 3636 0018 10E000E0 		.word	-536813552
 3637              		.cfi_endproc
 3638              	.LFE56:
 3639              		.size	CySysTickStop, .-CySysTickStop
 3640              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 3641              		.align	2
 3642              		.global	CySysTickEnableInterrupt
 3643              		.code	16
 3644              		.thumb_func
 3645              		.type	CySysTickEnableInterrupt, %function
 3646              	CySysTickEnableInterrupt:
 3647              	.LFB57:
2747:Generated_Source\PSoC4/CyLib.c **** 
2748:Generated_Source\PSoC4/CyLib.c **** 
2749:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2750:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2751:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** * Summary:
2754:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2755:Generated_Source\PSoC4/CyLib.c **** *
2756:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2757:Generated_Source\PSoC4/CyLib.c **** *  None
2758:Generated_Source\PSoC4/CyLib.c **** *
2759:Generated_Source\PSoC4/CyLib.c **** * Return:
2760:Generated_Source\PSoC4/CyLib.c **** *  None
2761:Generated_Source\PSoC4/CyLib.c **** *
2762:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2763:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2766:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2767:Generated_Source\PSoC4/CyLib.c **** {
 3648              		.loc 1 2767 0
 3649              		.cfi_startproc
 3650              		@ args = 0, pretend = 0, frame = 0
 3651              		@ frame_needed = 1, uses_anonymous_args = 0
 3652 0000 80B5     		push	{r7, lr}
 3653              		.cfi_def_cfa_offset 8
 3654              		.cfi_offset 7, -8
 3655              		.cfi_offset 14, -4
 3656 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 114


 3657              		.cfi_def_cfa_register 7
2768:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 3658              		.loc 1 2768 0
 3659 0004 044B     		ldr	r3, .L269
 3660 0006 044A     		ldr	r2, .L269
 3661 0008 1268     		ldr	r2, [r2]
 3662 000a 0221     		movs	r1, #2
 3663 000c 0A43     		orrs	r2, r1
 3664 000e 1A60     		str	r2, [r3]
2769:Generated_Source\PSoC4/CyLib.c **** }
 3665              		.loc 1 2769 0
 3666 0010 C046     		nop
 3667 0012 BD46     		mov	sp, r7
 3668              		@ sp needed
 3669 0014 80BD     		pop	{r7, pc}
 3670              	.L270:
 3671 0016 C046     		.align	2
 3672              	.L269:
 3673 0018 10E000E0 		.word	-536813552
 3674              		.cfi_endproc
 3675              	.LFE57:
 3676              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 3677              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 3678              		.align	2
 3679              		.global	CySysTickDisableInterrupt
 3680              		.code	16
 3681              		.thumb_func
 3682              		.type	CySysTickDisableInterrupt, %function
 3683              	CySysTickDisableInterrupt:
 3684              	.LFB58:
2770:Generated_Source\PSoC4/CyLib.c **** 
2771:Generated_Source\PSoC4/CyLib.c **** 
2772:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2773:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2774:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2775:Generated_Source\PSoC4/CyLib.c **** *
2776:Generated_Source\PSoC4/CyLib.c **** * Summary:
2777:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2780:Generated_Source\PSoC4/CyLib.c **** *  None
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * Return:
2783:Generated_Source\PSoC4/CyLib.c **** *  None
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2786:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2787:Generated_Source\PSoC4/CyLib.c **** *
2788:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2789:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2790:Generated_Source\PSoC4/CyLib.c **** {
 3685              		.loc 1 2790 0
 3686              		.cfi_startproc
 3687              		@ args = 0, pretend = 0, frame = 0
 3688              		@ frame_needed = 1, uses_anonymous_args = 0
 3689 0000 80B5     		push	{r7, lr}
 3690              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 115


 3691              		.cfi_offset 7, -8
 3692              		.cfi_offset 14, -4
 3693 0002 00AF     		add	r7, sp, #0
 3694              		.cfi_def_cfa_register 7
2791:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 3695              		.loc 1 2791 0
 3696 0004 044B     		ldr	r3, .L272
 3697 0006 044A     		ldr	r2, .L272
 3698 0008 1268     		ldr	r2, [r2]
 3699 000a 0221     		movs	r1, #2
 3700 000c 8A43     		bics	r2, r1
 3701 000e 1A60     		str	r2, [r3]
2792:Generated_Source\PSoC4/CyLib.c **** }
 3702              		.loc 1 2792 0
 3703 0010 C046     		nop
 3704 0012 BD46     		mov	sp, r7
 3705              		@ sp needed
 3706 0014 80BD     		pop	{r7, pc}
 3707              	.L273:
 3708 0016 C046     		.align	2
 3709              	.L272:
 3710 0018 10E000E0 		.word	-536813552
 3711              		.cfi_endproc
 3712              	.LFE58:
 3713              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 3714              		.section	.text.CySysTickSetReload,"ax",%progbits
 3715              		.align	2
 3716              		.global	CySysTickSetReload
 3717              		.code	16
 3718              		.thumb_func
 3719              		.type	CySysTickSetReload, %function
 3720              	CySysTickSetReload:
 3721              	.LFB59:
2793:Generated_Source\PSoC4/CyLib.c **** 
2794:Generated_Source\PSoC4/CyLib.c **** 
2795:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2796:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2797:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2798:Generated_Source\PSoC4/CyLib.c **** *
2799:Generated_Source\PSoC4/CyLib.c **** * Summary:
2800:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2801:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2802:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2803:Generated_Source\PSoC4/CyLib.c **** *
2804:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2805:Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2806:Generated_Source\PSoC4/CyLib.c **** *
2807:Generated_Source\PSoC4/CyLib.c **** * Return:
2808:Generated_Source\PSoC4/CyLib.c **** *  None
2809:Generated_Source\PSoC4/CyLib.c **** *
2810:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2811:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2812:Generated_Source\PSoC4/CyLib.c **** {
 3722              		.loc 1 2812 0
 3723              		.cfi_startproc
 3724              		@ args = 0, pretend = 0, frame = 8
 3725              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 116


 3726 0000 80B5     		push	{r7, lr}
 3727              		.cfi_def_cfa_offset 8
 3728              		.cfi_offset 7, -8
 3729              		.cfi_offset 14, -4
 3730 0002 82B0     		sub	sp, sp, #8
 3731              		.cfi_def_cfa_offset 16
 3732 0004 00AF     		add	r7, sp, #0
 3733              		.cfi_def_cfa_register 7
 3734 0006 7860     		str	r0, [r7, #4]
2813:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 3735              		.loc 1 2813 0
 3736 0008 044B     		ldr	r3, .L275
 3737 000a 7A68     		ldr	r2, [r7, #4]
 3738 000c 1202     		lsls	r2, r2, #8
 3739 000e 120A     		lsrs	r2, r2, #8
 3740 0010 1A60     		str	r2, [r3]
2814:Generated_Source\PSoC4/CyLib.c **** }
 3741              		.loc 1 2814 0
 3742 0012 C046     		nop
 3743 0014 BD46     		mov	sp, r7
 3744 0016 02B0     		add	sp, sp, #8
 3745              		@ sp needed
 3746 0018 80BD     		pop	{r7, pc}
 3747              	.L276:
 3748 001a C046     		.align	2
 3749              	.L275:
 3750 001c 14E000E0 		.word	-536813548
 3751              		.cfi_endproc
 3752              	.LFE59:
 3753              		.size	CySysTickSetReload, .-CySysTickSetReload
 3754              		.section	.text.CySysTickGetReload,"ax",%progbits
 3755              		.align	2
 3756              		.global	CySysTickGetReload
 3757              		.code	16
 3758              		.thumb_func
 3759              		.type	CySysTickGetReload, %function
 3760              	CySysTickGetReload:
 3761              	.LFB60:
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c **** 
2817:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2818:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2819:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2820:Generated_Source\PSoC4/CyLib.c **** *
2821:Generated_Source\PSoC4/CyLib.c **** * Summary:
2822:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
2823:Generated_Source\PSoC4/CyLib.c **** *
2824:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2825:Generated_Source\PSoC4/CyLib.c **** *  None
2826:Generated_Source\PSoC4/CyLib.c **** *
2827:Generated_Source\PSoC4/CyLib.c **** * Return:
2828:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2829:Generated_Source\PSoC4/CyLib.c **** *
2830:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2831:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2832:Generated_Source\PSoC4/CyLib.c **** {
 3762              		.loc 1 2832 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 117


 3763              		.cfi_startproc
 3764              		@ args = 0, pretend = 0, frame = 0
 3765              		@ frame_needed = 1, uses_anonymous_args = 0
 3766 0000 80B5     		push	{r7, lr}
 3767              		.cfi_def_cfa_offset 8
 3768              		.cfi_offset 7, -8
 3769              		.cfi_offset 14, -4
 3770 0002 00AF     		add	r7, sp, #0
 3771              		.cfi_def_cfa_register 7
2833:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 3772              		.loc 1 2833 0
 3773 0004 034B     		ldr	r3, .L279
 3774 0006 1B68     		ldr	r3, [r3]
 3775 0008 1B02     		lsls	r3, r3, #8
 3776 000a 1B0A     		lsrs	r3, r3, #8
2834:Generated_Source\PSoC4/CyLib.c **** }
 3777              		.loc 1 2834 0
 3778 000c 1800     		movs	r0, r3
 3779 000e BD46     		mov	sp, r7
 3780              		@ sp needed
 3781 0010 80BD     		pop	{r7, pc}
 3782              	.L280:
 3783 0012 C046     		.align	2
 3784              	.L279:
 3785 0014 14E000E0 		.word	-536813548
 3786              		.cfi_endproc
 3787              	.LFE60:
 3788              		.size	CySysTickGetReload, .-CySysTickGetReload
 3789              		.section	.text.CySysTickGetValue,"ax",%progbits
 3790              		.align	2
 3791              		.global	CySysTickGetValue
 3792              		.code	16
 3793              		.thumb_func
 3794              		.type	CySysTickGetValue, %function
 3795              	CySysTickGetValue:
 3796              	.LFB61:
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c **** 
2837:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2838:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2839:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2840:Generated_Source\PSoC4/CyLib.c **** *
2841:Generated_Source\PSoC4/CyLib.c **** * Summary:
2842:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2845:Generated_Source\PSoC4/CyLib.c **** *  None
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** * Return:
2848:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2849:Generated_Source\PSoC4/CyLib.c **** *
2850:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2851:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2852:Generated_Source\PSoC4/CyLib.c **** {
 3797              		.loc 1 2852 0
 3798              		.cfi_startproc
 3799              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 118


 3800              		@ frame_needed = 1, uses_anonymous_args = 0
 3801 0000 80B5     		push	{r7, lr}
 3802              		.cfi_def_cfa_offset 8
 3803              		.cfi_offset 7, -8
 3804              		.cfi_offset 14, -4
 3805 0002 00AF     		add	r7, sp, #0
 3806              		.cfi_def_cfa_register 7
2853:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_CVR_REG);
 3807              		.loc 1 2853 0
 3808 0004 034B     		ldr	r3, .L283
 3809 0006 1A68     		ldr	r2, [r3]
 3810 0008 034B     		ldr	r3, .L283+4
 3811 000a 1B68     		ldr	r3, [r3]
 3812 000c 1340     		ands	r3, r2
2854:Generated_Source\PSoC4/CyLib.c **** }
 3813              		.loc 1 2854 0
 3814 000e 1800     		movs	r0, r3
 3815 0010 BD46     		mov	sp, r7
 3816              		@ sp needed
 3817 0012 80BD     		pop	{r7, pc}
 3818              	.L284:
 3819              		.align	2
 3820              	.L283:
 3821 0014 14E000E0 		.word	-536813548
 3822 0018 18E000E0 		.word	-536813544
 3823              		.cfi_endproc
 3824              	.LFE61:
 3825              		.size	CySysTickGetValue, .-CySysTickGetValue
 3826              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 3827              		.align	2
 3828              		.global	CySysTickGetCountFlag
 3829              		.code	16
 3830              		.thumb_func
 3831              		.type	CySysTickGetCountFlag, %function
 3832              	CySysTickGetCountFlag:
 3833              	.LFB62:
2855:Generated_Source\PSoC4/CyLib.c **** 
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL || CY_PSOC5)
2858:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2859:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2860:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2861:Generated_Source\PSoC4/CyLib.c ****     *
2862:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2863:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2864:Generated_Source\PSoC4/CyLib.c ****     *
2865:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2866:Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
2867:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2868:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2869:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency clock
2870:Generated_Source\PSoC4/CyLib.c ****     *                                 (ILO 100 KHz for PSoC 5LP, LFCLK for PSoC 4).
2871:Generated_Source\PSoC4/CyLib.c ****     *
2872:Generated_Source\PSoC4/CyLib.c ****     * Return:
2873:Generated_Source\PSoC4/CyLib.c ****     *  None
2874:Generated_Source\PSoC4/CyLib.c ****     *
2875:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 119


2876:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2877:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low frequency
2878:Generated_Source\PSoC4/CyLib.c ****     *  clock the counter and reload register values will remain unchanged so time to
2879:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt will be significantly bigger and vice versa.
2880:Generated_Source\PSoC4/CyLib.c ****     *
2881:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2883:Generated_Source\PSoC4/CyLib.c ****     {
2884:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2885:Generated_Source\PSoC4/CyLib.c ****         {
2886:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2887:Generated_Source\PSoC4/CyLib.c ****         }
2888:Generated_Source\PSoC4/CyLib.c ****         else
2889:Generated_Source\PSoC4/CyLib.c ****         {
2890:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2891:Generated_Source\PSoC4/CyLib.c ****         }
2892:Generated_Source\PSoC4/CyLib.c ****     }
2893:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL || CY_PSOC5) */
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2898:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** * Summary:
2901:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2902:Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2905:Generated_Source\PSoC4/CyLib.c **** *  None
2906:Generated_Source\PSoC4/CyLib.c **** *
2907:Generated_Source\PSoC4/CyLib.c **** * Return:
2908:Generated_Source\PSoC4/CyLib.c **** *  Returns non-zero value is counter is set, otherwise zero is returned.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** *
2911:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2912:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2913:Generated_Source\PSoC4/CyLib.c **** *
2914:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2915:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2916:Generated_Source\PSoC4/CyLib.c **** {
 3834              		.loc 1 2916 0
 3835              		.cfi_startproc
 3836              		@ args = 0, pretend = 0, frame = 0
 3837              		@ frame_needed = 1, uses_anonymous_args = 0
 3838 0000 80B5     		push	{r7, lr}
 3839              		.cfi_def_cfa_offset 8
 3840              		.cfi_offset 7, -8
 3841              		.cfi_offset 14, -4
 3842 0002 00AF     		add	r7, sp, #0
 3843              		.cfi_def_cfa_register 7
2917:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 3844              		.loc 1 2917 0
 3845 0004 034B     		ldr	r3, .L287
 3846 0006 1B68     		ldr	r3, [r3]
 3847 0008 1B0C     		lsrs	r3, r3, #16
 3848 000a 0122     		movs	r2, #1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 120


 3849 000c 1340     		ands	r3, r2
2918:Generated_Source\PSoC4/CyLib.c **** }
 3850              		.loc 1 2918 0
 3851 000e 1800     		movs	r0, r3
 3852 0010 BD46     		mov	sp, r7
 3853              		@ sp needed
 3854 0012 80BD     		pop	{r7, pc}
 3855              	.L288:
 3856              		.align	2
 3857              	.L287:
 3858 0014 10E000E0 		.word	-536813552
 3859              		.cfi_endproc
 3860              	.LFE62:
 3861              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 3862              		.section	.text.CySysTickClear,"ax",%progbits
 3863              		.align	2
 3864              		.global	CySysTickClear
 3865              		.code	16
 3866              		.thumb_func
 3867              		.type	CySysTickClear, %function
 3868              	CySysTickClear:
 3869              	.LFB63:
2919:Generated_Source\PSoC4/CyLib.c **** 
2920:Generated_Source\PSoC4/CyLib.c **** 
2921:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2922:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2923:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** * Summary:
2926:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2929:Generated_Source\PSoC4/CyLib.c **** *  None
2930:Generated_Source\PSoC4/CyLib.c **** *
2931:Generated_Source\PSoC4/CyLib.c **** * Return:
2932:Generated_Source\PSoC4/CyLib.c **** *  None
2933:Generated_Source\PSoC4/CyLib.c **** *
2934:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2935:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2936:Generated_Source\PSoC4/CyLib.c **** {
 3870              		.loc 1 2936 0
 3871              		.cfi_startproc
 3872              		@ args = 0, pretend = 0, frame = 0
 3873              		@ frame_needed = 1, uses_anonymous_args = 0
 3874 0000 80B5     		push	{r7, lr}
 3875              		.cfi_def_cfa_offset 8
 3876              		.cfi_offset 7, -8
 3877              		.cfi_offset 14, -4
 3878 0002 00AF     		add	r7, sp, #0
 3879              		.cfi_def_cfa_register 7
2937:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 3880              		.loc 1 2937 0
 3881 0004 024B     		ldr	r3, .L290
 3882 0006 0022     		movs	r2, #0
 3883 0008 1A60     		str	r2, [r3]
2938:Generated_Source\PSoC4/CyLib.c **** }
 3884              		.loc 1 2938 0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 121


 3885 000a C046     		nop
 3886 000c BD46     		mov	sp, r7
 3887              		@ sp needed
 3888 000e 80BD     		pop	{r7, pc}
 3889              	.L291:
 3890              		.align	2
 3891              	.L290:
 3892 0010 18E000E0 		.word	-536813544
 3893              		.cfi_endproc
 3894              	.LFE63:
 3895              		.size	CySysTickClear, .-CySysTickClear
 3896              		.section	.text.CySysTickSetCallback,"ax",%progbits
 3897              		.align	2
 3898              		.global	CySysTickSetCallback
 3899              		.code	16
 3900              		.thumb_func
 3901              		.type	CySysTickSetCallback, %function
 3902              	CySysTickSetCallback:
 3903              	.LFB64:
2939:Generated_Source\PSoC4/CyLib.c **** 
2940:Generated_Source\PSoC4/CyLib.c **** 
2941:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2942:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2943:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** *
2945:Generated_Source\PSoC4/CyLib.c **** * Summary:
2946:Generated_Source\PSoC4/CyLib.c **** *  The function set the pointers to the functions that will be called on
2947:Generated_Source\PSoC4/CyLib.c **** *  SysTick interrupt.
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2950:Generated_Source\PSoC4/CyLib.c **** *  number:  The number of callback function address to be set.
2951:Generated_Source\PSoC4/CyLib.c **** *           The valid range is from 0 to 4.
2952:Generated_Source\PSoC4/CyLib.c **** *  CallbackFunction: Function address.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** * Return:
2955:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2956:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2957:Generated_Source\PSoC4/CyLib.c **** *
2958:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2959:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2960:Generated_Source\PSoC4/CyLib.c **** {
 3904              		.loc 1 2960 0
 3905              		.cfi_startproc
 3906              		@ args = 0, pretend = 0, frame = 16
 3907              		@ frame_needed = 1, uses_anonymous_args = 0
 3908 0000 80B5     		push	{r7, lr}
 3909              		.cfi_def_cfa_offset 8
 3910              		.cfi_offset 7, -8
 3911              		.cfi_offset 14, -4
 3912 0002 84B0     		sub	sp, sp, #16
 3913              		.cfi_def_cfa_offset 24
 3914 0004 00AF     		add	r7, sp, #0
 3915              		.cfi_def_cfa_register 7
 3916 0006 7860     		str	r0, [r7, #4]
 3917 0008 3960     		str	r1, [r7]
2961:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2962:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 122


2963:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 3918              		.loc 1 2963 0
 3919 000a 074B     		ldr	r3, .L294
 3920 000c 7A68     		ldr	r2, [r7, #4]
 3921 000e 9200     		lsls	r2, r2, #2
 3922 0010 D358     		ldr	r3, [r2, r3]
 3923 0012 FB60     		str	r3, [r7, #12]
2964:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 3924              		.loc 1 2964 0
 3925 0014 044B     		ldr	r3, .L294
 3926 0016 7A68     		ldr	r2, [r7, #4]
 3927 0018 9200     		lsls	r2, r2, #2
 3928 001a 3968     		ldr	r1, [r7]
 3929 001c D150     		str	r1, [r2, r3]
2965:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 3930              		.loc 1 2965 0
 3931 001e FB68     		ldr	r3, [r7, #12]
2966:Generated_Source\PSoC4/CyLib.c **** }
 3932              		.loc 1 2966 0
 3933 0020 1800     		movs	r0, r3
 3934 0022 BD46     		mov	sp, r7
 3935 0024 04B0     		add	sp, sp, #16
 3936              		@ sp needed
 3937 0026 80BD     		pop	{r7, pc}
 3938              	.L295:
 3939              		.align	2
 3940              	.L294:
 3941 0028 0C000000 		.word	CySysTickCallbacks
 3942              		.cfi_endproc
 3943              	.LFE64:
 3944              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 3945              		.section	.text.CySysTickGetCallback,"ax",%progbits
 3946              		.align	2
 3947              		.global	CySysTickGetCallback
 3948              		.code	16
 3949              		.thumb_func
 3950              		.type	CySysTickGetCallback, %function
 3951              	CySysTickGetCallback:
 3952              	.LFB65:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2971:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** * Summary:
2974:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2977:Generated_Source\PSoC4/CyLib.c **** *  None
2978:Generated_Source\PSoC4/CyLib.c **** *
2979:Generated_Source\PSoC4/CyLib.c **** * Return:
2980:Generated_Source\PSoC4/CyLib.c **** *  None
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2984:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 123


 3953              		.loc 1 2984 0
 3954              		.cfi_startproc
 3955              		@ args = 0, pretend = 0, frame = 8
 3956              		@ frame_needed = 1, uses_anonymous_args = 0
 3957 0000 80B5     		push	{r7, lr}
 3958              		.cfi_def_cfa_offset 8
 3959              		.cfi_offset 7, -8
 3960              		.cfi_offset 14, -4
 3961 0002 82B0     		sub	sp, sp, #8
 3962              		.cfi_def_cfa_offset 16
 3963 0004 00AF     		add	r7, sp, #0
 3964              		.cfi_def_cfa_register 7
 3965 0006 7860     		str	r0, [r7, #4]
2985:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 3966              		.loc 1 2985 0
 3967 0008 034B     		ldr	r3, .L298
 3968 000a 7A68     		ldr	r2, [r7, #4]
 3969 000c 9200     		lsls	r2, r2, #2
 3970 000e D358     		ldr	r3, [r2, r3]
2986:Generated_Source\PSoC4/CyLib.c **** }
 3971              		.loc 1 2986 0
 3972 0010 1800     		movs	r0, r3
 3973 0012 BD46     		mov	sp, r7
 3974 0014 02B0     		add	sp, sp, #8
 3975              		@ sp needed
 3976 0016 80BD     		pop	{r7, pc}
 3977              	.L299:
 3978              		.align	2
 3979              	.L298:
 3980 0018 0C000000 		.word	CySysTickCallbacks
 3981              		.cfi_endproc
 3982              	.LFE65:
 3983              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 3984              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 3985              		.align	2
 3986              		.code	16
 3987              		.thumb_func
 3988              		.type	CySysTickServiceCallbacks, %function
 3989              	CySysTickServiceCallbacks:
 3990              	.LFB66:
2987:Generated_Source\PSoC4/CyLib.c **** 
2988:Generated_Source\PSoC4/CyLib.c **** 
2989:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2990:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2991:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** * Summary:
2994:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2995:Generated_Source\PSoC4/CyLib.c **** *
2996:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2997:Generated_Source\PSoC4/CyLib.c **** *  None
2998:Generated_Source\PSoC4/CyLib.c **** *
2999:Generated_Source\PSoC4/CyLib.c **** * Return:
3000:Generated_Source\PSoC4/CyLib.c **** *  None
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3003:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 124


3004:Generated_Source\PSoC4/CyLib.c **** {
 3991              		.loc 1 3004 0
 3992              		.cfi_startproc
 3993              		@ args = 0, pretend = 0, frame = 8
 3994              		@ frame_needed = 1, uses_anonymous_args = 0
 3995 0000 80B5     		push	{r7, lr}
 3996              		.cfi_def_cfa_offset 8
 3997              		.cfi_offset 7, -8
 3998              		.cfi_offset 14, -4
 3999 0002 82B0     		sub	sp, sp, #8
 4000              		.cfi_def_cfa_offset 16
 4001 0004 00AF     		add	r7, sp, #0
 4002              		.cfi_def_cfa_register 7
3005:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3006:Generated_Source\PSoC4/CyLib.c **** 
3007:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3008:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 4003              		.loc 1 3008 0
 4004 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 4005 000a 0300     		movs	r3, r0
 4006 000c 012B     		cmp	r3, #1
 4007 000e 13D1     		bne	.L305
3009:Generated_Source\PSoC4/CyLib.c ****     {
3010:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 4008              		.loc 1 3010 0
 4009 0010 0023     		movs	r3, #0
 4010 0012 7B60     		str	r3, [r7, #4]
 4011 0014 0DE0     		b	.L302
 4012              	.L304:
3011:Generated_Source\PSoC4/CyLib.c ****         {
3012:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 4013              		.loc 1 3012 0
 4014 0016 0A4B     		ldr	r3, .L306
 4015 0018 7A68     		ldr	r2, [r7, #4]
 4016 001a 9200     		lsls	r2, r2, #2
 4017 001c D358     		ldr	r3, [r2, r3]
 4018 001e 002B     		cmp	r3, #0
 4019 0020 04D0     		beq	.L303
3013:Generated_Source\PSoC4/CyLib.c ****             {
3014:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 4020              		.loc 1 3014 0
 4021 0022 074B     		ldr	r3, .L306
 4022 0024 7A68     		ldr	r2, [r7, #4]
 4023 0026 9200     		lsls	r2, r2, #2
 4024 0028 D358     		ldr	r3, [r2, r3]
 4025 002a 9847     		blx	r3
 4026              	.L303:
3010:Generated_Source\PSoC4/CyLib.c ****         {
 4027              		.loc 1 3010 0 discriminator 2
 4028 002c 7B68     		ldr	r3, [r7, #4]
 4029 002e 0133     		adds	r3, r3, #1
 4030 0030 7B60     		str	r3, [r7, #4]
 4031              	.L302:
3010:Generated_Source\PSoC4/CyLib.c ****         {
 4032              		.loc 1 3010 0 is_stmt 0 discriminator 1
 4033 0032 7B68     		ldr	r3, [r7, #4]
 4034 0034 042B     		cmp	r3, #4
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 125


 4035 0036 EED9     		bls	.L304
 4036              	.L305:
3015:Generated_Source\PSoC4/CyLib.c ****             }
3016:Generated_Source\PSoC4/CyLib.c ****         }
3017:Generated_Source\PSoC4/CyLib.c ****     }
3018:Generated_Source\PSoC4/CyLib.c **** }
 4037              		.loc 1 3018 0 is_stmt 1
 4038 0038 C046     		nop
 4039 003a BD46     		mov	sp, r7
 4040 003c 02B0     		add	sp, sp, #8
 4041              		@ sp needed
 4042 003e 80BD     		pop	{r7, pc}
 4043              	.L307:
 4044              		.align	2
 4045              	.L306:
 4046 0040 0C000000 		.word	CySysTickCallbacks
 4047              		.cfi_endproc
 4048              	.LFE66:
 4049              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 4050              		.text
 4051              	.Letext0:
 4052              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 4053              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 4054              		.section	.debug_info,"",%progbits
 4055              	.Ldebug_info0:
 4056 0000 630C0000 		.4byte	0xc63
 4057 0004 0400     		.2byte	0x4
 4058 0006 00000000 		.4byte	.Ldebug_abbrev0
 4059 000a 04       		.byte	0x4
 4060 000b 01       		.uleb128 0x1
 4061 000c 1B040000 		.4byte	.LASF134
 4062 0010 0C       		.byte	0xc
 4063 0011 6D080000 		.4byte	.LASF135
 4064 0015 40030000 		.4byte	.LASF136
 4065 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4066 001d 00000000 		.4byte	0
 4067 0021 00000000 		.4byte	.Ldebug_line0
 4068 0025 02       		.uleb128 0x2
 4069 0026 01       		.byte	0x1
 4070 0027 06       		.byte	0x6
 4071 0028 32010000 		.4byte	.LASF0
 4072 002c 02       		.uleb128 0x2
 4073 002d 01       		.byte	0x1
 4074 002e 08       		.byte	0x8
 4075 002f 25060000 		.4byte	.LASF1
 4076 0033 02       		.uleb128 0x2
 4077 0034 02       		.byte	0x2
 4078 0035 05       		.byte	0x5
 4079 0036 51060000 		.4byte	.LASF2
 4080 003a 02       		.uleb128 0x2
 4081 003b 02       		.byte	0x2
 4082 003c 07       		.byte	0x7
 4083 003d CC030000 		.4byte	.LASF3
 4084 0041 02       		.uleb128 0x2
 4085 0042 04       		.byte	0x4
 4086 0043 05       		.byte	0x5
 4087 0044 A5010000 		.4byte	.LASF4
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 126


 4088 0048 02       		.uleb128 0x2
 4089 0049 04       		.byte	0x4
 4090 004a 07       		.byte	0x7
 4091 004b 03030000 		.4byte	.LASF5
 4092 004f 02       		.uleb128 0x2
 4093 0050 08       		.byte	0x8
 4094 0051 05       		.byte	0x5
 4095 0052 24010000 		.4byte	.LASF6
 4096 0056 02       		.uleb128 0x2
 4097 0057 08       		.byte	0x8
 4098 0058 07       		.byte	0x7
 4099 0059 B8000000 		.4byte	.LASF7
 4100 005d 03       		.uleb128 0x3
 4101 005e 04       		.byte	0x4
 4102 005f 05       		.byte	0x5
 4103 0060 696E7400 		.ascii	"int\000"
 4104 0064 02       		.uleb128 0x2
 4105 0065 04       		.byte	0x4
 4106 0066 07       		.byte	0x7
 4107 0067 DC020000 		.4byte	.LASF8
 4108 006b 04       		.uleb128 0x4
 4109 006c D0010000 		.4byte	.LASF9
 4110 0070 02       		.byte	0x2
 4111 0071 A1       		.byte	0xa1
 4112 0072 2C000000 		.4byte	0x2c
 4113 0076 04       		.uleb128 0x4
 4114 0077 1A000000 		.4byte	.LASF10
 4115 007b 02       		.byte	0x2
 4116 007c A2       		.byte	0xa2
 4117 007d 3A000000 		.4byte	0x3a
 4118 0081 04       		.uleb128 0x4
 4119 0082 42020000 		.4byte	.LASF11
 4120 0086 02       		.byte	0x2
 4121 0087 A3       		.byte	0xa3
 4122 0088 48000000 		.4byte	0x48
 4123 008c 02       		.uleb128 0x2
 4124 008d 04       		.byte	0x4
 4125 008e 04       		.byte	0x4
 4126 008f B6050000 		.4byte	.LASF12
 4127 0093 02       		.uleb128 0x2
 4128 0094 08       		.byte	0x8
 4129 0095 04       		.byte	0x4
 4130 0096 EC010000 		.4byte	.LASF13
 4131 009a 02       		.uleb128 0x2
 4132 009b 01       		.byte	0x1
 4133 009c 08       		.byte	0x8
 4134 009d FD060000 		.4byte	.LASF14
 4135 00a1 05       		.uleb128 0x5
 4136 00a2 0F060000 		.4byte	.LASF15
 4137 00a6 02       		.byte	0x2
 4138 00a7 4B01     		.2byte	0x14b
 4139 00a9 AD000000 		.4byte	0xad
 4140 00ad 06       		.uleb128 0x6
 4141 00ae 6B000000 		.4byte	0x6b
 4142 00b2 05       		.uleb128 0x5
 4143 00b3 BB040000 		.4byte	.LASF16
 4144 00b7 02       		.byte	0x2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 127


 4145 00b8 4D01     		.2byte	0x14d
 4146 00ba BE000000 		.4byte	0xbe
 4147 00be 06       		.uleb128 0x6
 4148 00bf 81000000 		.4byte	0x81
 4149 00c3 05       		.uleb128 0x5
 4150 00c4 10070000 		.4byte	.LASF17
 4151 00c8 02       		.byte	0x2
 4152 00c9 5D01     		.2byte	0x15d
 4153 00cb CF000000 		.4byte	0xcf
 4154 00cf 07       		.uleb128 0x7
 4155 00d0 04       		.byte	0x4
 4156 00d1 D5000000 		.4byte	0xd5
 4157 00d5 08       		.uleb128 0x8
 4158 00d6 02       		.uleb128 0x2
 4159 00d7 08       		.byte	0x8
 4160 00d8 04       		.byte	0x4
 4161 00d9 1E050000 		.4byte	.LASF18
 4162 00dd 02       		.uleb128 0x2
 4163 00de 04       		.byte	0x4
 4164 00df 07       		.byte	0x7
 4165 00e0 03050000 		.4byte	.LASF19
 4166 00e4 04       		.uleb128 0x4
 4167 00e5 BC050000 		.4byte	.LASF20
 4168 00e9 03       		.byte	0x3
 4169 00ea 8B       		.byte	0x8b
 4170 00eb CF000000 		.4byte	0xcf
 4171 00ef 09       		.uleb128 0x9
 4172 00f0 31080000 		.4byte	.LASF21
 4173 00f4 01       		.byte	0x1
 4174 00f5 57       		.byte	0x57
 4175 00f6 00000000 		.4byte	.LFB0
 4176 00fa 1C000000 		.4byte	.LFE0-.LFB0
 4177 00fe 01       		.uleb128 0x1
 4178 00ff 9C       		.byte	0x9c
 4179 0100 09       		.uleb128 0x9
 4180 0101 30030000 		.4byte	.LASF22
 4181 0105 01       		.byte	0x1
 4182 0106 6B       		.byte	0x6b
 4183 0107 00000000 		.4byte	.LFB1
 4184 010b 1C000000 		.4byte	.LFE1-.LFB1
 4185 010f 01       		.uleb128 0x1
 4186 0110 9C       		.byte	0x9c
 4187 0111 09       		.uleb128 0x9
 4188 0112 F5030000 		.4byte	.LASF23
 4189 0116 01       		.byte	0x1
 4190 0117 7F       		.byte	0x7f
 4191 0118 00000000 		.4byte	.LFB2
 4192 011c 1C000000 		.4byte	.LFE2-.LFB2
 4193 0120 01       		.uleb128 0x1
 4194 0121 9C       		.byte	0x9c
 4195 0122 0A       		.uleb128 0xa
 4196 0123 F3010000 		.4byte	.LASF24
 4197 0127 01       		.byte	0x1
 4198 0128 9E       		.byte	0x9e
 4199 0129 00000000 		.4byte	.LFB3
 4200 012d 4C000000 		.4byte	.LFE3-.LFB3
 4201 0131 01       		.uleb128 0x1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 128


 4202 0132 9C       		.byte	0x9c
 4203 0133 46010000 		.4byte	0x146
 4204 0137 0B       		.uleb128 0xb
 4205 0138 61010000 		.4byte	.LASF26
 4206 013c 01       		.byte	0x1
 4207 013d A1       		.byte	0xa1
 4208 013e 6B000000 		.4byte	0x6b
 4209 0142 02       		.uleb128 0x2
 4210 0143 91       		.byte	0x91
 4211 0144 6F       		.sleb128 -17
 4212 0145 00       		.byte	0
 4213 0146 0C       		.uleb128 0xc
 4214 0147 B9060000 		.4byte	.LASF37
 4215 014b 01       		.byte	0x1
 4216 014c D2       		.byte	0xd2
 4217 014d 81000000 		.4byte	0x81
 4218 0151 00000000 		.4byte	.LFB4
 4219 0155 1C000000 		.4byte	.LFE4-.LFB4
 4220 0159 01       		.uleb128 0x1
 4221 015a 9C       		.byte	0x9c
 4222 015b 0D       		.uleb128 0xd
 4223 015c 30000000 		.4byte	.LASF25
 4224 0160 01       		.byte	0x1
 4225 0161 5501     		.2byte	0x155
 4226 0163 00000000 		.4byte	.LFB5
 4227 0167 44000000 		.4byte	.LFE5-.LFB5
 4228 016b 01       		.uleb128 0x1
 4229 016c 9C       		.byte	0x9c
 4230 016d 90010000 		.4byte	0x190
 4231 0171 0E       		.uleb128 0xe
 4232 0172 AF060000 		.4byte	.LASF28
 4233 0176 01       		.byte	0x1
 4234 0177 5501     		.2byte	0x155
 4235 0179 81000000 		.4byte	0x81
 4236 017d 02       		.uleb128 0x2
 4237 017e 91       		.byte	0x91
 4238 017f 64       		.sleb128 -28
 4239 0180 0F       		.uleb128 0xf
 4240 0181 61010000 		.4byte	.LASF26
 4241 0185 01       		.byte	0x1
 4242 0186 5701     		.2byte	0x157
 4243 0188 6B000000 		.4byte	0x6b
 4244 018c 02       		.uleb128 0x2
 4245 018d 91       		.byte	0x91
 4246 018e 6F       		.sleb128 -17
 4247 018f 00       		.byte	0
 4248 0190 0D       		.uleb128 0xd
 4249 0191 3A070000 		.4byte	.LASF27
 4250 0195 01       		.byte	0x1
 4251 0196 8601     		.2byte	0x186
 4252 0198 00000000 		.4byte	.LFB6
 4253 019c 48000000 		.4byte	.LFE6-.LFB6
 4254 01a0 01       		.uleb128 0x1
 4255 01a1 9C       		.byte	0x9c
 4256 01a2 C5010000 		.4byte	0x1c5
 4257 01a6 0E       		.uleb128 0xe
 4258 01a7 20080000 		.4byte	.LASF29
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 129


 4259 01ab 01       		.byte	0x1
 4260 01ac 8601     		.2byte	0x186
 4261 01ae 81000000 		.4byte	0x81
 4262 01b2 02       		.uleb128 0x2
 4263 01b3 91       		.byte	0x91
 4264 01b4 64       		.sleb128 -28
 4265 01b5 0F       		.uleb128 0xf
 4266 01b6 61010000 		.4byte	.LASF26
 4267 01ba 01       		.byte	0x1
 4268 01bb 8801     		.2byte	0x188
 4269 01bd 6B000000 		.4byte	0x6b
 4270 01c1 02       		.uleb128 0x2
 4271 01c2 91       		.byte	0x91
 4272 01c3 6F       		.sleb128 -17
 4273 01c4 00       		.byte	0
 4274 01c5 0D       		.uleb128 0xd
 4275 01c6 06040000 		.4byte	.LASF30
 4276 01ca 01       		.byte	0x1
 4277 01cb AE01     		.2byte	0x1ae
 4278 01cd 00000000 		.4byte	.LFB7
 4279 01d1 E4010000 		.4byte	.LFE7-.LFB7
 4280 01d5 01       		.uleb128 0x1
 4281 01d6 9C       		.byte	0x9c
 4282 01d7 36020000 		.4byte	0x236
 4283 01db 0E       		.uleb128 0xe
 4284 01dc 3E010000 		.4byte	.LASF31
 4285 01e0 01       		.byte	0x1
 4286 01e1 AE01     		.2byte	0x1ae
 4287 01e3 81000000 		.4byte	0x81
 4288 01e7 02       		.uleb128 0x2
 4289 01e8 91       		.byte	0x91
 4290 01e9 64       		.sleb128 -28
 4291 01ea 0F       		.uleb128 0xf
 4292 01eb 12000000 		.4byte	.LASF32
 4293 01ef 01       		.byte	0x1
 4294 01f0 B001     		.2byte	0x1b0
 4295 01f2 6B000000 		.4byte	0x6b
 4296 01f6 02       		.uleb128 0x2
 4297 01f7 91       		.byte	0x91
 4298 01f8 6F       		.sleb128 -17
 4299 01f9 0F       		.uleb128 0xf
 4300 01fa 32050000 		.4byte	.LASF33
 4301 01fe 01       		.byte	0x1
 4302 01ff B101     		.2byte	0x1b1
 4303 0201 6B000000 		.4byte	0x6b
 4304 0205 02       		.uleb128 0x2
 4305 0206 91       		.byte	0x91
 4306 0207 6E       		.sleb128 -18
 4307 0208 0F       		.uleb128 0xf
 4308 0209 61010000 		.4byte	.LASF26
 4309 020d 01       		.byte	0x1
 4310 020e B201     		.2byte	0x1b2
 4311 0210 6B000000 		.4byte	0x6b
 4312 0214 02       		.uleb128 0x2
 4313 0215 91       		.byte	0x91
 4314 0216 6B       		.sleb128 -21
 4315 0217 0F       		.uleb128 0xf
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 130


 4316 0218 5C080000 		.4byte	.LASF34
 4317 021c 01       		.byte	0x1
 4318 021d B301     		.2byte	0x1b3
 4319 021f 6B000000 		.4byte	0x6b
 4320 0223 02       		.uleb128 0x2
 4321 0224 91       		.byte	0x91
 4322 0225 6C       		.sleb128 -20
 4323 0226 0F       		.uleb128 0xf
 4324 0227 84000000 		.4byte	.LASF35
 4325 022b 01       		.byte	0x1
 4326 022c B401     		.2byte	0x1b4
 4327 022e 6B000000 		.4byte	0x6b
 4328 0232 02       		.uleb128 0x2
 4329 0233 91       		.byte	0x91
 4330 0234 6D       		.sleb128 -19
 4331 0235 00       		.byte	0
 4332 0236 0D       		.uleb128 0xd
 4333 0237 2D070000 		.4byte	.LASF36
 4334 023b 01       		.byte	0x1
 4335 023c C603     		.2byte	0x3c6
 4336 023e 00000000 		.4byte	.LFB8
 4337 0242 34000000 		.4byte	.LFE8-.LFB8
 4338 0246 01       		.uleb128 0x1
 4339 0247 9C       		.byte	0x9c
 4340 0248 5C020000 		.4byte	0x25c
 4341 024c 0F       		.uleb128 0xf
 4342 024d 61010000 		.4byte	.LASF26
 4343 0251 01       		.byte	0x1
 4344 0252 C803     		.2byte	0x3c8
 4345 0254 6B000000 		.4byte	0x6b
 4346 0258 02       		.uleb128 0x2
 4347 0259 91       		.byte	0x91
 4348 025a 6F       		.sleb128 -17
 4349 025b 00       		.byte	0
 4350 025c 10       		.uleb128 0x10
 4351 025d 00060000 		.4byte	.LASF38
 4352 0261 01       		.byte	0x1
 4353 0262 E003     		.2byte	0x3e0
 4354 0264 81000000 		.4byte	0x81
 4355 0268 00000000 		.4byte	.LFB9
 4356 026c 20000000 		.4byte	.LFE9-.LFB9
 4357 0270 01       		.uleb128 0x1
 4358 0271 9C       		.byte	0x9c
 4359 0272 0D       		.uleb128 0xd
 4360 0273 49000000 		.4byte	.LASF39
 4361 0277 01       		.byte	0x1
 4362 0278 F503     		.2byte	0x3f5
 4363 027a 00000000 		.4byte	.LFB10
 4364 027e 50000000 		.4byte	.LFE10-.LFB10
 4365 0282 01       		.uleb128 0x1
 4366 0283 9C       		.byte	0x9c
 4367 0284 98020000 		.4byte	0x298
 4368 0288 0F       		.uleb128 0xf
 4369 0289 61010000 		.4byte	.LASF26
 4370 028d 01       		.byte	0x1
 4371 028e F703     		.2byte	0x3f7
 4372 0290 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 131


 4373 0294 02       		.uleb128 0x2
 4374 0295 91       		.byte	0x91
 4375 0296 6F       		.sleb128 -17
 4376 0297 00       		.byte	0
 4377 0298 11       		.uleb128 0x11
 4378 0299 42080000 		.4byte	.LASF44
 4379 029d 01       		.byte	0x1
 4380 029e 1A04     		.2byte	0x41a
 4381 02a0 81000000 		.4byte	0x81
 4382 02a4 00000000 		.4byte	.LFB11
 4383 02a8 34000000 		.4byte	.LFE11-.LFB11
 4384 02ac 01       		.uleb128 0x1
 4385 02ad 9C       		.byte	0x9c
 4386 02ae C2020000 		.4byte	0x2c2
 4387 02b2 0E       		.uleb128 0xe
 4388 02b3 5F000000 		.4byte	.LASF40
 4389 02b7 01       		.byte	0x1
 4390 02b8 1A04     		.2byte	0x41a
 4391 02ba 81000000 		.4byte	0x81
 4392 02be 02       		.uleb128 0x2
 4393 02bf 91       		.byte	0x91
 4394 02c0 74       		.sleb128 -12
 4395 02c1 00       		.byte	0
 4396 02c2 0D       		.uleb128 0xd
 4397 02c3 00000000 		.4byte	.LASF41
 4398 02c7 01       		.byte	0x1
 4399 02c8 3E04     		.2byte	0x43e
 4400 02ca 00000000 		.4byte	.LFB12
 4401 02ce 5C000000 		.4byte	.LFE12-.LFB12
 4402 02d2 01       		.uleb128 0x1
 4403 02d3 9C       		.byte	0x9c
 4404 02d4 06030000 		.4byte	0x306
 4405 02d8 0E       		.uleb128 0xe
 4406 02d9 5F000000 		.4byte	.LASF40
 4407 02dd 01       		.byte	0x1
 4408 02de 3E04     		.2byte	0x43e
 4409 02e0 81000000 		.4byte	0x81
 4410 02e4 02       		.uleb128 0x2
 4411 02e5 91       		.byte	0x91
 4412 02e6 6C       		.sleb128 -20
 4413 02e7 0E       		.uleb128 0xe
 4414 02e8 0B070000 		.4byte	.LASF42
 4415 02ec 01       		.byte	0x1
 4416 02ed 3E04     		.2byte	0x43e
 4417 02ef 81000000 		.4byte	0x81
 4418 02f3 02       		.uleb128 0x2
 4419 02f4 91       		.byte	0x91
 4420 02f5 68       		.sleb128 -24
 4421 02f6 0F       		.uleb128 0xf
 4422 02f7 B8070000 		.4byte	.LASF43
 4423 02fb 01       		.byte	0x1
 4424 02fc 4004     		.2byte	0x440
 4425 02fe 81000000 		.4byte	0x81
 4426 0302 02       		.uleb128 0x2
 4427 0303 91       		.byte	0x91
 4428 0304 74       		.sleb128 -12
 4429 0305 00       		.byte	0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 132


 4430 0306 12       		.uleb128 0x12
 4431 0307 57020000 		.4byte	.LASF45
 4432 030b 01       		.byte	0x1
 4433 030c 5D04     		.2byte	0x45d
 4434 030e 81000000 		.4byte	0x81
 4435 0312 00000000 		.4byte	.LFB13
 4436 0316 24000000 		.4byte	.LFE13-.LFB13
 4437 031a 01       		.uleb128 0x1
 4438 031b 9C       		.byte	0x9c
 4439 031c 30030000 		.4byte	0x330
 4440 0320 0E       		.uleb128 0xe
 4441 0321 5F000000 		.4byte	.LASF40
 4442 0325 01       		.byte	0x1
 4443 0326 5D04     		.2byte	0x45d
 4444 0328 81000000 		.4byte	0x81
 4445 032c 02       		.uleb128 0x2
 4446 032d 91       		.byte	0x91
 4447 032e 74       		.sleb128 -12
 4448 032f 00       		.byte	0
 4449 0330 0D       		.uleb128 0xd
 4450 0331 C1040000 		.4byte	.LASF46
 4451 0335 01       		.byte	0x1
 4452 0336 7E04     		.2byte	0x47e
 4453 0338 00000000 		.4byte	.LFB14
 4454 033c 6C000000 		.4byte	.LFE14-.LFB14
 4455 0340 01       		.uleb128 0x1
 4456 0341 9C       		.byte	0x9c
 4457 0342 74030000 		.4byte	0x374
 4458 0346 0E       		.uleb128 0xe
 4459 0347 5F000000 		.4byte	.LASF40
 4460 034b 01       		.byte	0x1
 4461 034c 7E04     		.2byte	0x47e
 4462 034e 81000000 		.4byte	0x81
 4463 0352 02       		.uleb128 0x2
 4464 0353 91       		.byte	0x91
 4465 0354 6C       		.sleb128 -20
 4466 0355 0E       		.uleb128 0xe
 4467 0356 E5010000 		.4byte	.LASF47
 4468 035a 01       		.byte	0x1
 4469 035b 7E04     		.2byte	0x47e
 4470 035d 81000000 		.4byte	0x81
 4471 0361 02       		.uleb128 0x2
 4472 0362 91       		.byte	0x91
 4473 0363 68       		.sleb128 -24
 4474 0364 0F       		.uleb128 0xf
 4475 0365 B8070000 		.4byte	.LASF43
 4476 0369 01       		.byte	0x1
 4477 036a 8004     		.2byte	0x480
 4478 036c 81000000 		.4byte	0x81
 4479 0370 02       		.uleb128 0x2
 4480 0371 91       		.byte	0x91
 4481 0372 74       		.sleb128 -12
 4482 0373 00       		.byte	0
 4483 0374 11       		.uleb128 0x11
 4484 0375 EA040000 		.4byte	.LASF48
 4485 0379 01       		.byte	0x1
 4486 037a A104     		.2byte	0x4a1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 133


 4487 037c 81000000 		.4byte	0x81
 4488 0380 00000000 		.4byte	.LFB15
 4489 0384 44000000 		.4byte	.LFE15-.LFB15
 4490 0388 01       		.uleb128 0x1
 4491 0389 9C       		.byte	0x9c
 4492 038a 9E030000 		.4byte	0x39e
 4493 038e 0E       		.uleb128 0xe
 4494 038f 5F000000 		.4byte	.LASF40
 4495 0393 01       		.byte	0x1
 4496 0394 A104     		.2byte	0x4a1
 4497 0396 81000000 		.4byte	0x81
 4498 039a 02       		.uleb128 0x2
 4499 039b 91       		.byte	0x91
 4500 039c 74       		.sleb128 -12
 4501 039d 00       		.byte	0
 4502 039e 0D       		.uleb128 0xd
 4503 039f AB020000 		.4byte	.LASF49
 4504 03a3 01       		.byte	0x1
 4505 03a4 CF04     		.2byte	0x4cf
 4506 03a6 00000000 		.4byte	.LFB16
 4507 03aa 64000000 		.4byte	.LFE16-.LFB16
 4508 03ae 01       		.uleb128 0x1
 4509 03af 9C       		.byte	0x9c
 4510 03b0 C4030000 		.4byte	0x3c4
 4511 03b4 0E       		.uleb128 0xe
 4512 03b5 BA020000 		.4byte	.LASF50
 4513 03b9 01       		.byte	0x1
 4514 03ba CF04     		.2byte	0x4cf
 4515 03bc 81000000 		.4byte	0x81
 4516 03c0 02       		.uleb128 0x2
 4517 03c1 91       		.byte	0x91
 4518 03c2 74       		.sleb128 -12
 4519 03c3 00       		.byte	0
 4520 03c4 0D       		.uleb128 0xd
 4521 03c5 6F060000 		.4byte	.LASF51
 4522 03c9 01       		.byte	0x1
 4523 03ca 0405     		.2byte	0x504
 4524 03cc 00000000 		.4byte	.LFB17
 4525 03d0 64000000 		.4byte	.LFE17-.LFB17
 4526 03d4 01       		.uleb128 0x1
 4527 03d5 9C       		.byte	0x9c
 4528 03d6 EA030000 		.4byte	0x3ea
 4529 03da 0E       		.uleb128 0xe
 4530 03db BA020000 		.4byte	.LASF50
 4531 03df 01       		.byte	0x1
 4532 03e0 0405     		.2byte	0x504
 4533 03e2 81000000 		.4byte	0x81
 4534 03e6 02       		.uleb128 0x2
 4535 03e7 91       		.byte	0x91
 4536 03e8 74       		.sleb128 -12
 4537 03e9 00       		.byte	0
 4538 03ea 0D       		.uleb128 0xd
 4539 03eb 03020000 		.4byte	.LASF52
 4540 03ef 01       		.byte	0x1
 4541 03f0 4305     		.2byte	0x543
 4542 03f2 00000000 		.4byte	.LFB18
 4543 03f6 58000000 		.4byte	.LFE18-.LFB18
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 134


 4544 03fa 01       		.uleb128 0x1
 4545 03fb 9C       		.byte	0x9c
 4546 03fc 2E040000 		.4byte	0x42e
 4547 0400 0E       		.uleb128 0xe
 4548 0401 14080000 		.4byte	.LASF53
 4549 0405 01       		.byte	0x1
 4550 0406 4305     		.2byte	0x543
 4551 0408 81000000 		.4byte	0x81
 4552 040c 02       		.uleb128 0x2
 4553 040d 91       		.byte	0x91
 4554 040e 64       		.sleb128 -28
 4555 040f 0F       		.uleb128 0xf
 4556 0410 B8070000 		.4byte	.LASF43
 4557 0414 01       		.byte	0x1
 4558 0415 4505     		.2byte	0x545
 4559 0417 81000000 		.4byte	0x81
 4560 041b 02       		.uleb128 0x2
 4561 041c 91       		.byte	0x91
 4562 041d 68       		.sleb128 -24
 4563 041e 0F       		.uleb128 0xf
 4564 041f 88020000 		.4byte	.LASF54
 4565 0423 01       		.byte	0x1
 4566 0424 4605     		.2byte	0x546
 4567 0426 81000000 		.4byte	0x81
 4568 042a 02       		.uleb128 0x2
 4569 042b 91       		.byte	0x91
 4570 042c 6C       		.sleb128 -20
 4571 042d 00       		.byte	0
 4572 042e 13       		.uleb128 0x13
 4573 042f 5B060000 		.4byte	.LASF60
 4574 0433 01       		.byte	0x1
 4575 0434 6805     		.2byte	0x568
 4576 0436 81000000 		.4byte	0x81
 4577 043a 00000000 		.4byte	.LFB19
 4578 043e 1C000000 		.4byte	.LFE19-.LFB19
 4579 0442 01       		.uleb128 0x1
 4580 0443 9C       		.byte	0x9c
 4581 0444 0D       		.uleb128 0xd
 4582 0445 8D010000 		.4byte	.LASF55
 4583 0449 01       		.byte	0x1
 4584 044a 8105     		.2byte	0x581
 4585 044c 00000000 		.4byte	.LFB20
 4586 0450 6C000000 		.4byte	.LFE20-.LFB20
 4587 0454 01       		.uleb128 0x1
 4588 0455 9C       		.byte	0x9c
 4589 0456 88040000 		.4byte	0x488
 4590 045a 0E       		.uleb128 0xe
 4591 045b 5F000000 		.4byte	.LASF40
 4592 045f 01       		.byte	0x1
 4593 0460 8105     		.2byte	0x581
 4594 0462 81000000 		.4byte	0x81
 4595 0466 02       		.uleb128 0x2
 4596 0467 91       		.byte	0x91
 4597 0468 6C       		.sleb128 -20
 4598 0469 0E       		.uleb128 0xe
 4599 046a 41050000 		.4byte	.LASF56
 4600 046e 01       		.byte	0x1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 135


 4601 046f 8105     		.2byte	0x581
 4602 0471 81000000 		.4byte	0x81
 4603 0475 02       		.uleb128 0x2
 4604 0476 91       		.byte	0x91
 4605 0477 68       		.sleb128 -24
 4606 0478 0F       		.uleb128 0xf
 4607 0479 4E020000 		.4byte	.LASF57
 4608 047d 01       		.byte	0x1
 4609 047e 8305     		.2byte	0x583
 4610 0480 81000000 		.4byte	0x81
 4611 0484 02       		.uleb128 0x2
 4612 0485 91       		.byte	0x91
 4613 0486 74       		.sleb128 -12
 4614 0487 00       		.byte	0
 4615 0488 0D       		.uleb128 0xd
 4616 0489 C6080000 		.4byte	.LASF58
 4617 048d 01       		.byte	0x1
 4618 048e AD05     		.2byte	0x5ad
 4619 0490 00000000 		.4byte	.LFB21
 4620 0494 48000000 		.4byte	.LFE21-.LFB21
 4621 0498 01       		.uleb128 0x1
 4622 0499 9C       		.byte	0x9c
 4623 049a BD040000 		.4byte	0x4bd
 4624 049e 0E       		.uleb128 0xe
 4625 049f A0010000 		.4byte	.LASF59
 4626 04a3 01       		.byte	0x1
 4627 04a4 AD05     		.2byte	0x5ad
 4628 04a6 81000000 		.4byte	0x81
 4629 04aa 02       		.uleb128 0x2
 4630 04ab 91       		.byte	0x91
 4631 04ac 6C       		.sleb128 -20
 4632 04ad 0F       		.uleb128 0xf
 4633 04ae B8070000 		.4byte	.LASF43
 4634 04b2 01       		.byte	0x1
 4635 04b3 AF05     		.2byte	0x5af
 4636 04b5 81000000 		.4byte	0x81
 4637 04b9 02       		.uleb128 0x2
 4638 04ba 91       		.byte	0x91
 4639 04bb 74       		.sleb128 -12
 4640 04bc 00       		.byte	0
 4641 04bd 13       		.uleb128 0x13
 4642 04be EA050000 		.4byte	.LASF61
 4643 04c2 01       		.byte	0x1
 4644 04c3 C905     		.2byte	0x5c9
 4645 04c5 81000000 		.4byte	0x81
 4646 04c9 00000000 		.4byte	.LFB22
 4647 04cd 18000000 		.4byte	.LFE22-.LFB22
 4648 04d1 01       		.uleb128 0x1
 4649 04d2 9C       		.byte	0x9c
 4650 04d3 11       		.uleb128 0x11
 4651 04d4 9D060000 		.4byte	.LASF62
 4652 04d8 01       		.byte	0x1
 4653 04d9 DE05     		.2byte	0x5de
 4654 04db 81000000 		.4byte	0x81
 4655 04df 00000000 		.4byte	.LFB23
 4656 04e3 40000000 		.4byte	.LFE23-.LFB23
 4657 04e7 01       		.uleb128 0x1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 136


 4658 04e8 9C       		.byte	0x9c
 4659 04e9 FD040000 		.4byte	0x4fd
 4660 04ed 0E       		.uleb128 0xe
 4661 04ee 5F000000 		.4byte	.LASF40
 4662 04f2 01       		.byte	0x1
 4663 04f3 DE05     		.2byte	0x5de
 4664 04f5 81000000 		.4byte	0x81
 4665 04f9 02       		.uleb128 0x2
 4666 04fa 91       		.byte	0x91
 4667 04fb 74       		.sleb128 -12
 4668 04fc 00       		.byte	0
 4669 04fd 11       		.uleb128 0x11
 4670 04fe 43010000 		.4byte	.LASF63
 4671 0502 01       		.byte	0x1
 4672 0503 F605     		.2byte	0x5f6
 4673 0505 81000000 		.4byte	0x81
 4674 0509 00000000 		.4byte	.LFB24
 4675 050d 54000000 		.4byte	.LFE24-.LFB24
 4676 0511 01       		.uleb128 0x1
 4677 0512 9C       		.byte	0x9c
 4678 0513 36050000 		.4byte	0x536
 4679 0517 0E       		.uleb128 0xe
 4680 0518 5F000000 		.4byte	.LASF40
 4681 051c 01       		.byte	0x1
 4682 051d F605     		.2byte	0x5f6
 4683 051f 81000000 		.4byte	0x81
 4684 0523 02       		.uleb128 0x2
 4685 0524 91       		.byte	0x91
 4686 0525 6C       		.sleb128 -20
 4687 0526 0F       		.uleb128 0xf
 4688 0527 4E020000 		.4byte	.LASF57
 4689 052b 01       		.byte	0x1
 4690 052c F805     		.2byte	0x5f8
 4691 052e 81000000 		.4byte	0x81
 4692 0532 02       		.uleb128 0x2
 4693 0533 91       		.byte	0x91
 4694 0534 74       		.sleb128 -12
 4695 0535 00       		.byte	0
 4696 0536 13       		.uleb128 0x13
 4697 0537 CC060000 		.4byte	.LASF64
 4698 053b 01       		.byte	0x1
 4699 053c 2706     		.2byte	0x627
 4700 053e 81000000 		.4byte	0x81
 4701 0542 00000000 		.4byte	.LFB25
 4702 0546 1C000000 		.4byte	.LFE25-.LFB25
 4703 054a 01       		.uleb128 0x1
 4704 054b 9C       		.byte	0x9c
 4705 054c 0D       		.uleb128 0xd
 4706 054d 9F050000 		.4byte	.LASF65
 4707 0551 01       		.byte	0x1
 4708 0552 4906     		.2byte	0x649
 4709 0554 00000000 		.4byte	.LFB26
 4710 0558 6C000000 		.4byte	.LFE26-.LFB26
 4711 055c 01       		.uleb128 0x1
 4712 055d 9C       		.byte	0x9c
 4713 055e 90050000 		.4byte	0x590
 4714 0562 0E       		.uleb128 0xe
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 137


 4715 0563 BA020000 		.4byte	.LASF50
 4716 0567 01       		.byte	0x1
 4717 0568 4906     		.2byte	0x649
 4718 056a 81000000 		.4byte	0x81
 4719 056e 02       		.uleb128 0x2
 4720 056f 91       		.byte	0x91
 4721 0570 64       		.sleb128 -28
 4722 0571 0F       		.uleb128 0xf
 4723 0572 61010000 		.4byte	.LASF26
 4724 0576 01       		.byte	0x1
 4725 0577 4B06     		.2byte	0x64b
 4726 0579 6B000000 		.4byte	0x6b
 4727 057d 02       		.uleb128 0x2
 4728 057e 91       		.byte	0x91
 4729 057f 6B       		.sleb128 -21
 4730 0580 0F       		.uleb128 0xf
 4731 0581 D6070000 		.4byte	.LASF66
 4732 0585 01       		.byte	0x1
 4733 0586 4C06     		.2byte	0x64c
 4734 0588 81000000 		.4byte	0x81
 4735 058c 02       		.uleb128 0x2
 4736 058d 91       		.byte	0x91
 4737 058e 6C       		.sleb128 -20
 4738 058f 00       		.byte	0
 4739 0590 14       		.uleb128 0x14
 4740 0591 78050000 		.4byte	.LASF67
 4741 0595 01       		.byte	0x1
 4742 0596 8106     		.2byte	0x681
 4743 0598 00000000 		.4byte	.LFB27
 4744 059c 28000000 		.4byte	.LFE27-.LFB27
 4745 05a0 01       		.uleb128 0x1
 4746 05a1 9C       		.byte	0x9c
 4747 05a2 B6050000 		.4byte	0x5b6
 4748 05a6 0E       		.uleb128 0xe
 4749 05a7 1E020000 		.4byte	.LASF68
 4750 05ab 01       		.byte	0x1
 4751 05ac 8106     		.2byte	0x681
 4752 05ae 81000000 		.4byte	0x81
 4753 05b2 02       		.uleb128 0x2
 4754 05b3 91       		.byte	0x91
 4755 05b4 74       		.sleb128 -12
 4756 05b5 00       		.byte	0
 4757 05b6 15       		.uleb128 0x15
 4758 05b7 6A000000 		.4byte	.LASF122
 4759 05bb 01       		.byte	0x1
 4760 05bc A806     		.2byte	0x6a8
 4761 05be 00000000 		.4byte	.LFB28
 4762 05c2 98000000 		.4byte	.LFE28-.LFB28
 4763 05c6 01       		.uleb128 0x1
 4764 05c7 9C       		.byte	0x9c
 4765 05c8 DC050000 		.4byte	0x5dc
 4766 05cc 0F       		.uleb128 0xf
 4767 05cd E9020000 		.4byte	.LASF69
 4768 05d1 01       		.byte	0x1
 4769 05d2 AA06     		.2byte	0x6aa
 4770 05d4 81000000 		.4byte	0x81
 4771 05d8 02       		.uleb128 0x2
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 138


 4772 05d9 91       		.byte	0x91
 4773 05da 74       		.sleb128 -12
 4774 05db 00       		.byte	0
 4775 05dc 16       		.uleb128 0x16
 4776 05dd 7E030000 		.4byte	.LASF137
 4777 05e1 01       		.byte	0x1
 4778 05e2 E206     		.2byte	0x6e2
 4779 05e4 00000000 		.4byte	.LFB29
 4780 05e8 3C000000 		.4byte	.LFE29-.LFB29
 4781 05ec 01       		.uleb128 0x1
 4782 05ed 9C       		.byte	0x9c
 4783 05ee 14       		.uleb128 0x14
 4784 05ef 68020000 		.4byte	.LASF70
 4785 05f3 01       		.byte	0x1
 4786 05f4 0408     		.2byte	0x804
 4787 05f6 00000000 		.4byte	.LFB30
 4788 05fa 48000000 		.4byte	.LFE30-.LFB30
 4789 05fe 01       		.uleb128 0x1
 4790 05ff 9C       		.byte	0x9c
 4791 0600 14060000 		.4byte	0x614
 4792 0604 0E       		.uleb128 0xe
 4793 0605 14060000 		.4byte	.LASF71
 4794 0609 01       		.byte	0x1
 4795 060a 0408     		.2byte	0x804
 4796 060c 81000000 		.4byte	0x81
 4797 0610 02       		.uleb128 0x2
 4798 0611 91       		.byte	0x91
 4799 0612 74       		.sleb128 -12
 4800 0613 00       		.byte	0
 4801 0614 17       		.uleb128 0x17
 4802 0615 A8070000 		.4byte	.LASF72
 4803 0619 01       		.byte	0x1
 4804 061a 1D08     		.2byte	0x81d
 4805 061c 00000000 		.4byte	.LFB31
 4806 0620 2C000000 		.4byte	.LFE31-.LFB31
 4807 0624 01       		.uleb128 0x1
 4808 0625 9C       		.byte	0x9c
 4809 0626 13       		.uleb128 0x13
 4810 0627 15030000 		.4byte	.LASF73
 4811 062b 01       		.byte	0x1
 4812 062c 3308     		.2byte	0x833
 4813 062e 81000000 		.4byte	0x81
 4814 0632 00000000 		.4byte	.LFB32
 4815 0636 18000000 		.4byte	.LFE32-.LFB32
 4816 063a 01       		.uleb128 0x1
 4817 063b 9C       		.byte	0x9c
 4818 063c 17       		.uleb128 0x17
 4819 063d 2B020000 		.4byte	.LASF74
 4820 0641 01       		.byte	0x1
 4821 0642 4708     		.2byte	0x847
 4822 0644 00000000 		.4byte	.LFB33
 4823 0648 14000000 		.4byte	.LFE33-.LFB33
 4824 064c 01       		.uleb128 0x1
 4825 064d 9C       		.byte	0x9c
 4826 064e 12       		.uleb128 0x12
 4827 064f B8030000 		.4byte	.LASF75
 4828 0653 01       		.byte	0x1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 139


 4829 0654 6308     		.2byte	0x863
 4830 0656 81000000 		.4byte	0x81
 4831 065a 00000000 		.4byte	.LFB34
 4832 065e 30000000 		.4byte	.LFE34-.LFB34
 4833 0662 01       		.uleb128 0x1
 4834 0663 9C       		.byte	0x9c
 4835 0664 87060000 		.4byte	0x687
 4836 0668 0E       		.uleb128 0xe
 4837 0669 E7060000 		.4byte	.LASF76
 4838 066d 01       		.byte	0x1
 4839 066e 6308     		.2byte	0x863
 4840 0670 81000000 		.4byte	0x81
 4841 0674 02       		.uleb128 0x2
 4842 0675 91       		.byte	0x91
 4843 0676 6C       		.sleb128 -20
 4844 0677 0F       		.uleb128 0xf
 4845 0678 E3070000 		.4byte	.LASF77
 4846 067c 01       		.byte	0x1
 4847 067d 6508     		.2byte	0x865
 4848 067f 81000000 		.4byte	0x81
 4849 0683 02       		.uleb128 0x2
 4850 0684 91       		.byte	0x91
 4851 0685 74       		.sleb128 -12
 4852 0686 00       		.byte	0
 4853 0687 12       		.uleb128 0x12
 4854 0688 AA030000 		.4byte	.LASF78
 4855 068c 01       		.byte	0x1
 4856 068d 7E08     		.2byte	0x87e
 4857 068f 81000000 		.4byte	0x81
 4858 0693 00000000 		.4byte	.LFB35
 4859 0697 24000000 		.4byte	.LFE35-.LFB35
 4860 069b 01       		.uleb128 0x1
 4861 069c 9C       		.byte	0x9c
 4862 069d B1060000 		.4byte	0x6b1
 4863 06a1 0F       		.uleb128 0xf
 4864 06a2 21000000 		.4byte	.LASF79
 4865 06a6 01       		.byte	0x1
 4866 06a7 8008     		.2byte	0x880
 4867 06a9 81000000 		.4byte	0x81
 4868 06ad 02       		.uleb128 0x2
 4869 06ae 91       		.byte	0x91
 4870 06af 74       		.sleb128 -12
 4871 06b0 00       		.byte	0
 4872 06b1 14       		.uleb128 0x14
 4873 06b2 E0000000 		.4byte	.LASF80
 4874 06b6 01       		.byte	0x1
 4875 06b7 9A08     		.2byte	0x89a
 4876 06b9 00000000 		.4byte	.LFB36
 4877 06bd 1C000000 		.4byte	.LFE36-.LFB36
 4878 06c1 01       		.uleb128 0x1
 4879 06c2 9C       		.byte	0x9c
 4880 06c3 D7060000 		.4byte	0x6d7
 4881 06c7 0E       		.uleb128 0xe
 4882 06c8 49020000 		.4byte	.LASF81
 4883 06cc 01       		.byte	0x1
 4884 06cd 9A08     		.2byte	0x89a
 4885 06cf 81000000 		.4byte	0x81
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 140


 4886 06d3 02       		.uleb128 0x2
 4887 06d4 91       		.byte	0x91
 4888 06d5 74       		.sleb128 -12
 4889 06d6 00       		.byte	0
 4890 06d7 11       		.uleb128 0x11
 4891 06d8 A9040000 		.4byte	.LASF82
 4892 06dc 01       		.byte	0x1
 4893 06dd B608     		.2byte	0x8b6
 4894 06df C3000000 		.4byte	0xc3
 4895 06e3 00000000 		.4byte	.LFB37
 4896 06e7 48000000 		.4byte	.LFE37-.LFB37
 4897 06eb 01       		.uleb128 0x1
 4898 06ec 9C       		.byte	0x9c
 4899 06ed 2E070000 		.4byte	0x72e
 4900 06f1 0E       		.uleb128 0xe
 4901 06f2 EE030000 		.4byte	.LASF83
 4902 06f6 01       		.byte	0x1
 4903 06f7 B608     		.2byte	0x8b6
 4904 06f9 6B000000 		.4byte	0x6b
 4905 06fd 02       		.uleb128 0x2
 4906 06fe 91       		.byte	0x91
 4907 06ff 6F       		.sleb128 -17
 4908 0700 0E       		.uleb128 0xe
 4909 0701 2A050000 		.4byte	.LASF84
 4910 0705 01       		.byte	0x1
 4911 0706 B608     		.2byte	0x8b6
 4912 0708 C3000000 		.4byte	0xc3
 4913 070c 02       		.uleb128 0x2
 4914 070d 91       		.byte	0x91
 4915 070e 68       		.sleb128 -24
 4916 070f 0F       		.uleb128 0xf
 4917 0710 58000000 		.4byte	.LASF85
 4918 0714 01       		.byte	0x1
 4919 0715 B808     		.2byte	0x8b8
 4920 0717 C3000000 		.4byte	0xc3
 4921 071b 02       		.uleb128 0x2
 4922 071c 91       		.byte	0x91
 4923 071d 70       		.sleb128 -16
 4924 071e 0F       		.uleb128 0xf
 4925 071f EE060000 		.4byte	.LASF86
 4926 0723 01       		.byte	0x1
 4927 0724 B908     		.2byte	0x8b9
 4928 0726 2E070000 		.4byte	0x72e
 4929 072a 02       		.uleb128 0x2
 4930 072b 91       		.byte	0x91
 4931 072c 74       		.sleb128 -12
 4932 072d 00       		.byte	0
 4933 072e 07       		.uleb128 0x7
 4934 072f 04       		.byte	0x4
 4935 0730 C3000000 		.4byte	0xc3
 4936 0734 11       		.uleb128 0x11
 4937 0735 8B060000 		.4byte	.LASF87
 4938 0739 01       		.byte	0x1
 4939 073a DB08     		.2byte	0x8db
 4940 073c C3000000 		.4byte	0xc3
 4941 0740 00000000 		.4byte	.LFB38
 4942 0744 34000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 141


 4943 0748 01       		.uleb128 0x1
 4944 0749 9C       		.byte	0x9c
 4945 074a 6D070000 		.4byte	0x76d
 4946 074e 0E       		.uleb128 0xe
 4947 074f EE030000 		.4byte	.LASF83
 4948 0753 01       		.byte	0x1
 4949 0754 DB08     		.2byte	0x8db
 4950 0756 6B000000 		.4byte	0x6b
 4951 075a 02       		.uleb128 0x2
 4952 075b 91       		.byte	0x91
 4953 075c 6F       		.sleb128 -17
 4954 075d 0F       		.uleb128 0xf
 4955 075e EE060000 		.4byte	.LASF86
 4956 0762 01       		.byte	0x1
 4957 0763 DD08     		.2byte	0x8dd
 4958 0765 2E070000 		.4byte	0x72e
 4959 0769 02       		.uleb128 0x2
 4960 076a 91       		.byte	0x91
 4961 076b 74       		.sleb128 -12
 4962 076c 00       		.byte	0
 4963 076d 11       		.uleb128 0x11
 4964 076e DF030000 		.4byte	.LASF88
 4965 0772 01       		.byte	0x1
 4966 0773 F408     		.2byte	0x8f4
 4967 0775 C3000000 		.4byte	0xc3
 4968 0779 00000000 		.4byte	.LFB39
 4969 077d 4C000000 		.4byte	.LFE39-.LFB39
 4970 0781 01       		.uleb128 0x1
 4971 0782 9C       		.byte	0x9c
 4972 0783 C4070000 		.4byte	0x7c4
 4973 0787 0E       		.uleb128 0xe
 4974 0788 EE030000 		.4byte	.LASF83
 4975 078c 01       		.byte	0x1
 4976 078d F408     		.2byte	0x8f4
 4977 078f 6B000000 		.4byte	0x6b
 4978 0793 02       		.uleb128 0x2
 4979 0794 91       		.byte	0x91
 4980 0795 6F       		.sleb128 -17
 4981 0796 0E       		.uleb128 0xe
 4982 0797 2A050000 		.4byte	.LASF84
 4983 079b 01       		.byte	0x1
 4984 079c F408     		.2byte	0x8f4
 4985 079e C3000000 		.4byte	0xc3
 4986 07a2 02       		.uleb128 0x2
 4987 07a3 91       		.byte	0x91
 4988 07a4 68       		.sleb128 -24
 4989 07a5 0F       		.uleb128 0xf
 4990 07a6 58000000 		.4byte	.LASF85
 4991 07aa 01       		.byte	0x1
 4992 07ab F608     		.2byte	0x8f6
 4993 07ad C3000000 		.4byte	0xc3
 4994 07b1 02       		.uleb128 0x2
 4995 07b2 91       		.byte	0x91
 4996 07b3 70       		.sleb128 -16
 4997 07b4 0F       		.uleb128 0xf
 4998 07b5 EE060000 		.4byte	.LASF86
 4999 07b9 01       		.byte	0x1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 142


 5000 07ba F708     		.2byte	0x8f7
 5001 07bc 2E070000 		.4byte	0x72e
 5002 07c0 02       		.uleb128 0x2
 5003 07c1 91       		.byte	0x91
 5004 07c2 74       		.sleb128 -12
 5005 07c3 00       		.byte	0
 5006 07c4 11       		.uleb128 0x11
 5007 07c5 CE050000 		.4byte	.LASF89
 5008 07c9 01       		.byte	0x1
 5009 07ca 1309     		.2byte	0x913
 5010 07cc C3000000 		.4byte	0xc3
 5011 07d0 00000000 		.4byte	.LFB40
 5012 07d4 36000000 		.4byte	.LFE40-.LFB40
 5013 07d8 01       		.uleb128 0x1
 5014 07d9 9C       		.byte	0x9c
 5015 07da FD070000 		.4byte	0x7fd
 5016 07de 0E       		.uleb128 0xe
 5017 07df EE030000 		.4byte	.LASF83
 5018 07e3 01       		.byte	0x1
 5019 07e4 1309     		.2byte	0x913
 5020 07e6 6B000000 		.4byte	0x6b
 5021 07ea 02       		.uleb128 0x2
 5022 07eb 91       		.byte	0x91
 5023 07ec 6F       		.sleb128 -17
 5024 07ed 0F       		.uleb128 0xf
 5025 07ee EE060000 		.4byte	.LASF86
 5026 07f2 01       		.byte	0x1
 5027 07f3 1509     		.2byte	0x915
 5028 07f5 2E070000 		.4byte	0x72e
 5029 07f9 02       		.uleb128 0x2
 5030 07fa 91       		.byte	0x91
 5031 07fb 74       		.sleb128 -12
 5032 07fc 00       		.byte	0
 5033 07fd 0D       		.uleb128 0xd
 5034 07fe 8E050000 		.4byte	.LASF90
 5035 0802 01       		.byte	0x1
 5036 0803 2B09     		.2byte	0x92b
 5037 0805 00000000 		.4byte	.LFB41
 5038 0809 A8000000 		.4byte	.LFE41-.LFB41
 5039 080d 01       		.uleb128 0x1
 5040 080e 9C       		.byte	0x9c
 5041 080f 5F080000 		.4byte	0x85f
 5042 0813 0E       		.uleb128 0xe
 5043 0814 EE030000 		.4byte	.LASF83
 5044 0818 01       		.byte	0x1
 5045 0819 2B09     		.2byte	0x92b
 5046 081b 6B000000 		.4byte	0x6b
 5047 081f 02       		.uleb128 0x2
 5048 0820 91       		.byte	0x91
 5049 0821 5F       		.sleb128 -33
 5050 0822 0E       		.uleb128 0xe
 5051 0823 02070000 		.4byte	.LASF91
 5052 0827 01       		.byte	0x1
 5053 0828 2B09     		.2byte	0x92b
 5054 082a 6B000000 		.4byte	0x6b
 5055 082e 02       		.uleb128 0x2
 5056 082f 91       		.byte	0x91
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 143


 5057 0830 5E       		.sleb128 -34
 5058 0831 0F       		.uleb128 0xf
 5059 0832 61010000 		.4byte	.LASF26
 5060 0836 01       		.byte	0x1
 5061 0837 2D09     		.2byte	0x92d
 5062 0839 6B000000 		.4byte	0x6b
 5063 083d 02       		.uleb128 0x2
 5064 083e 91       		.byte	0x91
 5065 083f 6B       		.sleb128 -21
 5066 0840 0F       		.uleb128 0xf
 5067 0841 18020000 		.4byte	.LASF92
 5068 0845 01       		.byte	0x1
 5069 0846 2E09     		.2byte	0x92e
 5070 0848 81000000 		.4byte	0x81
 5071 084c 02       		.uleb128 0x2
 5072 084d 91       		.byte	0x91
 5073 084e 6C       		.sleb128 -20
 5074 084f 0F       		.uleb128 0xf
 5075 0850 2A000000 		.4byte	.LASF93
 5076 0854 01       		.byte	0x1
 5077 0855 2F09     		.2byte	0x92f
 5078 0857 81000000 		.4byte	0x81
 5079 085b 02       		.uleb128 0x2
 5080 085c 91       		.byte	0x91
 5081 085d 64       		.sleb128 -28
 5082 085e 00       		.byte	0
 5083 085f 11       		.uleb128 0x11
 5084 0860 77020000 		.4byte	.LASF94
 5085 0864 01       		.byte	0x1
 5086 0865 4F09     		.2byte	0x94f
 5087 0867 6B000000 		.4byte	0x6b
 5088 086b 00000000 		.4byte	.LFB42
 5089 086f 58000000 		.4byte	.LFE42-.LFB42
 5090 0873 01       		.uleb128 0x1
 5091 0874 9C       		.byte	0x9c
 5092 0875 98080000 		.4byte	0x898
 5093 0879 0E       		.uleb128 0xe
 5094 087a EE030000 		.4byte	.LASF83
 5095 087e 01       		.byte	0x1
 5096 087f 4F09     		.2byte	0x94f
 5097 0881 6B000000 		.4byte	0x6b
 5098 0885 02       		.uleb128 0x2
 5099 0886 91       		.byte	0x91
 5100 0887 6F       		.sleb128 -17
 5101 0888 0F       		.uleb128 0xf
 5102 0889 02070000 		.4byte	.LASF91
 5103 088d 01       		.byte	0x1
 5104 088e 5109     		.2byte	0x951
 5105 0890 6B000000 		.4byte	0x6b
 5106 0894 02       		.uleb128 0x2
 5107 0895 91       		.byte	0x91
 5108 0896 77       		.sleb128 -9
 5109 0897 00       		.byte	0
 5110 0898 14       		.uleb128 0x14
 5111 0899 7F060000 		.4byte	.LASF95
 5112 089d 01       		.byte	0x1
 5113 089e 6909     		.2byte	0x969
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 144


 5114 08a0 00000000 		.4byte	.LFB43
 5115 08a4 2C000000 		.4byte	.LFE43-.LFB43
 5116 08a8 01       		.uleb128 0x1
 5117 08a9 9C       		.byte	0x9c
 5118 08aa BE080000 		.4byte	0x8be
 5119 08ae 0E       		.uleb128 0xe
 5120 08af EE030000 		.4byte	.LASF83
 5121 08b3 01       		.byte	0x1
 5122 08b4 6909     		.2byte	0x969
 5123 08b6 6B000000 		.4byte	0x6b
 5124 08ba 02       		.uleb128 0x2
 5125 08bb 91       		.byte	0x91
 5126 08bc 77       		.sleb128 -9
 5127 08bd 00       		.byte	0
 5128 08be 12       		.uleb128 0x12
 5129 08bf 16010000 		.4byte	.LASF96
 5130 08c3 01       		.byte	0x1
 5131 08c4 7D09     		.2byte	0x97d
 5132 08c6 6B000000 		.4byte	0x6b
 5133 08ca 00000000 		.4byte	.LFB44
 5134 08ce 30000000 		.4byte	.LFE44-.LFB44
 5135 08d2 01       		.uleb128 0x1
 5136 08d3 9C       		.byte	0x9c
 5137 08d4 E8080000 		.4byte	0x8e8
 5138 08d8 0E       		.uleb128 0xe
 5139 08d9 EE030000 		.4byte	.LASF83
 5140 08dd 01       		.byte	0x1
 5141 08de 7D09     		.2byte	0x97d
 5142 08e0 6B000000 		.4byte	0x6b
 5143 08e4 02       		.uleb128 0x2
 5144 08e5 91       		.byte	0x91
 5145 08e6 77       		.sleb128 -9
 5146 08e7 00       		.byte	0
 5147 08e8 14       		.uleb128 0x14
 5148 08e9 AE010000 		.4byte	.LASF97
 5149 08ed 01       		.byte	0x1
 5150 08ee 9209     		.2byte	0x992
 5151 08f0 00000000 		.4byte	.LFB45
 5152 08f4 2C000000 		.4byte	.LFE45-.LFB45
 5153 08f8 01       		.uleb128 0x1
 5154 08f9 9C       		.byte	0x9c
 5155 08fa 0E090000 		.4byte	0x90e
 5156 08fe 0E       		.uleb128 0xe
 5157 08ff EE030000 		.4byte	.LASF83
 5158 0903 01       		.byte	0x1
 5159 0904 9209     		.2byte	0x992
 5160 0906 6B000000 		.4byte	0x6b
 5161 090a 02       		.uleb128 0x2
 5162 090b 91       		.byte	0x91
 5163 090c 77       		.sleb128 -9
 5164 090d 00       		.byte	0
 5165 090e 14       		.uleb128 0x14
 5166 090f 9A030000 		.4byte	.LASF98
 5167 0913 01       		.byte	0x1
 5168 0914 A509     		.2byte	0x9a5
 5169 0916 00000000 		.4byte	.LFB46
 5170 091a 2C000000 		.4byte	.LFE46-.LFB46
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 145


 5171 091e 01       		.uleb128 0x1
 5172 091f 9C       		.byte	0x9c
 5173 0920 34090000 		.4byte	0x934
 5174 0924 0E       		.uleb128 0xe
 5175 0925 EE030000 		.4byte	.LASF83
 5176 0929 01       		.byte	0x1
 5177 092a A509     		.2byte	0x9a5
 5178 092c 6B000000 		.4byte	0x6b
 5179 0930 02       		.uleb128 0x2
 5180 0931 91       		.byte	0x91
 5181 0932 77       		.sleb128 -9
 5182 0933 00       		.byte	0
 5183 0934 14       		.uleb128 0x14
 5184 0935 0C050000 		.4byte	.LASF99
 5185 0939 01       		.byte	0x1
 5186 093a B909     		.2byte	0x9b9
 5187 093c 00000000 		.4byte	.LFB47
 5188 0940 2C000000 		.4byte	.LFE47-.LFB47
 5189 0944 01       		.uleb128 0x1
 5190 0945 9C       		.byte	0x9c
 5191 0946 5A090000 		.4byte	0x95a
 5192 094a 0E       		.uleb128 0xe
 5193 094b EE030000 		.4byte	.LASF83
 5194 094f 01       		.byte	0x1
 5195 0950 B909     		.2byte	0x9b9
 5196 0952 6B000000 		.4byte	0x6b
 5197 0956 02       		.uleb128 0x2
 5198 0957 91       		.byte	0x91
 5199 0958 77       		.sleb128 -9
 5200 0959 00       		.byte	0
 5201 095a 14       		.uleb128 0x14
 5202 095b 1E060000 		.4byte	.LASF100
 5203 095f 01       		.byte	0x1
 5204 0960 CD09     		.2byte	0x9cd
 5205 0962 00000000 		.4byte	.LFB48
 5206 0966 16000000 		.4byte	.LFE48-.LFB48
 5207 096a 01       		.uleb128 0x1
 5208 096b 9C       		.byte	0x9c
 5209 096c 80090000 		.4byte	0x980
 5210 0970 0E       		.uleb128 0xe
 5211 0971 E7060000 		.4byte	.LASF76
 5212 0975 01       		.byte	0x1
 5213 0976 CD09     		.2byte	0x9cd
 5214 0978 6B000000 		.4byte	0x6b
 5215 097c 02       		.uleb128 0x2
 5216 097d 91       		.byte	0x91
 5217 097e 77       		.sleb128 -9
 5218 097f 00       		.byte	0
 5219 0980 17       		.uleb128 0x17
 5220 0981 ED000000 		.4byte	.LASF101
 5221 0985 01       		.byte	0x1
 5222 0986 EC09     		.2byte	0x9ec
 5223 0988 00000000 		.4byte	.LFB49
 5224 098c 24000000 		.4byte	.LFE49-.LFB49
 5225 0990 01       		.uleb128 0x1
 5226 0991 9C       		.byte	0x9c
 5227 0992 0D       		.uleb128 0xd
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 146


 5228 0993 79070000 		.4byte	.LASF102
 5229 0997 01       		.byte	0x1
 5230 0998 050A     		.2byte	0xa05
 5231 099a 00000000 		.4byte	.LFB50
 5232 099e 4C000000 		.4byte	.LFE50-.LFB50
 5233 09a2 01       		.uleb128 0x1
 5234 09a3 9C       		.byte	0x9c
 5235 09a4 B8090000 		.4byte	0x9b8
 5236 09a8 0E       		.uleb128 0xe
 5237 09a9 DD050000 		.4byte	.LASF103
 5238 09ad 01       		.byte	0x1
 5239 09ae 050A     		.2byte	0xa05
 5240 09b0 81000000 		.4byte	0x81
 5241 09b4 02       		.uleb128 0x2
 5242 09b5 91       		.byte	0x91
 5243 09b6 74       		.sleb128 -12
 5244 09b7 00       		.byte	0
 5245 09b8 0D       		.uleb128 0xd
 5246 09b9 70010000 		.4byte	.LASF104
 5247 09bd 01       		.byte	0x1
 5248 09be 210A     		.2byte	0xa21
 5249 09c0 00000000 		.4byte	.LFB51
 5250 09c4 28000000 		.4byte	.LFE51-.LFB51
 5251 09c8 01       		.uleb128 0x1
 5252 09c9 9C       		.byte	0x9c
 5253 09ca DE090000 		.4byte	0x9de
 5254 09ce 0E       		.uleb128 0xe
 5255 09cf 8C080000 		.4byte	.LASF105
 5256 09d3 01       		.byte	0x1
 5257 09d4 210A     		.2byte	0xa21
 5258 09d6 76000000 		.4byte	0x76
 5259 09da 02       		.uleb128 0x2
 5260 09db 91       		.byte	0x91
 5261 09dc 76       		.sleb128 -10
 5262 09dd 00       		.byte	0
 5263 09de 0D       		.uleb128 0xd
 5264 09df 55010000 		.4byte	.LASF106
 5265 09e3 01       		.byte	0x1
 5266 09e4 340A     		.2byte	0xa34
 5267 09e6 00000000 		.4byte	.LFB52
 5268 09ea 84000000 		.4byte	.LFE52-.LFB52
 5269 09ee 01       		.uleb128 0x1
 5270 09ef 9C       		.byte	0x9c
 5271 09f0 040A0000 		.4byte	0xa04
 5272 09f4 0E       		.uleb128 0xe
 5273 09f5 3E010000 		.4byte	.LASF31
 5274 09f9 01       		.byte	0x1
 5275 09fa 340A     		.2byte	0xa34
 5276 09fc 81000000 		.4byte	0x81
 5277 0a00 02       		.uleb128 0x2
 5278 0a01 91       		.byte	0x91
 5279 0a02 74       		.sleb128 -12
 5280 0a03 00       		.byte	0
 5281 0a04 18       		.uleb128 0x18
 5282 0a05 DB040000 		.4byte	.LASF107
 5283 0a09 01       		.byte	0x1
 5284 0a0a 570A     		.2byte	0xa57
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 147


 5285 0a0c 00000000 		.4byte	.LFB53
 5286 0a10 24000000 		.4byte	.LFE53-.LFB53
 5287 0a14 01       		.uleb128 0x1
 5288 0a15 9C       		.byte	0x9c
 5289 0a16 0D       		.uleb128 0xd
 5290 0a17 9D020000 		.4byte	.LASF108
 5291 0a1b 01       		.byte	0x1
 5292 0a1c 790A     		.2byte	0xa79
 5293 0a1e 00000000 		.4byte	.LFB54
 5294 0a22 60000000 		.4byte	.LFE54-.LFB54
 5295 0a26 01       		.uleb128 0x1
 5296 0a27 9C       		.byte	0x9c
 5297 0a28 3A0A0000 		.4byte	0xa3a
 5298 0a2c 19       		.uleb128 0x19
 5299 0a2d 6900     		.ascii	"i\000"
 5300 0a2f 01       		.byte	0x1
 5301 0a30 7B0A     		.2byte	0xa7b
 5302 0a32 81000000 		.4byte	0x81
 5303 0a36 02       		.uleb128 0x2
 5304 0a37 91       		.byte	0x91
 5305 0a38 74       		.sleb128 -12
 5306 0a39 00       		.byte	0
 5307 0a3a 18       		.uleb128 0x18
 5308 0a3b 1D070000 		.4byte	.LASF109
 5309 0a3f 01       		.byte	0x1
 5310 0a40 9F0A     		.2byte	0xa9f
 5311 0a42 00000000 		.4byte	.LFB55
 5312 0a46 20000000 		.4byte	.LFE55-.LFB55
 5313 0a4a 01       		.uleb128 0x1
 5314 0a4b 9C       		.byte	0x9c
 5315 0a4c 17       		.uleb128 0x17
 5316 0a4d 06080000 		.4byte	.LASF110
 5317 0a51 01       		.byte	0x1
 5318 0a52 B70A     		.2byte	0xab7
 5319 0a54 00000000 		.4byte	.LFB56
 5320 0a58 1C000000 		.4byte	.LFE56-.LFB56
 5321 0a5c 01       		.uleb128 0x1
 5322 0a5d 9C       		.byte	0x9c
 5323 0a5e 17       		.uleb128 0x17
 5324 0a5f FD000000 		.4byte	.LASF111
 5325 0a63 01       		.byte	0x1
 5326 0a64 CE0A     		.2byte	0xace
 5327 0a66 00000000 		.4byte	.LFB57
 5328 0a6a 1C000000 		.4byte	.LFE57-.LFB57
 5329 0a6e 01       		.uleb128 0x1
 5330 0a6f 9C       		.byte	0x9c
 5331 0a70 17       		.uleb128 0x17
 5332 0a71 81070000 		.4byte	.LASF112
 5333 0a75 01       		.byte	0x1
 5334 0a76 E50A     		.2byte	0xae5
 5335 0a78 00000000 		.4byte	.LFB58
 5336 0a7c 1C000000 		.4byte	.LFE58-.LFB58
 5337 0a80 01       		.uleb128 0x1
 5338 0a81 9C       		.byte	0x9c
 5339 0a82 14       		.uleb128 0x14
 5340 0a83 99080000 		.4byte	.LASF113
 5341 0a87 01       		.byte	0x1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 148


 5342 0a88 FB0A     		.2byte	0xafb
 5343 0a8a 00000000 		.4byte	.LFB59
 5344 0a8e 20000000 		.4byte	.LFE59-.LFB59
 5345 0a92 01       		.uleb128 0x1
 5346 0a93 9C       		.byte	0x9c
 5347 0a94 A80A0000 		.4byte	0xaa8
 5348 0a98 0E       		.uleb128 0xe
 5349 0a99 2A000000 		.4byte	.LASF93
 5350 0a9d 01       		.byte	0x1
 5351 0a9e FB0A     		.2byte	0xafb
 5352 0aa0 81000000 		.4byte	0x81
 5353 0aa4 02       		.uleb128 0x2
 5354 0aa5 91       		.byte	0x91
 5355 0aa6 74       		.sleb128 -12
 5356 0aa7 00       		.byte	0
 5357 0aa8 13       		.uleb128 0x13
 5358 0aa9 7A010000 		.4byte	.LASF114
 5359 0aad 01       		.byte	0x1
 5360 0aae 0F0B     		.2byte	0xb0f
 5361 0ab0 81000000 		.4byte	0x81
 5362 0ab4 00000000 		.4byte	.LFB60
 5363 0ab8 18000000 		.4byte	.LFE60-.LFB60
 5364 0abc 01       		.uleb128 0x1
 5365 0abd 9C       		.byte	0x9c
 5366 0abe 13       		.uleb128 0x13
 5367 0abf 58050000 		.4byte	.LASF115
 5368 0ac3 01       		.byte	0x1
 5369 0ac4 230B     		.2byte	0xb23
 5370 0ac6 81000000 		.4byte	0x81
 5371 0aca 00000000 		.4byte	.LFB61
 5372 0ace 1C000000 		.4byte	.LFE61-.LFB61
 5373 0ad2 01       		.uleb128 0x1
 5374 0ad3 9C       		.byte	0x9c
 5375 0ad4 13       		.uleb128 0x13
 5376 0ad5 C6020000 		.4byte	.LASF116
 5377 0ad9 01       		.byte	0x1
 5378 0ada 630B     		.2byte	0xb63
 5379 0adc 81000000 		.4byte	0x81
 5380 0ae0 00000000 		.4byte	.LFB62
 5381 0ae4 18000000 		.4byte	.LFE62-.LFB62
 5382 0ae8 01       		.uleb128 0x1
 5383 0ae9 9C       		.byte	0x9c
 5384 0aea 17       		.uleb128 0x17
 5385 0aeb F4020000 		.4byte	.LASF117
 5386 0aef 01       		.byte	0x1
 5387 0af0 770B     		.2byte	0xb77
 5388 0af2 00000000 		.4byte	.LFB63
 5389 0af6 14000000 		.4byte	.LFE63-.LFB63
 5390 0afa 01       		.uleb128 0x1
 5391 0afb 9C       		.byte	0x9c
 5392 0afc 12       		.uleb128 0x12
 5393 0afd 51070000 		.4byte	.LASF118
 5394 0b01 01       		.byte	0x1
 5395 0b02 8F0B     		.2byte	0xb8f
 5396 0b04 E4000000 		.4byte	0xe4
 5397 0b08 00000000 		.4byte	.LFB64
 5398 0b0c 2C000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 149


 5399 0b10 01       		.uleb128 0x1
 5400 0b11 9C       		.byte	0x9c
 5401 0b12 440B0000 		.4byte	0xb44
 5402 0b16 0E       		.uleb128 0xe
 5403 0b17 EE030000 		.4byte	.LASF83
 5404 0b1b 01       		.byte	0x1
 5405 0b1c 8F0B     		.2byte	0xb8f
 5406 0b1e 81000000 		.4byte	0x81
 5407 0b22 02       		.uleb128 0x2
 5408 0b23 91       		.byte	0x91
 5409 0b24 6C       		.sleb128 -20
 5410 0b25 0E       		.uleb128 0xe
 5411 0b26 28080000 		.4byte	.LASF119
 5412 0b2a 01       		.byte	0x1
 5413 0b2b 8F0B     		.2byte	0xb8f
 5414 0b2d E4000000 		.4byte	0xe4
 5415 0b31 02       		.uleb128 0x2
 5416 0b32 91       		.byte	0x91
 5417 0b33 68       		.sleb128 -24
 5418 0b34 0F       		.uleb128 0xf
 5419 0b35 3A050000 		.4byte	.LASF120
 5420 0b39 01       		.byte	0x1
 5421 0b3a 910B     		.2byte	0xb91
 5422 0b3c E4000000 		.4byte	0xe4
 5423 0b40 02       		.uleb128 0x2
 5424 0b41 91       		.byte	0x91
 5425 0b42 74       		.sleb128 -12
 5426 0b43 00       		.byte	0
 5427 0b44 12       		.uleb128 0x12
 5428 0b45 BB010000 		.4byte	.LASF121
 5429 0b49 01       		.byte	0x1
 5430 0b4a A70B     		.2byte	0xba7
 5431 0b4c E4000000 		.4byte	0xe4
 5432 0b50 00000000 		.4byte	.LFB65
 5433 0b54 1C000000 		.4byte	.LFE65-.LFB65
 5434 0b58 01       		.uleb128 0x1
 5435 0b59 9C       		.byte	0x9c
 5436 0b5a 6E0B0000 		.4byte	0xb6e
 5437 0b5e 0E       		.uleb128 0xe
 5438 0b5f EE030000 		.4byte	.LASF83
 5439 0b63 01       		.byte	0x1
 5440 0b64 A70B     		.2byte	0xba7
 5441 0b66 81000000 		.4byte	0x81
 5442 0b6a 02       		.uleb128 0x2
 5443 0b6b 91       		.byte	0x91
 5444 0b6c 74       		.sleb128 -12
 5445 0b6d 00       		.byte	0
 5446 0b6e 15       		.uleb128 0x15
 5447 0b6f AC080000 		.4byte	.LASF123
 5448 0b73 01       		.byte	0x1
 5449 0b74 BB0B     		.2byte	0xbbb
 5450 0b76 00000000 		.4byte	.LFB66
 5451 0b7a 44000000 		.4byte	.LFE66-.LFB66
 5452 0b7e 01       		.uleb128 0x1
 5453 0b7f 9C       		.byte	0x9c
 5454 0b80 920B0000 		.4byte	0xb92
 5455 0b84 19       		.uleb128 0x19
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 150


 5456 0b85 6900     		.ascii	"i\000"
 5457 0b87 01       		.byte	0x1
 5458 0b88 BD0B     		.2byte	0xbbd
 5459 0b8a 81000000 		.4byte	0x81
 5460 0b8e 02       		.uleb128 0x2
 5461 0b8f 91       		.byte	0x91
 5462 0b90 74       		.sleb128 -12
 5463 0b91 00       		.byte	0
 5464 0b92 1A       		.uleb128 0x1a
 5465 0b93 E4000000 		.4byte	0xe4
 5466 0b97 A20B0000 		.4byte	0xba2
 5467 0b9b 1B       		.uleb128 0x1b
 5468 0b9c DD000000 		.4byte	0xdd
 5469 0ba0 04       		.byte	0x4
 5470 0ba1 00       		.byte	0
 5471 0ba2 0B       		.uleb128 0xb
 5472 0ba3 66070000 		.4byte	.LASF124
 5473 0ba7 01       		.byte	0x1
 5474 0ba8 32       		.byte	0x32
 5475 0ba9 920B0000 		.4byte	0xb92
 5476 0bad 05       		.uleb128 0x5
 5477 0bae 03       		.byte	0x3
 5478 0baf 0C000000 		.4byte	CySysTickCallbacks
 5479 0bb3 1C       		.uleb128 0x1c
 5480 0bb4 CF000000 		.4byte	.LASF125
 5481 0bb8 01       		.byte	0x1
 5482 0bb9 34       		.byte	0x34
 5483 0bba 81000000 		.4byte	0x81
 5484 0bbe 05       		.uleb128 0x5
 5485 0bbf 03       		.byte	0x3
 5486 0bc0 00000000 		.4byte	CySysTickInitVar
 5487 0bc4 1C       		.uleb128 0x1c
 5488 0bc5 6A050000 		.4byte	.LASF126
 5489 0bc9 01       		.byte	0x1
 5490 0bca 17       		.byte	0x17
 5491 0bcb 81000000 		.4byte	0x81
 5492 0bcf 05       		.uleb128 0x5
 5493 0bd0 03       		.byte	0x3
 5494 0bd1 00000000 		.4byte	cydelayFreqHz
 5495 0bd5 1C       		.uleb128 0x1c
 5496 0bd6 D6010000 		.4byte	.LASF127
 5497 0bda 01       		.byte	0x1
 5498 0bdb 18       		.byte	0x18
 5499 0bdc 81000000 		.4byte	0x81
 5500 0be0 05       		.uleb128 0x5
 5501 0be1 03       		.byte	0x3
 5502 0be2 00000000 		.4byte	cydelayFreqKhz
 5503 0be6 1C       		.uleb128 0x1c
 5504 0be7 C7070000 		.4byte	.LASF128
 5505 0beb 01       		.byte	0x1
 5506 0bec 19       		.byte	0x19
 5507 0bed 6B000000 		.4byte	0x6b
 5508 0bf1 05       		.uleb128 0x5
 5509 0bf2 03       		.byte	0x3
 5510 0bf3 00000000 		.4byte	cydelayFreqMhz
 5511 0bf7 1C       		.uleb128 0x1c
 5512 0bf8 9B070000 		.4byte	.LASF129
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 151


 5513 0bfc 01       		.byte	0x1
 5514 0bfd 1A       		.byte	0x1a
 5515 0bfe 81000000 		.4byte	0x81
 5516 0c02 05       		.uleb128 0x5
 5517 0c03 03       		.byte	0x3
 5518 0c04 00000000 		.4byte	cydelay32kMs
 5519 0c08 1C       		.uleb128 0x1c
 5520 0c09 99000000 		.4byte	.LASF130
 5521 0c0d 01       		.byte	0x1
 5522 0c0e 23       		.byte	0x23
 5523 0c0f 81000000 		.4byte	0x81
 5524 0c13 05       		.uleb128 0x5
 5525 0c14 03       		.byte	0x3
 5526 0c15 00000000 		.4byte	lfclkPosedgeWdtCounter0Enabled
 5527 0c19 1C       		.uleb128 0x1c
 5528 0c1a 33060000 		.4byte	.LASF131
 5529 0c1e 01       		.byte	0x1
 5530 0c1f 24       		.byte	0x24
 5531 0c20 81000000 		.4byte	0x81
 5532 0c24 05       		.uleb128 0x5
 5533 0c25 03       		.byte	0x3
 5534 0c26 00000000 		.4byte	lfclkPosedgeEnabledWdtCounter
 5535 0c2a 1C       		.uleb128 0x1c
 5536 0c2b EA070000 		.4byte	.LASF132
 5537 0c2f 01       		.byte	0x1
 5538 0c30 25       		.byte	0x25
 5539 0c31 81000000 		.4byte	0x81
 5540 0c35 05       		.uleb128 0x5
 5541 0c36 03       		.byte	0x3
 5542 0c37 00000000 		.4byte	lfclkPosedgeWdtCounter0Mode
 5543 0c3b 1A       		.uleb128 0x1a
 5544 0c3c 4B0C0000 		.4byte	0xc4b
 5545 0c40 4B0C0000 		.4byte	0xc4b
 5546 0c44 1B       		.uleb128 0x1b
 5547 0c45 DD000000 		.4byte	0xdd
 5548 0c49 2D       		.byte	0x2d
 5549 0c4a 00       		.byte	0
 5550 0c4b 1D       		.uleb128 0x1d
 5551 0c4c 6B000000 		.4byte	0x6b
 5552 0c50 1C       		.uleb128 0x1c
 5553 0c51 47050000 		.4byte	.LASF133
 5554 0c55 01       		.byte	0x1
 5555 0c56 39       		.byte	0x39
 5556 0c57 610C0000 		.4byte	0xc61
 5557 0c5b 05       		.uleb128 0x5
 5558 0c5c 03       		.byte	0x3
 5559 0c5d 00000000 		.4byte	cyImoFreqMhz2Reg
 5560 0c61 1D       		.uleb128 0x1d
 5561 0c62 3B0C0000 		.4byte	0xc3b
 5562 0c66 00       		.byte	0
 5563              		.section	.debug_abbrev,"",%progbits
 5564              	.Ldebug_abbrev0:
 5565 0000 01       		.uleb128 0x1
 5566 0001 11       		.uleb128 0x11
 5567 0002 01       		.byte	0x1
 5568 0003 25       		.uleb128 0x25
 5569 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 152


 5570 0005 13       		.uleb128 0x13
 5571 0006 0B       		.uleb128 0xb
 5572 0007 03       		.uleb128 0x3
 5573 0008 0E       		.uleb128 0xe
 5574 0009 1B       		.uleb128 0x1b
 5575 000a 0E       		.uleb128 0xe
 5576 000b 55       		.uleb128 0x55
 5577 000c 17       		.uleb128 0x17
 5578 000d 11       		.uleb128 0x11
 5579 000e 01       		.uleb128 0x1
 5580 000f 10       		.uleb128 0x10
 5581 0010 17       		.uleb128 0x17
 5582 0011 00       		.byte	0
 5583 0012 00       		.byte	0
 5584 0013 02       		.uleb128 0x2
 5585 0014 24       		.uleb128 0x24
 5586 0015 00       		.byte	0
 5587 0016 0B       		.uleb128 0xb
 5588 0017 0B       		.uleb128 0xb
 5589 0018 3E       		.uleb128 0x3e
 5590 0019 0B       		.uleb128 0xb
 5591 001a 03       		.uleb128 0x3
 5592 001b 0E       		.uleb128 0xe
 5593 001c 00       		.byte	0
 5594 001d 00       		.byte	0
 5595 001e 03       		.uleb128 0x3
 5596 001f 24       		.uleb128 0x24
 5597 0020 00       		.byte	0
 5598 0021 0B       		.uleb128 0xb
 5599 0022 0B       		.uleb128 0xb
 5600 0023 3E       		.uleb128 0x3e
 5601 0024 0B       		.uleb128 0xb
 5602 0025 03       		.uleb128 0x3
 5603 0026 08       		.uleb128 0x8
 5604 0027 00       		.byte	0
 5605 0028 00       		.byte	0
 5606 0029 04       		.uleb128 0x4
 5607 002a 16       		.uleb128 0x16
 5608 002b 00       		.byte	0
 5609 002c 03       		.uleb128 0x3
 5610 002d 0E       		.uleb128 0xe
 5611 002e 3A       		.uleb128 0x3a
 5612 002f 0B       		.uleb128 0xb
 5613 0030 3B       		.uleb128 0x3b
 5614 0031 0B       		.uleb128 0xb
 5615 0032 49       		.uleb128 0x49
 5616 0033 13       		.uleb128 0x13
 5617 0034 00       		.byte	0
 5618 0035 00       		.byte	0
 5619 0036 05       		.uleb128 0x5
 5620 0037 16       		.uleb128 0x16
 5621 0038 00       		.byte	0
 5622 0039 03       		.uleb128 0x3
 5623 003a 0E       		.uleb128 0xe
 5624 003b 3A       		.uleb128 0x3a
 5625 003c 0B       		.uleb128 0xb
 5626 003d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 153


 5627 003e 05       		.uleb128 0x5
 5628 003f 49       		.uleb128 0x49
 5629 0040 13       		.uleb128 0x13
 5630 0041 00       		.byte	0
 5631 0042 00       		.byte	0
 5632 0043 06       		.uleb128 0x6
 5633 0044 35       		.uleb128 0x35
 5634 0045 00       		.byte	0
 5635 0046 49       		.uleb128 0x49
 5636 0047 13       		.uleb128 0x13
 5637 0048 00       		.byte	0
 5638 0049 00       		.byte	0
 5639 004a 07       		.uleb128 0x7
 5640 004b 0F       		.uleb128 0xf
 5641 004c 00       		.byte	0
 5642 004d 0B       		.uleb128 0xb
 5643 004e 0B       		.uleb128 0xb
 5644 004f 49       		.uleb128 0x49
 5645 0050 13       		.uleb128 0x13
 5646 0051 00       		.byte	0
 5647 0052 00       		.byte	0
 5648 0053 08       		.uleb128 0x8
 5649 0054 15       		.uleb128 0x15
 5650 0055 00       		.byte	0
 5651 0056 27       		.uleb128 0x27
 5652 0057 19       		.uleb128 0x19
 5653 0058 00       		.byte	0
 5654 0059 00       		.byte	0
 5655 005a 09       		.uleb128 0x9
 5656 005b 2E       		.uleb128 0x2e
 5657 005c 00       		.byte	0
 5658 005d 3F       		.uleb128 0x3f
 5659 005e 19       		.uleb128 0x19
 5660 005f 03       		.uleb128 0x3
 5661 0060 0E       		.uleb128 0xe
 5662 0061 3A       		.uleb128 0x3a
 5663 0062 0B       		.uleb128 0xb
 5664 0063 3B       		.uleb128 0x3b
 5665 0064 0B       		.uleb128 0xb
 5666 0065 27       		.uleb128 0x27
 5667 0066 19       		.uleb128 0x19
 5668 0067 11       		.uleb128 0x11
 5669 0068 01       		.uleb128 0x1
 5670 0069 12       		.uleb128 0x12
 5671 006a 06       		.uleb128 0x6
 5672 006b 40       		.uleb128 0x40
 5673 006c 18       		.uleb128 0x18
 5674 006d 9742     		.uleb128 0x2117
 5675 006f 19       		.uleb128 0x19
 5676 0070 00       		.byte	0
 5677 0071 00       		.byte	0
 5678 0072 0A       		.uleb128 0xa
 5679 0073 2E       		.uleb128 0x2e
 5680 0074 01       		.byte	0x1
 5681 0075 3F       		.uleb128 0x3f
 5682 0076 19       		.uleb128 0x19
 5683 0077 03       		.uleb128 0x3
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 154


 5684 0078 0E       		.uleb128 0xe
 5685 0079 3A       		.uleb128 0x3a
 5686 007a 0B       		.uleb128 0xb
 5687 007b 3B       		.uleb128 0x3b
 5688 007c 0B       		.uleb128 0xb
 5689 007d 27       		.uleb128 0x27
 5690 007e 19       		.uleb128 0x19
 5691 007f 11       		.uleb128 0x11
 5692 0080 01       		.uleb128 0x1
 5693 0081 12       		.uleb128 0x12
 5694 0082 06       		.uleb128 0x6
 5695 0083 40       		.uleb128 0x40
 5696 0084 18       		.uleb128 0x18
 5697 0085 9642     		.uleb128 0x2116
 5698 0087 19       		.uleb128 0x19
 5699 0088 01       		.uleb128 0x1
 5700 0089 13       		.uleb128 0x13
 5701 008a 00       		.byte	0
 5702 008b 00       		.byte	0
 5703 008c 0B       		.uleb128 0xb
 5704 008d 34       		.uleb128 0x34
 5705 008e 00       		.byte	0
 5706 008f 03       		.uleb128 0x3
 5707 0090 0E       		.uleb128 0xe
 5708 0091 3A       		.uleb128 0x3a
 5709 0092 0B       		.uleb128 0xb
 5710 0093 3B       		.uleb128 0x3b
 5711 0094 0B       		.uleb128 0xb
 5712 0095 49       		.uleb128 0x49
 5713 0096 13       		.uleb128 0x13
 5714 0097 02       		.uleb128 0x2
 5715 0098 18       		.uleb128 0x18
 5716 0099 00       		.byte	0
 5717 009a 00       		.byte	0
 5718 009b 0C       		.uleb128 0xc
 5719 009c 2E       		.uleb128 0x2e
 5720 009d 00       		.byte	0
 5721 009e 03       		.uleb128 0x3
 5722 009f 0E       		.uleb128 0xe
 5723 00a0 3A       		.uleb128 0x3a
 5724 00a1 0B       		.uleb128 0xb
 5725 00a2 3B       		.uleb128 0x3b
 5726 00a3 0B       		.uleb128 0xb
 5727 00a4 27       		.uleb128 0x27
 5728 00a5 19       		.uleb128 0x19
 5729 00a6 49       		.uleb128 0x49
 5730 00a7 13       		.uleb128 0x13
 5731 00a8 11       		.uleb128 0x11
 5732 00a9 01       		.uleb128 0x1
 5733 00aa 12       		.uleb128 0x12
 5734 00ab 06       		.uleb128 0x6
 5735 00ac 40       		.uleb128 0x40
 5736 00ad 18       		.uleb128 0x18
 5737 00ae 9742     		.uleb128 0x2117
 5738 00b0 19       		.uleb128 0x19
 5739 00b1 00       		.byte	0
 5740 00b2 00       		.byte	0
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 155


 5741 00b3 0D       		.uleb128 0xd
 5742 00b4 2E       		.uleb128 0x2e
 5743 00b5 01       		.byte	0x1
 5744 00b6 3F       		.uleb128 0x3f
 5745 00b7 19       		.uleb128 0x19
 5746 00b8 03       		.uleb128 0x3
 5747 00b9 0E       		.uleb128 0xe
 5748 00ba 3A       		.uleb128 0x3a
 5749 00bb 0B       		.uleb128 0xb
 5750 00bc 3B       		.uleb128 0x3b
 5751 00bd 05       		.uleb128 0x5
 5752 00be 27       		.uleb128 0x27
 5753 00bf 19       		.uleb128 0x19
 5754 00c0 11       		.uleb128 0x11
 5755 00c1 01       		.uleb128 0x1
 5756 00c2 12       		.uleb128 0x12
 5757 00c3 06       		.uleb128 0x6
 5758 00c4 40       		.uleb128 0x40
 5759 00c5 18       		.uleb128 0x18
 5760 00c6 9642     		.uleb128 0x2116
 5761 00c8 19       		.uleb128 0x19
 5762 00c9 01       		.uleb128 0x1
 5763 00ca 13       		.uleb128 0x13
 5764 00cb 00       		.byte	0
 5765 00cc 00       		.byte	0
 5766 00cd 0E       		.uleb128 0xe
 5767 00ce 05       		.uleb128 0x5
 5768 00cf 00       		.byte	0
 5769 00d0 03       		.uleb128 0x3
 5770 00d1 0E       		.uleb128 0xe
 5771 00d2 3A       		.uleb128 0x3a
 5772 00d3 0B       		.uleb128 0xb
 5773 00d4 3B       		.uleb128 0x3b
 5774 00d5 05       		.uleb128 0x5
 5775 00d6 49       		.uleb128 0x49
 5776 00d7 13       		.uleb128 0x13
 5777 00d8 02       		.uleb128 0x2
 5778 00d9 18       		.uleb128 0x18
 5779 00da 00       		.byte	0
 5780 00db 00       		.byte	0
 5781 00dc 0F       		.uleb128 0xf
 5782 00dd 34       		.uleb128 0x34
 5783 00de 00       		.byte	0
 5784 00df 03       		.uleb128 0x3
 5785 00e0 0E       		.uleb128 0xe
 5786 00e1 3A       		.uleb128 0x3a
 5787 00e2 0B       		.uleb128 0xb
 5788 00e3 3B       		.uleb128 0x3b
 5789 00e4 05       		.uleb128 0x5
 5790 00e5 49       		.uleb128 0x49
 5791 00e6 13       		.uleb128 0x13
 5792 00e7 02       		.uleb128 0x2
 5793 00e8 18       		.uleb128 0x18
 5794 00e9 00       		.byte	0
 5795 00ea 00       		.byte	0
 5796 00eb 10       		.uleb128 0x10
 5797 00ec 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 156


 5798 00ed 00       		.byte	0
 5799 00ee 03       		.uleb128 0x3
 5800 00ef 0E       		.uleb128 0xe
 5801 00f0 3A       		.uleb128 0x3a
 5802 00f1 0B       		.uleb128 0xb
 5803 00f2 3B       		.uleb128 0x3b
 5804 00f3 05       		.uleb128 0x5
 5805 00f4 27       		.uleb128 0x27
 5806 00f5 19       		.uleb128 0x19
 5807 00f6 49       		.uleb128 0x49
 5808 00f7 13       		.uleb128 0x13
 5809 00f8 11       		.uleb128 0x11
 5810 00f9 01       		.uleb128 0x1
 5811 00fa 12       		.uleb128 0x12
 5812 00fb 06       		.uleb128 0x6
 5813 00fc 40       		.uleb128 0x40
 5814 00fd 18       		.uleb128 0x18
 5815 00fe 9742     		.uleb128 0x2117
 5816 0100 19       		.uleb128 0x19
 5817 0101 00       		.byte	0
 5818 0102 00       		.byte	0
 5819 0103 11       		.uleb128 0x11
 5820 0104 2E       		.uleb128 0x2e
 5821 0105 01       		.byte	0x1
 5822 0106 3F       		.uleb128 0x3f
 5823 0107 19       		.uleb128 0x19
 5824 0108 03       		.uleb128 0x3
 5825 0109 0E       		.uleb128 0xe
 5826 010a 3A       		.uleb128 0x3a
 5827 010b 0B       		.uleb128 0xb
 5828 010c 3B       		.uleb128 0x3b
 5829 010d 05       		.uleb128 0x5
 5830 010e 27       		.uleb128 0x27
 5831 010f 19       		.uleb128 0x19
 5832 0110 49       		.uleb128 0x49
 5833 0111 13       		.uleb128 0x13
 5834 0112 11       		.uleb128 0x11
 5835 0113 01       		.uleb128 0x1
 5836 0114 12       		.uleb128 0x12
 5837 0115 06       		.uleb128 0x6
 5838 0116 40       		.uleb128 0x40
 5839 0117 18       		.uleb128 0x18
 5840 0118 9642     		.uleb128 0x2116
 5841 011a 19       		.uleb128 0x19
 5842 011b 01       		.uleb128 0x1
 5843 011c 13       		.uleb128 0x13
 5844 011d 00       		.byte	0
 5845 011e 00       		.byte	0
 5846 011f 12       		.uleb128 0x12
 5847 0120 2E       		.uleb128 0x2e
 5848 0121 01       		.byte	0x1
 5849 0122 3F       		.uleb128 0x3f
 5850 0123 19       		.uleb128 0x19
 5851 0124 03       		.uleb128 0x3
 5852 0125 0E       		.uleb128 0xe
 5853 0126 3A       		.uleb128 0x3a
 5854 0127 0B       		.uleb128 0xb
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 157


 5855 0128 3B       		.uleb128 0x3b
 5856 0129 05       		.uleb128 0x5
 5857 012a 27       		.uleb128 0x27
 5858 012b 19       		.uleb128 0x19
 5859 012c 49       		.uleb128 0x49
 5860 012d 13       		.uleb128 0x13
 5861 012e 11       		.uleb128 0x11
 5862 012f 01       		.uleb128 0x1
 5863 0130 12       		.uleb128 0x12
 5864 0131 06       		.uleb128 0x6
 5865 0132 40       		.uleb128 0x40
 5866 0133 18       		.uleb128 0x18
 5867 0134 9742     		.uleb128 0x2117
 5868 0136 19       		.uleb128 0x19
 5869 0137 01       		.uleb128 0x1
 5870 0138 13       		.uleb128 0x13
 5871 0139 00       		.byte	0
 5872 013a 00       		.byte	0
 5873 013b 13       		.uleb128 0x13
 5874 013c 2E       		.uleb128 0x2e
 5875 013d 00       		.byte	0
 5876 013e 3F       		.uleb128 0x3f
 5877 013f 19       		.uleb128 0x19
 5878 0140 03       		.uleb128 0x3
 5879 0141 0E       		.uleb128 0xe
 5880 0142 3A       		.uleb128 0x3a
 5881 0143 0B       		.uleb128 0xb
 5882 0144 3B       		.uleb128 0x3b
 5883 0145 05       		.uleb128 0x5
 5884 0146 27       		.uleb128 0x27
 5885 0147 19       		.uleb128 0x19
 5886 0148 49       		.uleb128 0x49
 5887 0149 13       		.uleb128 0x13
 5888 014a 11       		.uleb128 0x11
 5889 014b 01       		.uleb128 0x1
 5890 014c 12       		.uleb128 0x12
 5891 014d 06       		.uleb128 0x6
 5892 014e 40       		.uleb128 0x40
 5893 014f 18       		.uleb128 0x18
 5894 0150 9742     		.uleb128 0x2117
 5895 0152 19       		.uleb128 0x19
 5896 0153 00       		.byte	0
 5897 0154 00       		.byte	0
 5898 0155 14       		.uleb128 0x14
 5899 0156 2E       		.uleb128 0x2e
 5900 0157 01       		.byte	0x1
 5901 0158 3F       		.uleb128 0x3f
 5902 0159 19       		.uleb128 0x19
 5903 015a 03       		.uleb128 0x3
 5904 015b 0E       		.uleb128 0xe
 5905 015c 3A       		.uleb128 0x3a
 5906 015d 0B       		.uleb128 0xb
 5907 015e 3B       		.uleb128 0x3b
 5908 015f 05       		.uleb128 0x5
 5909 0160 27       		.uleb128 0x27
 5910 0161 19       		.uleb128 0x19
 5911 0162 11       		.uleb128 0x11
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 158


 5912 0163 01       		.uleb128 0x1
 5913 0164 12       		.uleb128 0x12
 5914 0165 06       		.uleb128 0x6
 5915 0166 40       		.uleb128 0x40
 5916 0167 18       		.uleb128 0x18
 5917 0168 9742     		.uleb128 0x2117
 5918 016a 19       		.uleb128 0x19
 5919 016b 01       		.uleb128 0x1
 5920 016c 13       		.uleb128 0x13
 5921 016d 00       		.byte	0
 5922 016e 00       		.byte	0
 5923 016f 15       		.uleb128 0x15
 5924 0170 2E       		.uleb128 0x2e
 5925 0171 01       		.byte	0x1
 5926 0172 03       		.uleb128 0x3
 5927 0173 0E       		.uleb128 0xe
 5928 0174 3A       		.uleb128 0x3a
 5929 0175 0B       		.uleb128 0xb
 5930 0176 3B       		.uleb128 0x3b
 5931 0177 05       		.uleb128 0x5
 5932 0178 27       		.uleb128 0x27
 5933 0179 19       		.uleb128 0x19
 5934 017a 11       		.uleb128 0x11
 5935 017b 01       		.uleb128 0x1
 5936 017c 12       		.uleb128 0x12
 5937 017d 06       		.uleb128 0x6
 5938 017e 40       		.uleb128 0x40
 5939 017f 18       		.uleb128 0x18
 5940 0180 9642     		.uleb128 0x2116
 5941 0182 19       		.uleb128 0x19
 5942 0183 01       		.uleb128 0x1
 5943 0184 13       		.uleb128 0x13
 5944 0185 00       		.byte	0
 5945 0186 00       		.byte	0
 5946 0187 16       		.uleb128 0x16
 5947 0188 2E       		.uleb128 0x2e
 5948 0189 00       		.byte	0
 5949 018a 03       		.uleb128 0x3
 5950 018b 0E       		.uleb128 0xe
 5951 018c 3A       		.uleb128 0x3a
 5952 018d 0B       		.uleb128 0xb
 5953 018e 3B       		.uleb128 0x3b
 5954 018f 05       		.uleb128 0x5
 5955 0190 27       		.uleb128 0x27
 5956 0191 19       		.uleb128 0x19
 5957 0192 11       		.uleb128 0x11
 5958 0193 01       		.uleb128 0x1
 5959 0194 12       		.uleb128 0x12
 5960 0195 06       		.uleb128 0x6
 5961 0196 40       		.uleb128 0x40
 5962 0197 18       		.uleb128 0x18
 5963 0198 9642     		.uleb128 0x2116
 5964 019a 19       		.uleb128 0x19
 5965 019b 00       		.byte	0
 5966 019c 00       		.byte	0
 5967 019d 17       		.uleb128 0x17
 5968 019e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 159


 5969 019f 00       		.byte	0
 5970 01a0 3F       		.uleb128 0x3f
 5971 01a1 19       		.uleb128 0x19
 5972 01a2 03       		.uleb128 0x3
 5973 01a3 0E       		.uleb128 0xe
 5974 01a4 3A       		.uleb128 0x3a
 5975 01a5 0B       		.uleb128 0xb
 5976 01a6 3B       		.uleb128 0x3b
 5977 01a7 05       		.uleb128 0x5
 5978 01a8 27       		.uleb128 0x27
 5979 01a9 19       		.uleb128 0x19
 5980 01aa 11       		.uleb128 0x11
 5981 01ab 01       		.uleb128 0x1
 5982 01ac 12       		.uleb128 0x12
 5983 01ad 06       		.uleb128 0x6
 5984 01ae 40       		.uleb128 0x40
 5985 01af 18       		.uleb128 0x18
 5986 01b0 9742     		.uleb128 0x2117
 5987 01b2 19       		.uleb128 0x19
 5988 01b3 00       		.byte	0
 5989 01b4 00       		.byte	0
 5990 01b5 18       		.uleb128 0x18
 5991 01b6 2E       		.uleb128 0x2e
 5992 01b7 00       		.byte	0
 5993 01b8 3F       		.uleb128 0x3f
 5994 01b9 19       		.uleb128 0x19
 5995 01ba 03       		.uleb128 0x3
 5996 01bb 0E       		.uleb128 0xe
 5997 01bc 3A       		.uleb128 0x3a
 5998 01bd 0B       		.uleb128 0xb
 5999 01be 3B       		.uleb128 0x3b
 6000 01bf 05       		.uleb128 0x5
 6001 01c0 27       		.uleb128 0x27
 6002 01c1 19       		.uleb128 0x19
 6003 01c2 11       		.uleb128 0x11
 6004 01c3 01       		.uleb128 0x1
 6005 01c4 12       		.uleb128 0x12
 6006 01c5 06       		.uleb128 0x6
 6007 01c6 40       		.uleb128 0x40
 6008 01c7 18       		.uleb128 0x18
 6009 01c8 9642     		.uleb128 0x2116
 6010 01ca 19       		.uleb128 0x19
 6011 01cb 00       		.byte	0
 6012 01cc 00       		.byte	0
 6013 01cd 19       		.uleb128 0x19
 6014 01ce 34       		.uleb128 0x34
 6015 01cf 00       		.byte	0
 6016 01d0 03       		.uleb128 0x3
 6017 01d1 08       		.uleb128 0x8
 6018 01d2 3A       		.uleb128 0x3a
 6019 01d3 0B       		.uleb128 0xb
 6020 01d4 3B       		.uleb128 0x3b
 6021 01d5 05       		.uleb128 0x5
 6022 01d6 49       		.uleb128 0x49
 6023 01d7 13       		.uleb128 0x13
 6024 01d8 02       		.uleb128 0x2
 6025 01d9 18       		.uleb128 0x18
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 160


 6026 01da 00       		.byte	0
 6027 01db 00       		.byte	0
 6028 01dc 1A       		.uleb128 0x1a
 6029 01dd 01       		.uleb128 0x1
 6030 01de 01       		.byte	0x1
 6031 01df 49       		.uleb128 0x49
 6032 01e0 13       		.uleb128 0x13
 6033 01e1 01       		.uleb128 0x1
 6034 01e2 13       		.uleb128 0x13
 6035 01e3 00       		.byte	0
 6036 01e4 00       		.byte	0
 6037 01e5 1B       		.uleb128 0x1b
 6038 01e6 21       		.uleb128 0x21
 6039 01e7 00       		.byte	0
 6040 01e8 49       		.uleb128 0x49
 6041 01e9 13       		.uleb128 0x13
 6042 01ea 2F       		.uleb128 0x2f
 6043 01eb 0B       		.uleb128 0xb
 6044 01ec 00       		.byte	0
 6045 01ed 00       		.byte	0
 6046 01ee 1C       		.uleb128 0x1c
 6047 01ef 34       		.uleb128 0x34
 6048 01f0 00       		.byte	0
 6049 01f1 03       		.uleb128 0x3
 6050 01f2 0E       		.uleb128 0xe
 6051 01f3 3A       		.uleb128 0x3a
 6052 01f4 0B       		.uleb128 0xb
 6053 01f5 3B       		.uleb128 0x3b
 6054 01f6 0B       		.uleb128 0xb
 6055 01f7 49       		.uleb128 0x49
 6056 01f8 13       		.uleb128 0x13
 6057 01f9 3F       		.uleb128 0x3f
 6058 01fa 19       		.uleb128 0x19
 6059 01fb 02       		.uleb128 0x2
 6060 01fc 18       		.uleb128 0x18
 6061 01fd 00       		.byte	0
 6062 01fe 00       		.byte	0
 6063 01ff 1D       		.uleb128 0x1d
 6064 0200 26       		.uleb128 0x26
 6065 0201 00       		.byte	0
 6066 0202 49       		.uleb128 0x49
 6067 0203 13       		.uleb128 0x13
 6068 0204 00       		.byte	0
 6069 0205 00       		.byte	0
 6070 0206 00       		.byte	0
 6071              		.section	.debug_aranges,"",%progbits
 6072 0000 2C020000 		.4byte	0x22c
 6073 0004 0200     		.2byte	0x2
 6074 0006 00000000 		.4byte	.Ldebug_info0
 6075 000a 04       		.byte	0x4
 6076 000b 00       		.byte	0
 6077 000c 0000     		.2byte	0
 6078 000e 0000     		.2byte	0
 6079 0010 00000000 		.4byte	.LFB0
 6080 0014 1C000000 		.4byte	.LFE0-.LFB0
 6081 0018 00000000 		.4byte	.LFB1
 6082 001c 1C000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 161


 6083 0020 00000000 		.4byte	.LFB2
 6084 0024 1C000000 		.4byte	.LFE2-.LFB2
 6085 0028 00000000 		.4byte	.LFB3
 6086 002c 4C000000 		.4byte	.LFE3-.LFB3
 6087 0030 00000000 		.4byte	.LFB4
 6088 0034 1C000000 		.4byte	.LFE4-.LFB4
 6089 0038 00000000 		.4byte	.LFB5
 6090 003c 44000000 		.4byte	.LFE5-.LFB5
 6091 0040 00000000 		.4byte	.LFB6
 6092 0044 48000000 		.4byte	.LFE6-.LFB6
 6093 0048 00000000 		.4byte	.LFB7
 6094 004c E4010000 		.4byte	.LFE7-.LFB7
 6095 0050 00000000 		.4byte	.LFB8
 6096 0054 34000000 		.4byte	.LFE8-.LFB8
 6097 0058 00000000 		.4byte	.LFB9
 6098 005c 20000000 		.4byte	.LFE9-.LFB9
 6099 0060 00000000 		.4byte	.LFB10
 6100 0064 50000000 		.4byte	.LFE10-.LFB10
 6101 0068 00000000 		.4byte	.LFB11
 6102 006c 34000000 		.4byte	.LFE11-.LFB11
 6103 0070 00000000 		.4byte	.LFB12
 6104 0074 5C000000 		.4byte	.LFE12-.LFB12
 6105 0078 00000000 		.4byte	.LFB13
 6106 007c 24000000 		.4byte	.LFE13-.LFB13
 6107 0080 00000000 		.4byte	.LFB14
 6108 0084 6C000000 		.4byte	.LFE14-.LFB14
 6109 0088 00000000 		.4byte	.LFB15
 6110 008c 44000000 		.4byte	.LFE15-.LFB15
 6111 0090 00000000 		.4byte	.LFB16
 6112 0094 64000000 		.4byte	.LFE16-.LFB16
 6113 0098 00000000 		.4byte	.LFB17
 6114 009c 64000000 		.4byte	.LFE17-.LFB17
 6115 00a0 00000000 		.4byte	.LFB18
 6116 00a4 58000000 		.4byte	.LFE18-.LFB18
 6117 00a8 00000000 		.4byte	.LFB19
 6118 00ac 1C000000 		.4byte	.LFE19-.LFB19
 6119 00b0 00000000 		.4byte	.LFB20
 6120 00b4 6C000000 		.4byte	.LFE20-.LFB20
 6121 00b8 00000000 		.4byte	.LFB21
 6122 00bc 48000000 		.4byte	.LFE21-.LFB21
 6123 00c0 00000000 		.4byte	.LFB22
 6124 00c4 18000000 		.4byte	.LFE22-.LFB22
 6125 00c8 00000000 		.4byte	.LFB23
 6126 00cc 40000000 		.4byte	.LFE23-.LFB23
 6127 00d0 00000000 		.4byte	.LFB24
 6128 00d4 54000000 		.4byte	.LFE24-.LFB24
 6129 00d8 00000000 		.4byte	.LFB25
 6130 00dc 1C000000 		.4byte	.LFE25-.LFB25
 6131 00e0 00000000 		.4byte	.LFB26
 6132 00e4 6C000000 		.4byte	.LFE26-.LFB26
 6133 00e8 00000000 		.4byte	.LFB27
 6134 00ec 28000000 		.4byte	.LFE27-.LFB27
 6135 00f0 00000000 		.4byte	.LFB28
 6136 00f4 98000000 		.4byte	.LFE28-.LFB28
 6137 00f8 00000000 		.4byte	.LFB29
 6138 00fc 3C000000 		.4byte	.LFE29-.LFB29
 6139 0100 00000000 		.4byte	.LFB30
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 162


 6140 0104 48000000 		.4byte	.LFE30-.LFB30
 6141 0108 00000000 		.4byte	.LFB31
 6142 010c 2C000000 		.4byte	.LFE31-.LFB31
 6143 0110 00000000 		.4byte	.LFB32
 6144 0114 18000000 		.4byte	.LFE32-.LFB32
 6145 0118 00000000 		.4byte	.LFB33
 6146 011c 14000000 		.4byte	.LFE33-.LFB33
 6147 0120 00000000 		.4byte	.LFB34
 6148 0124 30000000 		.4byte	.LFE34-.LFB34
 6149 0128 00000000 		.4byte	.LFB35
 6150 012c 24000000 		.4byte	.LFE35-.LFB35
 6151 0130 00000000 		.4byte	.LFB36
 6152 0134 1C000000 		.4byte	.LFE36-.LFB36
 6153 0138 00000000 		.4byte	.LFB37
 6154 013c 48000000 		.4byte	.LFE37-.LFB37
 6155 0140 00000000 		.4byte	.LFB38
 6156 0144 34000000 		.4byte	.LFE38-.LFB38
 6157 0148 00000000 		.4byte	.LFB39
 6158 014c 4C000000 		.4byte	.LFE39-.LFB39
 6159 0150 00000000 		.4byte	.LFB40
 6160 0154 36000000 		.4byte	.LFE40-.LFB40
 6161 0158 00000000 		.4byte	.LFB41
 6162 015c A8000000 		.4byte	.LFE41-.LFB41
 6163 0160 00000000 		.4byte	.LFB42
 6164 0164 58000000 		.4byte	.LFE42-.LFB42
 6165 0168 00000000 		.4byte	.LFB43
 6166 016c 2C000000 		.4byte	.LFE43-.LFB43
 6167 0170 00000000 		.4byte	.LFB44
 6168 0174 30000000 		.4byte	.LFE44-.LFB44
 6169 0178 00000000 		.4byte	.LFB45
 6170 017c 2C000000 		.4byte	.LFE45-.LFB45
 6171 0180 00000000 		.4byte	.LFB46
 6172 0184 2C000000 		.4byte	.LFE46-.LFB46
 6173 0188 00000000 		.4byte	.LFB47
 6174 018c 2C000000 		.4byte	.LFE47-.LFB47
 6175 0190 00000000 		.4byte	.LFB48
 6176 0194 16000000 		.4byte	.LFE48-.LFB48
 6177 0198 00000000 		.4byte	.LFB49
 6178 019c 24000000 		.4byte	.LFE49-.LFB49
 6179 01a0 00000000 		.4byte	.LFB50
 6180 01a4 4C000000 		.4byte	.LFE50-.LFB50
 6181 01a8 00000000 		.4byte	.LFB51
 6182 01ac 28000000 		.4byte	.LFE51-.LFB51
 6183 01b0 00000000 		.4byte	.LFB52
 6184 01b4 84000000 		.4byte	.LFE52-.LFB52
 6185 01b8 00000000 		.4byte	.LFB53
 6186 01bc 24000000 		.4byte	.LFE53-.LFB53
 6187 01c0 00000000 		.4byte	.LFB54
 6188 01c4 60000000 		.4byte	.LFE54-.LFB54
 6189 01c8 00000000 		.4byte	.LFB55
 6190 01cc 20000000 		.4byte	.LFE55-.LFB55
 6191 01d0 00000000 		.4byte	.LFB56
 6192 01d4 1C000000 		.4byte	.LFE56-.LFB56
 6193 01d8 00000000 		.4byte	.LFB57
 6194 01dc 1C000000 		.4byte	.LFE57-.LFB57
 6195 01e0 00000000 		.4byte	.LFB58
 6196 01e4 1C000000 		.4byte	.LFE58-.LFB58
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 163


 6197 01e8 00000000 		.4byte	.LFB59
 6198 01ec 20000000 		.4byte	.LFE59-.LFB59
 6199 01f0 00000000 		.4byte	.LFB60
 6200 01f4 18000000 		.4byte	.LFE60-.LFB60
 6201 01f8 00000000 		.4byte	.LFB61
 6202 01fc 1C000000 		.4byte	.LFE61-.LFB61
 6203 0200 00000000 		.4byte	.LFB62
 6204 0204 18000000 		.4byte	.LFE62-.LFB62
 6205 0208 00000000 		.4byte	.LFB63
 6206 020c 14000000 		.4byte	.LFE63-.LFB63
 6207 0210 00000000 		.4byte	.LFB64
 6208 0214 2C000000 		.4byte	.LFE64-.LFB64
 6209 0218 00000000 		.4byte	.LFB65
 6210 021c 1C000000 		.4byte	.LFE65-.LFB65
 6211 0220 00000000 		.4byte	.LFB66
 6212 0224 44000000 		.4byte	.LFE66-.LFB66
 6213 0228 00000000 		.4byte	0
 6214 022c 00000000 		.4byte	0
 6215              		.section	.debug_ranges,"",%progbits
 6216              	.Ldebug_ranges0:
 6217 0000 00000000 		.4byte	.LFB0
 6218 0004 1C000000 		.4byte	.LFE0
 6219 0008 00000000 		.4byte	.LFB1
 6220 000c 1C000000 		.4byte	.LFE1
 6221 0010 00000000 		.4byte	.LFB2
 6222 0014 1C000000 		.4byte	.LFE2
 6223 0018 00000000 		.4byte	.LFB3
 6224 001c 4C000000 		.4byte	.LFE3
 6225 0020 00000000 		.4byte	.LFB4
 6226 0024 1C000000 		.4byte	.LFE4
 6227 0028 00000000 		.4byte	.LFB5
 6228 002c 44000000 		.4byte	.LFE5
 6229 0030 00000000 		.4byte	.LFB6
 6230 0034 48000000 		.4byte	.LFE6
 6231 0038 00000000 		.4byte	.LFB7
 6232 003c E4010000 		.4byte	.LFE7
 6233 0040 00000000 		.4byte	.LFB8
 6234 0044 34000000 		.4byte	.LFE8
 6235 0048 00000000 		.4byte	.LFB9
 6236 004c 20000000 		.4byte	.LFE9
 6237 0050 00000000 		.4byte	.LFB10
 6238 0054 50000000 		.4byte	.LFE10
 6239 0058 00000000 		.4byte	.LFB11
 6240 005c 34000000 		.4byte	.LFE11
 6241 0060 00000000 		.4byte	.LFB12
 6242 0064 5C000000 		.4byte	.LFE12
 6243 0068 00000000 		.4byte	.LFB13
 6244 006c 24000000 		.4byte	.LFE13
 6245 0070 00000000 		.4byte	.LFB14
 6246 0074 6C000000 		.4byte	.LFE14
 6247 0078 00000000 		.4byte	.LFB15
 6248 007c 44000000 		.4byte	.LFE15
 6249 0080 00000000 		.4byte	.LFB16
 6250 0084 64000000 		.4byte	.LFE16
 6251 0088 00000000 		.4byte	.LFB17
 6252 008c 64000000 		.4byte	.LFE17
 6253 0090 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 164


 6254 0094 58000000 		.4byte	.LFE18
 6255 0098 00000000 		.4byte	.LFB19
 6256 009c 1C000000 		.4byte	.LFE19
 6257 00a0 00000000 		.4byte	.LFB20
 6258 00a4 6C000000 		.4byte	.LFE20
 6259 00a8 00000000 		.4byte	.LFB21
 6260 00ac 48000000 		.4byte	.LFE21
 6261 00b0 00000000 		.4byte	.LFB22
 6262 00b4 18000000 		.4byte	.LFE22
 6263 00b8 00000000 		.4byte	.LFB23
 6264 00bc 40000000 		.4byte	.LFE23
 6265 00c0 00000000 		.4byte	.LFB24
 6266 00c4 54000000 		.4byte	.LFE24
 6267 00c8 00000000 		.4byte	.LFB25
 6268 00cc 1C000000 		.4byte	.LFE25
 6269 00d0 00000000 		.4byte	.LFB26
 6270 00d4 6C000000 		.4byte	.LFE26
 6271 00d8 00000000 		.4byte	.LFB27
 6272 00dc 28000000 		.4byte	.LFE27
 6273 00e0 00000000 		.4byte	.LFB28
 6274 00e4 98000000 		.4byte	.LFE28
 6275 00e8 00000000 		.4byte	.LFB29
 6276 00ec 3C000000 		.4byte	.LFE29
 6277 00f0 00000000 		.4byte	.LFB30
 6278 00f4 48000000 		.4byte	.LFE30
 6279 00f8 00000000 		.4byte	.LFB31
 6280 00fc 2C000000 		.4byte	.LFE31
 6281 0100 00000000 		.4byte	.LFB32
 6282 0104 18000000 		.4byte	.LFE32
 6283 0108 00000000 		.4byte	.LFB33
 6284 010c 14000000 		.4byte	.LFE33
 6285 0110 00000000 		.4byte	.LFB34
 6286 0114 30000000 		.4byte	.LFE34
 6287 0118 00000000 		.4byte	.LFB35
 6288 011c 24000000 		.4byte	.LFE35
 6289 0120 00000000 		.4byte	.LFB36
 6290 0124 1C000000 		.4byte	.LFE36
 6291 0128 00000000 		.4byte	.LFB37
 6292 012c 48000000 		.4byte	.LFE37
 6293 0130 00000000 		.4byte	.LFB38
 6294 0134 34000000 		.4byte	.LFE38
 6295 0138 00000000 		.4byte	.LFB39
 6296 013c 4C000000 		.4byte	.LFE39
 6297 0140 00000000 		.4byte	.LFB40
 6298 0144 36000000 		.4byte	.LFE40
 6299 0148 00000000 		.4byte	.LFB41
 6300 014c A8000000 		.4byte	.LFE41
 6301 0150 00000000 		.4byte	.LFB42
 6302 0154 58000000 		.4byte	.LFE42
 6303 0158 00000000 		.4byte	.LFB43
 6304 015c 2C000000 		.4byte	.LFE43
 6305 0160 00000000 		.4byte	.LFB44
 6306 0164 30000000 		.4byte	.LFE44
 6307 0168 00000000 		.4byte	.LFB45
 6308 016c 2C000000 		.4byte	.LFE45
 6309 0170 00000000 		.4byte	.LFB46
 6310 0174 2C000000 		.4byte	.LFE46
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 165


 6311 0178 00000000 		.4byte	.LFB47
 6312 017c 2C000000 		.4byte	.LFE47
 6313 0180 00000000 		.4byte	.LFB48
 6314 0184 16000000 		.4byte	.LFE48
 6315 0188 00000000 		.4byte	.LFB49
 6316 018c 24000000 		.4byte	.LFE49
 6317 0190 00000000 		.4byte	.LFB50
 6318 0194 4C000000 		.4byte	.LFE50
 6319 0198 00000000 		.4byte	.LFB51
 6320 019c 28000000 		.4byte	.LFE51
 6321 01a0 00000000 		.4byte	.LFB52
 6322 01a4 84000000 		.4byte	.LFE52
 6323 01a8 00000000 		.4byte	.LFB53
 6324 01ac 24000000 		.4byte	.LFE53
 6325 01b0 00000000 		.4byte	.LFB54
 6326 01b4 60000000 		.4byte	.LFE54
 6327 01b8 00000000 		.4byte	.LFB55
 6328 01bc 20000000 		.4byte	.LFE55
 6329 01c0 00000000 		.4byte	.LFB56
 6330 01c4 1C000000 		.4byte	.LFE56
 6331 01c8 00000000 		.4byte	.LFB57
 6332 01cc 1C000000 		.4byte	.LFE57
 6333 01d0 00000000 		.4byte	.LFB58
 6334 01d4 1C000000 		.4byte	.LFE58
 6335 01d8 00000000 		.4byte	.LFB59
 6336 01dc 20000000 		.4byte	.LFE59
 6337 01e0 00000000 		.4byte	.LFB60
 6338 01e4 18000000 		.4byte	.LFE60
 6339 01e8 00000000 		.4byte	.LFB61
 6340 01ec 1C000000 		.4byte	.LFE61
 6341 01f0 00000000 		.4byte	.LFB62
 6342 01f4 18000000 		.4byte	.LFE62
 6343 01f8 00000000 		.4byte	.LFB63
 6344 01fc 14000000 		.4byte	.LFE63
 6345 0200 00000000 		.4byte	.LFB64
 6346 0204 2C000000 		.4byte	.LFE64
 6347 0208 00000000 		.4byte	.LFB65
 6348 020c 1C000000 		.4byte	.LFE65
 6349 0210 00000000 		.4byte	.LFB66
 6350 0214 44000000 		.4byte	.LFE66
 6351 0218 00000000 		.4byte	0
 6352 021c 00000000 		.4byte	0
 6353              		.section	.debug_line,"",%progbits
 6354              	.Ldebug_line0:
 6355 0000 06070000 		.section	.debug_str,"MS",%progbits,1
 6355      02004D00 
 6355      00000201 
 6355      FB0E0D00 
 6355      01010101 
 6356              	.LASF41:
 6357 0000 43795379 		.ascii	"CySysWdtWriteMode\000"
 6357      73576474 
 6357      57726974 
 6357      654D6F64 
 6357      6500
 6358              	.LASF32:
 6359 0012 62675472 		.ascii	"bgTrim4\000"
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 166


 6359      696D3400 
 6360              	.LASF10:
 6361 001a 75696E74 		.ascii	"uint16\000"
 6361      313600
 6362              	.LASF79:
 6363 0021 696E7453 		.ascii	"intState\000"
 6363      74617465 
 6363      00
 6364              	.LASF93:
 6365 002a 76616C75 		.ascii	"value\000"
 6365      6500
 6366              	.LASF25:
 6367 0030 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 6367      73436C6B 
 6367      57726974 
 6367      65486663 
 6367      6C6B4469 
 6368              	.LASF39:
 6369 0049 43795379 		.ascii	"CySysWdtUnlock\000"
 6369      73576474 
 6369      556E6C6F 
 6369      636B00
 6370              	.LASF85:
 6371 0058 6F6C6449 		.ascii	"oldIsr\000"
 6371      737200
 6372              	.LASF40:
 6373 005f 636F756E 		.ascii	"counterNum\000"
 6373      7465724E 
 6373      756D00
 6374              	.LASF122:
 6375 006a 43795379 		.ascii	"CySysClkLfclkPosedgeCatch\000"
 6375      73436C6B 
 6375      4C66636C 
 6375      6B506F73 
 6375      65646765 
 6376              	.LASF35:
 6377 0084 63757272 		.ascii	"currentImoTrim2Value\000"
 6377      656E7449 
 6377      6D6F5472 
 6377      696D3256 
 6377      616C7565 
 6378              	.LASF130:
 6379 0099 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Enabled\000"
 6379      6B506F73 
 6379      65646765 
 6379      57647443 
 6379      6F756E74 
 6380              	.LASF7:
 6381 00b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 6381      206C6F6E 
 6381      6720756E 
 6381      7369676E 
 6381      65642069 
 6382              	.LASF125:
 6383 00cf 43795379 		.ascii	"CySysTickInitVar\000"
 6383      73546963 
 6383      6B496E69 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 167


 6383      74566172 
 6383      00
 6384              	.LASF80:
 6385 00e0 4379456E 		.ascii	"CyEnableInts\000"
 6385      61626C65 
 6385      496E7473 
 6385      00
 6386              	.LASF101:
 6387 00ed 4379536F 		.ascii	"CySoftwareReset\000"
 6387      66747761 
 6387      72655265 
 6387      73657400 
 6388              	.LASF111:
 6389 00fd 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 6389      73546963 
 6389      6B456E61 
 6389      626C6549 
 6389      6E746572 
 6390              	.LASF96:
 6391 0116 4379496E 		.ascii	"CyIntGetState\000"
 6391      74476574 
 6391      53746174 
 6391      6500
 6392              	.LASF6:
 6393 0124 6C6F6E67 		.ascii	"long long int\000"
 6393      206C6F6E 
 6393      6720696E 
 6393      7400
 6394              	.LASF0:
 6395 0132 7369676E 		.ascii	"signed char\000"
 6395      65642063 
 6395      68617200 
 6396              	.LASF31:
 6397 013e 66726571 		.ascii	"freq\000"
 6397      00
 6398              	.LASF63:
 6399 0143 43795379 		.ascii	"CySysWdtReadCount\000"
 6399      73576474 
 6399      52656164 
 6399      436F756E 
 6399      7400
 6400              	.LASF106:
 6401 0155 43794465 		.ascii	"CyDelayFreq\000"
 6401      6C617946 
 6401      72657100 
 6402              	.LASF26:
 6403 0161 696E7465 		.ascii	"interruptState\000"
 6403      72727570 
 6403      74537461 
 6403      746500
 6404              	.LASF104:
 6405 0170 43794465 		.ascii	"CyDelayUs\000"
 6405      6C617955 
 6405      7300
 6406              	.LASF114:
 6407 017a 43795379 		.ascii	"CySysTickGetReload\000"
 6407      73546963 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 168


 6407      6B476574 
 6407      52656C6F 
 6407      616400
 6408              	.LASF55:
 6409 018d 43795379 		.ascii	"CySysWdtWriteMatch\000"
 6409      73576474 
 6409      57726974 
 6409      654D6174 
 6409      636800
 6410              	.LASF59:
 6411 01a0 62697473 		.ascii	"bits\000"
 6411      00
 6412              	.LASF4:
 6413 01a5 6C6F6E67 		.ascii	"long int\000"
 6413      20696E74 
 6413      00
 6414              	.LASF97:
 6415 01ae 4379496E 		.ascii	"CyIntDisable\000"
 6415      74446973 
 6415      61626C65 
 6415      00
 6416              	.LASF121:
 6417 01bb 43795379 		.ascii	"CySysTickGetCallback\000"
 6417      73546963 
 6417      6B476574 
 6417      43616C6C 
 6417      6261636B 
 6418              	.LASF9:
 6419 01d0 75696E74 		.ascii	"uint8\000"
 6419      3800
 6420              	.LASF127:
 6421 01d6 63796465 		.ascii	"cydelayFreqKhz\000"
 6421      6C617946 
 6421      7265714B 
 6421      687A00
 6422              	.LASF47:
 6423 01e5 656E6162 		.ascii	"enable\000"
 6423      6C6500
 6424              	.LASF13:
 6425 01ec 646F7562 		.ascii	"double\000"
 6425      6C6500
 6426              	.LASF24:
 6427 01f3 43795379 		.ascii	"CySysClkIloStop\000"
 6427      73436C6B 
 6427      496C6F53 
 6427      746F7000 
 6428              	.LASF52:
 6429 0203 43795379 		.ascii	"CySysWdtWriteCascade\000"
 6429      73576474 
 6429      57726974 
 6429      65436173 
 6429      63616465 
 6430              	.LASF92:
 6431 0218 73686966 		.ascii	"shift\000"
 6431      7400
 6432              	.LASF68:
 6433 021e 636F756E 		.ascii	"countersMask\000"
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 169


 6433      74657273 
 6433      4D61736B 
 6433      00
 6434              	.LASF74:
 6435 022b 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 6435      734C7664 
 6435      436C6561 
 6435      72496E74 
 6435      65727275 
 6436              	.LASF11:
 6437 0242 75696E74 		.ascii	"uint32\000"
 6437      333200
 6438              	.LASF81:
 6439 0249 6D61736B 		.ascii	"mask\000"
 6439      00
 6440              	.LASF57:
 6441 024e 72656756 		.ascii	"regValue\000"
 6441      616C7565 
 6441      00
 6442              	.LASF45:
 6443 0257 43795379 		.ascii	"CySysWdtReadMode\000"
 6443      73576474 
 6443      52656164 
 6443      4D6F6465 
 6443      00
 6444              	.LASF70:
 6445 0268 43795379 		.ascii	"CySysLvdEnable\000"
 6445      734C7664 
 6445      456E6162 
 6445      6C6500
 6446              	.LASF94:
 6447 0277 4379496E 		.ascii	"CyIntGetPriority\000"
 6447      74476574 
 6447      5072696F 
 6447      72697479 
 6447      00
 6448              	.LASF54:
 6449 0288 636F756E 		.ascii	"countersEnableStatus\000"
 6449      74657273 
 6449      456E6162 
 6449      6C655374 
 6449      61747573 
 6450              	.LASF108:
 6451 029d 43795379 		.ascii	"CySysTickInit\000"
 6451      73546963 
 6451      6B496E69 
 6451      7400
 6452              	.LASF49:
 6453 02ab 43795379 		.ascii	"CySysWdtEnable\000"
 6453      73576474 
 6453      456E6162 
 6453      6C6500
 6454              	.LASF50:
 6455 02ba 636F756E 		.ascii	"counterMask\000"
 6455      7465724D 
 6455      61736B00 
 6456              	.LASF116:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 170


 6457 02c6 43795379 		.ascii	"CySysTickGetCountFlag\000"
 6457      73546963 
 6457      6B476574 
 6457      436F756E 
 6457      74466C61 
 6458              	.LASF8:
 6459 02dc 756E7369 		.ascii	"unsigned int\000"
 6459      676E6564 
 6459      20696E74 
 6459      00
 6460              	.LASF69:
 6461 02e9 66697273 		.ascii	"firstCount\000"
 6461      74436F75 
 6461      6E7400
 6462              	.LASF117:
 6463 02f4 43795379 		.ascii	"CySysTickClear\000"
 6463      73546963 
 6463      6B436C65 
 6463      617200
 6464              	.LASF5:
 6465 0303 6C6F6E67 		.ascii	"long unsigned int\000"
 6465      20756E73 
 6465      69676E65 
 6465      6420696E 
 6465      7400
 6466              	.LASF73:
 6467 0315 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 6467      734C7664 
 6467      47657449 
 6467      6E746572 
 6467      72757074 
 6468              	.LASF22:
 6469 0330 43795379 		.ascii	"CySysClkImoStop\000"
 6469      73436C6B 
 6469      496D6F53 
 6469      746F7000 
 6470              	.LASF136:
 6471 0340 443A5C4E 		.ascii	"D:\\Nico\\Archivos\\lib_psoc\\Cypress-PSOC-OLED-mas"
 6471      69636F5C 
 6471      41726368 
 6471      69766F73 
 6471      5C6C6962 
 6472 036f 7465725C 		.ascii	"ter\\OLED.cydsn\000"
 6472      4F4C4544 
 6472      2E637964 
 6472      736E00
 6473              	.LASF137:
 6474 037e 43795379 		.ascii	"CySysClkLfclkPosedgeRestore\000"
 6474      73436C6B 
 6474      4C66636C 
 6474      6B506F73 
 6474      65646765 
 6475              	.LASF98:
 6476 039a 4379496E 		.ascii	"CyIntSetPending\000"
 6476      74536574 
 6476      50656E64 
 6476      696E6700 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 171


 6477              	.LASF78:
 6478 03aa 43794469 		.ascii	"CyDisableInts\000"
 6478      7361626C 
 6478      65496E74 
 6478      7300
 6479              	.LASF75:
 6480 03b8 43795379 		.ascii	"CySysGetResetReason\000"
 6480      73476574 
 6480      52657365 
 6480      74526561 
 6480      736F6E00 
 6481              	.LASF3:
 6482 03cc 73686F72 		.ascii	"short unsigned int\000"
 6482      7420756E 
 6482      7369676E 
 6482      65642069 
 6482      6E7400
 6483              	.LASF88:
 6484 03df 4379496E 		.ascii	"CyIntSetVector\000"
 6484      74536574 
 6484      56656374 
 6484      6F7200
 6485              	.LASF83:
 6486 03ee 6E756D62 		.ascii	"number\000"
 6486      657200
 6487              	.LASF23:
 6488 03f5 43795379 		.ascii	"CySysClkIloStart\000"
 6488      73436C6B 
 6488      496C6F53 
 6488      74617274 
 6488      00
 6489              	.LASF30:
 6490 0406 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 6490      73436C6B 
 6490      57726974 
 6490      65496D6F 
 6490      46726571 
 6491              	.LASF134:
 6492 041b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6492      43313120 
 6492      352E342E 
 6492      31203230 
 6492      31363036 
 6493 044e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6493      20726576 
 6493      6973696F 
 6493      6E203233 
 6493      37373135 
 6494 0481 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 6494      66756E63 
 6494      74696F6E 
 6494      2D736563 
 6494      74696F6E 
 6495              	.LASF82:
 6496 04a9 4379496E 		.ascii	"CyIntSetSysVector\000"
 6496      74536574 
 6496      53797356 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 172


 6496      6563746F 
 6496      7200
 6497              	.LASF16:
 6498 04bb 72656733 		.ascii	"reg32\000"
 6498      3200
 6499              	.LASF46:
 6500 04c1 43795379 		.ascii	"CySysWdtWriteClearOnMatch\000"
 6500      73576474 
 6500      57726974 
 6500      65436C65 
 6500      61724F6E 
 6501              	.LASF107:
 6502 04db 43795379 		.ascii	"CySysTickStart\000"
 6502      73546963 
 6502      6B537461 
 6502      727400
 6503              	.LASF48:
 6504 04ea 43795379 		.ascii	"CySysWdtReadClearOnMatch\000"
 6504      73576474 
 6504      52656164 
 6504      436C6561 
 6504      724F6E4D 
 6505              	.LASF19:
 6506 0503 73697A65 		.ascii	"sizetype\000"
 6506      74797065 
 6506      00
 6507              	.LASF99:
 6508 050c 4379496E 		.ascii	"CyIntClearPending\000"
 6508      74436C65 
 6508      61725065 
 6508      6E64696E 
 6508      6700
 6509              	.LASF18:
 6510 051e 6C6F6E67 		.ascii	"long double\000"
 6510      20646F75 
 6510      626C6500 
 6511              	.LASF84:
 6512 052a 61646472 		.ascii	"address\000"
 6512      65737300 
 6513              	.LASF33:
 6514 0532 62675472 		.ascii	"bgTrim5\000"
 6514      696D3500 
 6515              	.LASF120:
 6516 053a 72657456 		.ascii	"retVal\000"
 6516      616C00
 6517              	.LASF56:
 6518 0541 6D617463 		.ascii	"match\000"
 6518      6800
 6519              	.LASF133:
 6520 0547 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 6520      6F467265 
 6520      714D687A 
 6520      32526567 
 6520      00
 6521              	.LASF115:
 6522 0558 43795379 		.ascii	"CySysTickGetValue\000"
 6522      73546963 
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 173


 6522      6B476574 
 6522      56616C75 
 6522      6500
 6523              	.LASF126:
 6524 056a 63796465 		.ascii	"cydelayFreqHz\000"
 6524      6C617946 
 6524      72657148 
 6524      7A00
 6525              	.LASF67:
 6526 0578 43795379 		.ascii	"CySysWdtResetCounters\000"
 6526      73576474 
 6526      52657365 
 6526      74436F75 
 6526      6E746572 
 6527              	.LASF90:
 6528 058e 4379496E 		.ascii	"CyIntSetPriority\000"
 6528      74536574 
 6528      5072696F 
 6528      72697479 
 6528      00
 6529              	.LASF65:
 6530 059f 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 6530      73576474 
 6530      436C6561 
 6530      72496E74 
 6530      65727275 
 6531              	.LASF12:
 6532 05b6 666C6F61 		.ascii	"float\000"
 6532      7400
 6533              	.LASF20:
 6534 05bc 63795379 		.ascii	"cySysTickCallback\000"
 6534      73546963 
 6534      6B43616C 
 6534      6C626163 
 6534      6B00
 6535              	.LASF89:
 6536 05ce 4379496E 		.ascii	"CyIntGetVector\000"
 6536      74476574 
 6536      56656374 
 6536      6F7200
 6537              	.LASF103:
 6538 05dd 6D696C6C 		.ascii	"milliseconds\000"
 6538      69736563 
 6538      6F6E6473 
 6538      00
 6539              	.LASF61:
 6540 05ea 43795379 		.ascii	"CySysWdtReadToggleBit\000"
 6540      73576474 
 6540      52656164 
 6540      546F6767 
 6540      6C654269 
 6541              	.LASF38:
 6542 0600 43795379 		.ascii	"CySysWdtLocked\000"
 6542      73576474 
 6542      4C6F636B 
 6542      656400
 6543              	.LASF15:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 174


 6544 060f 72656738 		.ascii	"reg8\000"
 6544      00
 6545              	.LASF71:
 6546 0614 74687265 		.ascii	"threshold\000"
 6546      73686F6C 
 6546      6400
 6547              	.LASF100:
 6548 061e 43794861 		.ascii	"CyHalt\000"
 6548      6C7400
 6549              	.LASF1:
 6550 0625 756E7369 		.ascii	"unsigned char\000"
 6550      676E6564 
 6550      20636861 
 6550      7200
 6551              	.LASF131:
 6552 0633 6C66636C 		.ascii	"lfclkPosedgeEnabledWdtCounter\000"
 6552      6B506F73 
 6552      65646765 
 6552      456E6162 
 6552      6C656457 
 6553              	.LASF2:
 6554 0651 73686F72 		.ascii	"short int\000"
 6554      7420696E 
 6554      7400
 6555              	.LASF60:
 6556 065b 43795379 		.ascii	"CySysWdtReadCascade\000"
 6556      73576474 
 6556      52656164 
 6556      43617363 
 6556      61646500 
 6557              	.LASF51:
 6558 066f 43795379 		.ascii	"CySysWdtDisable\000"
 6558      73576474 
 6558      44697361 
 6558      626C6500 
 6559              	.LASF95:
 6560 067f 4379496E 		.ascii	"CyIntEnable\000"
 6560      74456E61 
 6560      626C6500 
 6561              	.LASF87:
 6562 068b 4379496E 		.ascii	"CyIntGetSysVector\000"
 6562      74476574 
 6562      53797356 
 6562      6563746F 
 6562      7200
 6563              	.LASF62:
 6564 069d 43795379 		.ascii	"CySysWdtReadMatch\000"
 6564      73576474 
 6564      52656164 
 6564      4D617463 
 6564      6800
 6565              	.LASF28:
 6566 06af 636C6B53 		.ascii	"clkSelect\000"
 6566      656C6563 
 6566      7400
 6567              	.LASF37:
 6568 06b9 43795379 		.ascii	"CySysClkIloEnabled\000"
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 175


 6568      73436C6B 
 6568      496C6F45 
 6568      6E61626C 
 6568      656400
 6569              	.LASF64:
 6570 06cc 43795379 		.ascii	"CySysWdtGetInterruptSource\000"
 6570      73576474 
 6570      47657449 
 6570      6E746572 
 6570      72757074 
 6571              	.LASF76:
 6572 06e7 72656173 		.ascii	"reason\000"
 6572      6F6E00
 6573              	.LASF86:
 6574 06ee 72616D56 		.ascii	"ramVectorTable\000"
 6574      6563746F 
 6574      72546162 
 6574      6C6500
 6575              	.LASF14:
 6576 06fd 63686172 		.ascii	"char\000"
 6576      00
 6577              	.LASF91:
 6578 0702 7072696F 		.ascii	"priority\000"
 6578      72697479 
 6578      00
 6579              	.LASF42:
 6580 070b 6D6F6465 		.ascii	"mode\000"
 6580      00
 6581              	.LASF17:
 6582 0710 63796973 		.ascii	"cyisraddress\000"
 6582      72616464 
 6582      72657373 
 6582      00
 6583              	.LASF109:
 6584 071d 43795379 		.ascii	"CySysTickEnable\000"
 6584      73546963 
 6584      6B456E61 
 6584      626C6500 
 6585              	.LASF36:
 6586 072d 43795379 		.ascii	"CySysWdtLock\000"
 6586      73576474 
 6586      4C6F636B 
 6586      00
 6587              	.LASF27:
 6588 073a 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6588      73436C6B 
 6588      57726974 
 6588      65537973 
 6588      636C6B44 
 6589              	.LASF118:
 6590 0751 43795379 		.ascii	"CySysTickSetCallback\000"
 6590      73546963 
 6590      6B536574 
 6590      43616C6C 
 6590      6261636B 
 6591              	.LASF124:
 6592 0766 43795379 		.ascii	"CySysTickCallbacks\000"
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 176


 6592      73546963 
 6592      6B43616C 
 6592      6C626163 
 6592      6B7300
 6593              	.LASF102:
 6594 0779 43794465 		.ascii	"CyDelay\000"
 6594      6C617900 
 6595              	.LASF112:
 6596 0781 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6596      73546963 
 6596      6B446973 
 6596      61626C65 
 6596      496E7465 
 6597              	.LASF129:
 6598 079b 63796465 		.ascii	"cydelay32kMs\000"
 6598      6C617933 
 6598      326B4D73 
 6598      00
 6599              	.LASF72:
 6600 07a8 43795379 		.ascii	"CySysLvdDisable\000"
 6600      734C7664 
 6600      44697361 
 6600      626C6500 
 6601              	.LASF43:
 6602 07b8 636F6E66 		.ascii	"configRegValue\000"
 6602      69675265 
 6602      6756616C 
 6602      756500
 6603              	.LASF128:
 6604 07c7 63796465 		.ascii	"cydelayFreqMhz\000"
 6604      6C617946 
 6604      7265714D 
 6604      687A00
 6605              	.LASF66:
 6606 07d6 7764744C 		.ascii	"wdtLockState\000"
 6606      6F636B53 
 6606      74617465 
 6606      00
 6607              	.LASF77:
 6608 07e3 73746174 		.ascii	"status\000"
 6608      757300
 6609              	.LASF132:
 6610 07ea 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Mode\000"
 6610      6B506F73 
 6610      65646765 
 6610      57647443 
 6610      6F756E74 
 6611              	.LASF110:
 6612 0806 43795379 		.ascii	"CySysTickStop\000"
 6612      73546963 
 6612      6B53746F 
 6612      7000
 6613              	.LASF53:
 6614 0814 63617363 		.ascii	"cascadeMask\000"
 6614      6164654D 
 6614      61736B00 
 6615              	.LASF29:
ARM GAS  C:\Users\jdrd3\AppData\Local\Temp\ccRHZt6s.s 			page 177


 6616 0820 64697669 		.ascii	"divider\000"
 6616      64657200 
 6617              	.LASF119:
 6618 0828 66756E63 		.ascii	"function\000"
 6618      74696F6E 
 6618      00
 6619              	.LASF21:
 6620 0831 43795379 		.ascii	"CySysClkImoStart\000"
 6620      73436C6B 
 6620      496D6F53 
 6620      74617274 
 6620      00
 6621              	.LASF44:
 6622 0842 43795379 		.ascii	"CySysWdtReadEnabledStatus\000"
 6622      73576474 
 6622      52656164 
 6622      456E6162 
 6622      6C656453 
 6623              	.LASF34:
 6624 085c 6E657749 		.ascii	"newImoTrim2Value\000"
 6624      6D6F5472 
 6624      696D3256 
 6624      616C7565 
 6624      00
 6625              	.LASF135:
 6626 086d 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6626      72617465 
 6626      645F536F 
 6626      75726365 
 6626      5C50536F 
 6627              	.LASF105:
 6628 088c 6D696372 		.ascii	"microseconds\000"
 6628      6F736563 
 6628      6F6E6473 
 6628      00
 6629              	.LASF113:
 6630 0899 43795379 		.ascii	"CySysTickSetReload\000"
 6630      73546963 
 6630      6B536574 
 6630      52656C6F 
 6630      616400
 6631              	.LASF123:
 6632 08ac 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 6632      73546963 
 6632      6B536572 
 6632      76696365 
 6632      43616C6C 
 6633              	.LASF58:
 6634 08c6 43795379 		.ascii	"CySysWdtWriteToggleBit\000"
 6634      73576474 
 6634      57726974 
 6634      65546F67 
 6634      676C6542 
 6635              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
